/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class SubRenderStateFactory {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SubRenderStateFactory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SubRenderStateFactory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreRTShaderJNI.delete_SubRenderStateFactory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SubRenderState createInstance() {
    long cPtr = OgreRTShaderJNI.SubRenderStateFactory_createInstance__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new SubRenderState(cPtr, false);
  }

  public SubRenderState createInstance(ScriptCompiler compiler, PropertyAbstractNode prop, Pass pass, SGScriptTranslator translator) {
    long cPtr = OgreRTShaderJNI.SubRenderStateFactory_createInstance__SWIG_1(swigCPtr, this, ScriptCompiler.getCPtr(compiler), compiler, PropertyAbstractNode.getCPtr(prop), prop, Pass.getCPtr(pass), pass, SGScriptTranslator.getCPtr(translator), translator);
    return (cPtr == 0) ? null : new SubRenderState(cPtr, false);
  }

  public SubRenderState createInstance(ScriptCompiler compiler, PropertyAbstractNode prop, TextureUnitState texState, SGScriptTranslator translator) {
    long cPtr = OgreRTShaderJNI.SubRenderStateFactory_createInstance__SWIG_2(swigCPtr, this, ScriptCompiler.getCPtr(compiler), compiler, PropertyAbstractNode.getCPtr(prop), prop, TextureUnitState.getCPtr(texState), texState, SGScriptTranslator.getCPtr(translator), translator);
    return (cPtr == 0) ? null : new SubRenderState(cPtr, false);
  }

  public SubRenderState createOrRetrieveInstance(SGScriptTranslator translator) {
    long cPtr = OgreRTShaderJNI.SubRenderStateFactory_createOrRetrieveInstance(swigCPtr, this, SGScriptTranslator.getCPtr(translator), translator);
    return (cPtr == 0) ? null : new SubRenderState(cPtr, false);
  }

  public void destroyInstance(SubRenderState subRenderState) {
    OgreRTShaderJNI.SubRenderStateFactory_destroyInstance(swigCPtr, this, SubRenderState.getCPtr(subRenderState), subRenderState);
  }

  public void destroyAllInstances() {
    OgreRTShaderJNI.SubRenderStateFactory_destroyAllInstances(swigCPtr, this);
  }

  public void writeInstance(MaterialSerializer ser, SubRenderState subRenderState, Pass srcPass, Pass dstPass) {
    OgreRTShaderJNI.SubRenderStateFactory_writeInstance__SWIG_0(swigCPtr, this, MaterialSerializer.getCPtr(ser), ser, SubRenderState.getCPtr(subRenderState), subRenderState, Pass.getCPtr(srcPass), srcPass, Pass.getCPtr(dstPass), dstPass);
  }

  public void writeInstance(MaterialSerializer ser, SubRenderState subRenderState, TextureUnitState srcTextureUnit, TextureUnitState dstTextureUnit) {
    OgreRTShaderJNI.SubRenderStateFactory_writeInstance__SWIG_1(swigCPtr, this, MaterialSerializer.getCPtr(ser), ser, SubRenderState.getCPtr(subRenderState), subRenderState, TextureUnitState.getCPtr(srcTextureUnit), srcTextureUnit, TextureUnitState.getCPtr(dstTextureUnit), dstTextureUnit);
  }

}
