/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Log {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Log(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Log obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Log(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Log(String name, boolean debugOutput, boolean suppressFileOutput) {
    this(OgreJNI.new_Log__SWIG_0(name, debugOutput, suppressFileOutput), true);
  }

  public Log(String name, boolean debugOutput) {
    this(OgreJNI.new_Log__SWIG_1(name, debugOutput), true);
  }

  public Log(String name) {
    this(OgreJNI.new_Log__SWIG_2(name), true);
  }

  public String getName() {
    return OgreJNI.Log_getName(swigCPtr, this);
  }

  public boolean isDebugOutputEnabled() {
    return OgreJNI.Log_isDebugOutputEnabled(swigCPtr, this);
  }

  public boolean isFileOutputSuppressed() {
    return OgreJNI.Log_isFileOutputSuppressed(swigCPtr, this);
  }

  public boolean isTimeStampEnabled() {
    return OgreJNI.Log_isTimeStampEnabled(swigCPtr, this);
  }

  public void logMessage(String message, LogMessageLevel lml, boolean maskDebug) {
    OgreJNI.Log_logMessage__SWIG_0(swigCPtr, this, message, lml.swigValue(), maskDebug);
  }

  public void logMessage(String message, LogMessageLevel lml) {
    OgreJNI.Log_logMessage__SWIG_1(swigCPtr, this, message, lml.swigValue());
  }

  public void logMessage(String message) {
    OgreJNI.Log_logMessage__SWIG_2(swigCPtr, this, message);
  }

  public Log.Stream stream(LogMessageLevel lml, boolean maskDebug) {
    return new Log.Stream(OgreJNI.Log_stream__SWIG_0(swigCPtr, this, lml.swigValue(), maskDebug), true);
  }

  public Log.Stream stream(LogMessageLevel lml) {
    return new Log.Stream(OgreJNI.Log_stream__SWIG_1(swigCPtr, this, lml.swigValue()), true);
  }

  public Log.Stream stream() {
    return new Log.Stream(OgreJNI.Log_stream__SWIG_2(swigCPtr, this), true);
  }

  public void setDebugOutputEnabled(boolean debugOutput) {
    OgreJNI.Log_setDebugOutputEnabled(swigCPtr, this, debugOutput);
  }

  public void setLogDetail(LoggingLevel ll) {
    OgreJNI.Log_setLogDetail(swigCPtr, this, ll.swigValue());
  }

  public void setTimeStampEnabled(boolean timeStamp) {
    OgreJNI.Log_setTimeStampEnabled(swigCPtr, this, timeStamp);
  }

  public LoggingLevel getLogDetail() {
    return LoggingLevel.swigToEnum(OgreJNI.Log_getLogDetail(swigCPtr, this));
  }

  public void addListener(LogListener listener) {
    OgreJNI.Log_addListener(swigCPtr, this, LogListener.getCPtr(listener), listener);
  }

  public void removeListener(LogListener listener) {
    OgreJNI.Log_removeListener(swigCPtr, this, LogListener.getCPtr(listener), listener);
  }

  static public class Stream {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected Stream(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Stream obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_Log_Stream(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
      static public class Flush {
        private transient long swigCPtr;
        protected transient boolean swigCMemOwn;
      
        protected Flush(long cPtr, boolean cMemoryOwn) {
          swigCMemOwn = cMemoryOwn;
          swigCPtr = cPtr;
        }
      
        protected static long getCPtr(Flush obj) {
          return (obj == null) ? 0 : obj.swigCPtr;
        }
      
        protected void finalize() {
          delete();
        }
      
        public synchronized void delete() {
          if (swigCPtr != 0) {
            if (swigCMemOwn) {
              swigCMemOwn = false;
              OgreJNI.delete_Log_Stream_Flush(swigCPtr);
            }
            swigCPtr = 0;
          }
        }
      
        public Flush() {
          this(OgreJNI.new_Log_Stream_Flush(), true);
        }
      
      }
  
    public Stream(Log target, LogMessageLevel lml, boolean maskDebug) {
      this(OgreJNI.new_Log_Stream__SWIG_0(Log.getCPtr(target), target, lml.swigValue(), maskDebug), true);
    }
  
    public Stream(Log.Stream rhs) {
      this(OgreJNI.new_Log_Stream__SWIG_1(Log.Stream.getCPtr(rhs), rhs), true);
    }
  
  }

}
