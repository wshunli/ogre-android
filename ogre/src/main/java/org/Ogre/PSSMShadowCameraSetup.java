/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class PSSMShadowCameraSetup extends LiSPSMShadowCameraSetup {
  private transient long swigCPtr;

  protected PSSMShadowCameraSetup(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.PSSMShadowCameraSetup_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PSSMShadowCameraSetup obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_PSSMShadowCameraSetup(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PSSMShadowCameraSetup() {
    this(OgreJNI.new_PSSMShadowCameraSetup(), true);
  }

  public void calculateSplitPoints(long splitCount, float nearDist, float farDist, float lambda) {
    OgreJNI.PSSMShadowCameraSetup_calculateSplitPoints__SWIG_0(swigCPtr, this, splitCount, nearDist, farDist, lambda);
  }

  public void calculateSplitPoints(long splitCount, float nearDist, float farDist) {
    OgreJNI.PSSMShadowCameraSetup_calculateSplitPoints__SWIG_1(swigCPtr, this, splitCount, nearDist, farDist);
  }

  public void setSplitPoints(SWIGTYPE_p_Ogre__vectorT_float_t__type newSplitPoints) {
    OgreJNI.PSSMShadowCameraSetup_setSplitPoints(swigCPtr, this, SWIGTYPE_p_Ogre__vectorT_float_t__type.getCPtr(newSplitPoints));
  }

  public void setOptimalAdjustFactor(long splitIndex, float factor) {
    OgreJNI.PSSMShadowCameraSetup_setOptimalAdjustFactor(swigCPtr, this, splitIndex, factor);
  }

  public void setSplitPadding(float pad) {
    OgreJNI.PSSMShadowCameraSetup_setSplitPadding(swigCPtr, this, pad);
  }

  public float getSplitPadding() {
    return OgreJNI.PSSMShadowCameraSetup_getSplitPadding(swigCPtr, this);
  }

  public long getSplitCount() {
    return OgreJNI.PSSMShadowCameraSetup_getSplitCount(swigCPtr, this);
  }

  public void getShadowCamera(SceneManager sm, Camera cam, Viewport vp, Light light, Camera texCam, long iteration) {
    OgreJNI.PSSMShadowCameraSetup_getShadowCamera(swigCPtr, this, SceneManager.getCPtr(sm), sm, Camera.getCPtr(cam), cam, Viewport.getCPtr(vp), vp, Light.getCPtr(light), light, Camera.getCPtr(texCam), texCam, iteration);
  }

  public SWIGTYPE_p_Ogre__vectorT_float_t__type getSplitPoints() {
    return new SWIGTYPE_p_Ogre__vectorT_float_t__type(OgreJNI.PSSMShadowCameraSetup_getSplitPoints(swigCPtr, this), false);
  }

  public float getOptimalAdjustFactor(long splitIndex) {
    return OgreJNI.PSSMShadowCameraSetup_getOptimalAdjustFactor__SWIG_0(swigCPtr, this, splitIndex);
  }

  public float getOptimalAdjustFactor() {
    return OgreJNI.PSSMShadowCameraSetup_getOptimalAdjustFactor__SWIG_1(swigCPtr, this);
  }

}
