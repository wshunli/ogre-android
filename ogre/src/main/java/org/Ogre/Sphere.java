/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Sphere {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Sphere(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Sphere obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Sphere(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Sphere() {
    this(OgreJNI.new_Sphere__SWIG_0(), true);
  }

  public Sphere(Vector3 center, float radius) {
    this(OgreJNI.new_Sphere__SWIG_1(Vector3.getCPtr(center), center, radius), true);
  }

  public float getRadius() {
    return OgreJNI.Sphere_getRadius(swigCPtr, this);
  }

  public void setRadius(float radius) {
    OgreJNI.Sphere_setRadius(swigCPtr, this, radius);
  }

  public Vector3 getCenter() {
    return new Vector3(OgreJNI.Sphere_getCenter(swigCPtr, this), false);
  }

  public void setCenter(Vector3 center) {
    OgreJNI.Sphere_setCenter(swigCPtr, this, Vector3.getCPtr(center), center);
  }

  public boolean intersects(Sphere s) {
    return OgreJNI.Sphere_intersects__SWIG_0(swigCPtr, this, Sphere.getCPtr(s), s);
  }

  public boolean intersects(AxisAlignedBox box) {
    return OgreJNI.Sphere_intersects__SWIG_1(swigCPtr, this, AxisAlignedBox.getCPtr(box), box);
  }

  public boolean intersects(Plane plane) {
    return OgreJNI.Sphere_intersects__SWIG_2(swigCPtr, this, Plane.getCPtr(plane), plane);
  }

  public boolean intersects(Vector3 v) {
    return OgreJNI.Sphere_intersects__SWIG_3(swigCPtr, this, Vector3.getCPtr(v), v);
  }

  public void merge(Sphere oth) {
    OgreJNI.Sphere_merge(swigCPtr, this, Sphere.getCPtr(oth), oth);
  }

}
