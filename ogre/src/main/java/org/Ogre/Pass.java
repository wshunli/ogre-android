/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Pass {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Pass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Pass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Pass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class HashFunc {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected HashFunc(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(HashFunc obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_Pass_HashFunc(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
  }

  public Pass(Technique parent, int index) {
    this(OgreJNI.new_Pass__SWIG_0(Technique.getCPtr(parent), parent, index), true);
  }

  public Pass(Technique parent, int index, Pass oth) {
    this(OgreJNI.new_Pass__SWIG_1(Technique.getCPtr(parent), parent, index, Pass.getCPtr(oth), oth), true);
  }

  public boolean isProgrammable() {
    return OgreJNI.Pass_isProgrammable(swigCPtr, this);
  }

  public boolean hasVertexProgram() {
    return OgreJNI.Pass_hasVertexProgram(swigCPtr, this);
  }

  public boolean hasFragmentProgram() {
    return OgreJNI.Pass_hasFragmentProgram(swigCPtr, this);
  }

  public boolean hasGeometryProgram() {
    return OgreJNI.Pass_hasGeometryProgram(swigCPtr, this);
  }

  public boolean hasTessellationHullProgram() {
    return OgreJNI.Pass_hasTessellationHullProgram(swigCPtr, this);
  }

  public boolean hasTessellationDomainProgram() {
    return OgreJNI.Pass_hasTessellationDomainProgram(swigCPtr, this);
  }

  public boolean hasComputeProgram() {
    return OgreJNI.Pass_hasComputeProgram(swigCPtr, this);
  }

  public boolean hasShadowCasterVertexProgram() {
    return OgreJNI.Pass_hasShadowCasterVertexProgram(swigCPtr, this);
  }

  public boolean hasShadowCasterFragmentProgram() {
    return OgreJNI.Pass_hasShadowCasterFragmentProgram(swigCPtr, this);
  }

  public boolean hasShadowReceiverVertexProgram() {
    return OgreJNI.Pass_hasShadowReceiverVertexProgram(swigCPtr, this);
  }

  public boolean hasShadowReceiverFragmentProgram() {
    return OgreJNI.Pass_hasShadowReceiverFragmentProgram(swigCPtr, this);
  }

  public long calculateSize() {
    return OgreJNI.Pass_calculateSize(swigCPtr, this);
  }

  public int getIndex() {
    return OgreJNI.Pass_getIndex(swigCPtr, this);
  }

  public void setName(String name) {
    OgreJNI.Pass_setName(swigCPtr, this, name);
  }

  public String getName() {
    return OgreJNI.Pass_getName(swigCPtr, this);
  }

  public void setAmbient(float red, float green, float blue) {
    OgreJNI.Pass_setAmbient__SWIG_0(swigCPtr, this, red, green, blue);
  }

  public void setAmbient(ColourValue ambient) {
    OgreJNI.Pass_setAmbient__SWIG_1(swigCPtr, this, ColourValue.getCPtr(ambient), ambient);
  }

  public void setDiffuse(float red, float green, float blue, float alpha) {
    OgreJNI.Pass_setDiffuse__SWIG_0(swigCPtr, this, red, green, blue, alpha);
  }

  public void setDiffuse(ColourValue diffuse) {
    OgreJNI.Pass_setDiffuse__SWIG_1(swigCPtr, this, ColourValue.getCPtr(diffuse), diffuse);
  }

  public void setSpecular(float red, float green, float blue, float alpha) {
    OgreJNI.Pass_setSpecular__SWIG_0(swigCPtr, this, red, green, blue, alpha);
  }

  public void setSpecular(ColourValue specular) {
    OgreJNI.Pass_setSpecular__SWIG_1(swigCPtr, this, ColourValue.getCPtr(specular), specular);
  }

  public void setShininess(float val) {
    OgreJNI.Pass_setShininess(swigCPtr, this, val);
  }

  public void setSelfIllumination(float red, float green, float blue) {
    OgreJNI.Pass_setSelfIllumination__SWIG_0(swigCPtr, this, red, green, blue);
  }

  public void setEmissive(float red, float green, float blue) {
    OgreJNI.Pass_setEmissive__SWIG_0(swigCPtr, this, red, green, blue);
  }

  public void setSelfIllumination(ColourValue selfIllum) {
    OgreJNI.Pass_setSelfIllumination__SWIG_1(swigCPtr, this, ColourValue.getCPtr(selfIllum), selfIllum);
  }

  public void setEmissive(ColourValue emissive) {
    OgreJNI.Pass_setEmissive__SWIG_1(swigCPtr, this, ColourValue.getCPtr(emissive), emissive);
  }

  public void setVertexColourTracking(int tracking) {
    OgreJNI.Pass_setVertexColourTracking(swigCPtr, this, tracking);
  }

  public float getPointSize() {
    return OgreJNI.Pass_getPointSize(swigCPtr, this);
  }

  public void setPointSize(float ps) {
    OgreJNI.Pass_setPointSize(swigCPtr, this, ps);
  }

  public void setPointSpritesEnabled(boolean enabled) {
    OgreJNI.Pass_setPointSpritesEnabled(swigCPtr, this, enabled);
  }

  public boolean getPointSpritesEnabled() {
    return OgreJNI.Pass_getPointSpritesEnabled(swigCPtr, this);
  }

  public void setPointAttenuation(boolean enabled, float constant, float linear, float quadratic) {
    OgreJNI.Pass_setPointAttenuation__SWIG_0(swigCPtr, this, enabled, constant, linear, quadratic);
  }

  public void setPointAttenuation(boolean enabled, float constant, float linear) {
    OgreJNI.Pass_setPointAttenuation__SWIG_1(swigCPtr, this, enabled, constant, linear);
  }

  public void setPointAttenuation(boolean enabled, float constant) {
    OgreJNI.Pass_setPointAttenuation__SWIG_2(swigCPtr, this, enabled, constant);
  }

  public void setPointAttenuation(boolean enabled) {
    OgreJNI.Pass_setPointAttenuation__SWIG_3(swigCPtr, this, enabled);
  }

  public boolean isPointAttenuationEnabled() {
    return OgreJNI.Pass_isPointAttenuationEnabled(swigCPtr, this);
  }

  public float getPointAttenuationConstant() {
    return OgreJNI.Pass_getPointAttenuationConstant(swigCPtr, this);
  }

  public float getPointAttenuationLinear() {
    return OgreJNI.Pass_getPointAttenuationLinear(swigCPtr, this);
  }

  public float getPointAttenuationQuadratic() {
    return OgreJNI.Pass_getPointAttenuationQuadratic(swigCPtr, this);
  }

  public void setPointMinSize(float min) {
    OgreJNI.Pass_setPointMinSize(swigCPtr, this, min);
  }

  public float getPointMinSize() {
    return OgreJNI.Pass_getPointMinSize(swigCPtr, this);
  }

  public void setPointMaxSize(float max) {
    OgreJNI.Pass_setPointMaxSize(swigCPtr, this, max);
  }

  public float getPointMaxSize() {
    return OgreJNI.Pass_getPointMaxSize(swigCPtr, this);
  }

  public ColourValue getAmbient() {
    return new ColourValue(OgreJNI.Pass_getAmbient(swigCPtr, this), false);
  }

  public ColourValue getDiffuse() {
    return new ColourValue(OgreJNI.Pass_getDiffuse(swigCPtr, this), false);
  }

  public ColourValue getSpecular() {
    return new ColourValue(OgreJNI.Pass_getSpecular(swigCPtr, this), false);
  }

  public ColourValue getSelfIllumination() {
    return new ColourValue(OgreJNI.Pass_getSelfIllumination(swigCPtr, this), false);
  }

  public ColourValue getEmissive() {
    return new ColourValue(OgreJNI.Pass_getEmissive(swigCPtr, this), false);
  }

  public float getShininess() {
    return OgreJNI.Pass_getShininess(swigCPtr, this);
  }

  public int getVertexColourTracking() {
    return OgreJNI.Pass_getVertexColourTracking(swigCPtr, this);
  }

  public TextureUnitState createTextureUnitState(String textureName, int texCoordSet) {
    long cPtr = OgreJNI.Pass_createTextureUnitState__SWIG_0(swigCPtr, this, textureName, texCoordSet);
    return (cPtr == 0) ? null : new TextureUnitState(cPtr, false);
  }

  public TextureUnitState createTextureUnitState(String textureName) {
    long cPtr = OgreJNI.Pass_createTextureUnitState__SWIG_1(swigCPtr, this, textureName);
    return (cPtr == 0) ? null : new TextureUnitState(cPtr, false);
  }

  public TextureUnitState createTextureUnitState() {
    long cPtr = OgreJNI.Pass_createTextureUnitState__SWIG_2(swigCPtr, this);
    return (cPtr == 0) ? null : new TextureUnitState(cPtr, false);
  }

  public void addTextureUnitState(TextureUnitState state) {
    OgreJNI.Pass_addTextureUnitState(swigCPtr, this, TextureUnitState.getCPtr(state), state);
  }

  public TextureUnitState getTextureUnitState(int index) {
    long cPtr = OgreJNI.Pass_getTextureUnitState__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new TextureUnitState(cPtr, false);
  }

  public TextureUnitState getTextureUnitState(String name) {
    long cPtr = OgreJNI.Pass_getTextureUnitState__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new TextureUnitState(cPtr, false);
  }

  public int getTextureUnitStateIndex(TextureUnitState state) {
    return OgreJNI.Pass_getTextureUnitStateIndex(swigCPtr, this, TextureUnitState.getCPtr(state), state);
  }

  public TextureUnitStates getTextureUnitStates() {
    return new TextureUnitStates(OgreJNI.Pass_getTextureUnitStates(swigCPtr, this), false);
  }

  public void removeTextureUnitState(int index) {
    OgreJNI.Pass_removeTextureUnitState(swigCPtr, this, index);
  }

  public void removeAllTextureUnitStates() {
    OgreJNI.Pass_removeAllTextureUnitStates(swigCPtr, this);
  }

  public int getNumTextureUnitStates() {
    return OgreJNI.Pass_getNumTextureUnitStates(swigCPtr, this);
  }

  public void setSceneBlending(SceneBlendType sbt) {
    OgreJNI.Pass_setSceneBlending__SWIG_0(swigCPtr, this, sbt.swigValue());
  }

  public void setSeparateSceneBlending(SceneBlendType sbt, SceneBlendType sbta) {
    OgreJNI.Pass_setSeparateSceneBlending__SWIG_0(swigCPtr, this, sbt.swigValue(), sbta.swigValue());
  }

  public void setSceneBlending(SceneBlendFactor sourceFactor, SceneBlendFactor destFactor) {
    OgreJNI.Pass_setSceneBlending__SWIG_1(swigCPtr, this, sourceFactor.swigValue(), destFactor.swigValue());
  }

  public void setSeparateSceneBlending(SceneBlendFactor sourceFactor, SceneBlendFactor destFactor, SceneBlendFactor sourceFactorAlpha, SceneBlendFactor destFactorAlpha) {
    OgreJNI.Pass_setSeparateSceneBlending__SWIG_1(swigCPtr, this, sourceFactor.swigValue(), destFactor.swigValue(), sourceFactorAlpha.swigValue(), destFactorAlpha.swigValue());
  }

  public boolean hasSeparateSceneBlending() {
    return OgreJNI.Pass_hasSeparateSceneBlending(swigCPtr, this);
  }

  public SceneBlendFactor getSourceBlendFactor() {
    return SceneBlendFactor.swigToEnum(OgreJNI.Pass_getSourceBlendFactor(swigCPtr, this));
  }

  public SceneBlendFactor getDestBlendFactor() {
    return SceneBlendFactor.swigToEnum(OgreJNI.Pass_getDestBlendFactor(swigCPtr, this));
  }

  public SceneBlendFactor getSourceBlendFactorAlpha() {
    return SceneBlendFactor.swigToEnum(OgreJNI.Pass_getSourceBlendFactorAlpha(swigCPtr, this));
  }

  public SceneBlendFactor getDestBlendFactorAlpha() {
    return SceneBlendFactor.swigToEnum(OgreJNI.Pass_getDestBlendFactorAlpha(swigCPtr, this));
  }

  public void setSceneBlendingOperation(SceneBlendOperation op) {
    OgreJNI.Pass_setSceneBlendingOperation(swigCPtr, this, op.swigValue());
  }

  public void setSeparateSceneBlendingOperation(SceneBlendOperation op, SceneBlendOperation alphaOp) {
    OgreJNI.Pass_setSeparateSceneBlendingOperation(swigCPtr, this, op.swigValue(), alphaOp.swigValue());
  }

  public boolean hasSeparateSceneBlendingOperations() {
    return OgreJNI.Pass_hasSeparateSceneBlendingOperations(swigCPtr, this);
  }

  public SceneBlendOperation getSceneBlendingOperation() {
    return SceneBlendOperation.swigToEnum(OgreJNI.Pass_getSceneBlendingOperation(swigCPtr, this));
  }

  public SceneBlendOperation getSceneBlendingOperationAlpha() {
    return SceneBlendOperation.swigToEnum(OgreJNI.Pass_getSceneBlendingOperationAlpha(swigCPtr, this));
  }

  public boolean isTransparent() {
    return OgreJNI.Pass_isTransparent(swigCPtr, this);
  }

  public void setDepthCheckEnabled(boolean enabled) {
    OgreJNI.Pass_setDepthCheckEnabled(swigCPtr, this, enabled);
  }

  public boolean getDepthCheckEnabled() {
    return OgreJNI.Pass_getDepthCheckEnabled(swigCPtr, this);
  }

  public void setDepthWriteEnabled(boolean enabled) {
    OgreJNI.Pass_setDepthWriteEnabled(swigCPtr, this, enabled);
  }

  public boolean getDepthWriteEnabled() {
    return OgreJNI.Pass_getDepthWriteEnabled(swigCPtr, this);
  }

  public void setDepthFunction(CompareFunction func) {
    OgreJNI.Pass_setDepthFunction(swigCPtr, this, func.swigValue());
  }

  public CompareFunction getDepthFunction() {
    return CompareFunction.swigToEnum(OgreJNI.Pass_getDepthFunction(swigCPtr, this));
  }

  public void setColourWriteEnabled(boolean enabled) {
    OgreJNI.Pass_setColourWriteEnabled(swigCPtr, this, enabled);
  }

  public boolean getColourWriteEnabled() {
    return OgreJNI.Pass_getColourWriteEnabled(swigCPtr, this);
  }

  public void setCullingMode(CullingMode mode) {
    OgreJNI.Pass_setCullingMode(swigCPtr, this, mode.swigValue());
  }

  public CullingMode getCullingMode() {
    return CullingMode.swigToEnum(OgreJNI.Pass_getCullingMode(swigCPtr, this));
  }

  public void setManualCullingMode(ManualCullingMode mode) {
    OgreJNI.Pass_setManualCullingMode(swigCPtr, this, mode.swigValue());
  }

  public ManualCullingMode getManualCullingMode() {
    return ManualCullingMode.swigToEnum(OgreJNI.Pass_getManualCullingMode(swigCPtr, this));
  }

  public void setLightingEnabled(boolean enabled) {
    OgreJNI.Pass_setLightingEnabled(swigCPtr, this, enabled);
  }

  public boolean getLightingEnabled() {
    return OgreJNI.Pass_getLightingEnabled(swigCPtr, this);
  }

  public void setMaxSimultaneousLights(int maxLights) {
    OgreJNI.Pass_setMaxSimultaneousLights(swigCPtr, this, maxLights);
  }

  public int getMaxSimultaneousLights() {
    return OgreJNI.Pass_getMaxSimultaneousLights(swigCPtr, this);
  }

  public void setStartLight(int startLight) {
    OgreJNI.Pass_setStartLight(swigCPtr, this, startLight);
  }

  public int getStartLight() {
    return OgreJNI.Pass_getStartLight(swigCPtr, this);
  }

  public void setLightMask(long mask) {
    OgreJNI.Pass_setLightMask(swigCPtr, this, mask);
  }

  public long getLightMask() {
    return OgreJNI.Pass_getLightMask(swigCPtr, this);
  }

  public void setShadingMode(ShadeOptions mode) {
    OgreJNI.Pass_setShadingMode(swigCPtr, this, mode.swigValue());
  }

  public ShadeOptions getShadingMode() {
    return ShadeOptions.swigToEnum(OgreJNI.Pass_getShadingMode(swigCPtr, this));
  }

  public void setPolygonMode(PolygonMode mode) {
    OgreJNI.Pass_setPolygonMode(swigCPtr, this, mode.swigValue());
  }

  public PolygonMode getPolygonMode() {
    return PolygonMode.swigToEnum(OgreJNI.Pass_getPolygonMode(swigCPtr, this));
  }

  public void setPolygonModeOverrideable(boolean override) {
    OgreJNI.Pass_setPolygonModeOverrideable(swigCPtr, this, override);
  }

  public boolean getPolygonModeOverrideable() {
    return OgreJNI.Pass_getPolygonModeOverrideable(swigCPtr, this);
  }

  public void setFog(boolean overrideScene, FogMode mode, ColourValue colour, float expDensity, float linearStart, float linearEnd) {
    OgreJNI.Pass_setFog__SWIG_0(swigCPtr, this, overrideScene, mode.swigValue(), ColourValue.getCPtr(colour), colour, expDensity, linearStart, linearEnd);
  }

  public void setFog(boolean overrideScene, FogMode mode, ColourValue colour, float expDensity, float linearStart) {
    OgreJNI.Pass_setFog__SWIG_1(swigCPtr, this, overrideScene, mode.swigValue(), ColourValue.getCPtr(colour), colour, expDensity, linearStart);
  }

  public void setFog(boolean overrideScene, FogMode mode, ColourValue colour, float expDensity) {
    OgreJNI.Pass_setFog__SWIG_2(swigCPtr, this, overrideScene, mode.swigValue(), ColourValue.getCPtr(colour), colour, expDensity);
  }

  public void setFog(boolean overrideScene, FogMode mode, ColourValue colour) {
    OgreJNI.Pass_setFog__SWIG_3(swigCPtr, this, overrideScene, mode.swigValue(), ColourValue.getCPtr(colour), colour);
  }

  public void setFog(boolean overrideScene, FogMode mode) {
    OgreJNI.Pass_setFog__SWIG_4(swigCPtr, this, overrideScene, mode.swigValue());
  }

  public void setFog(boolean overrideScene) {
    OgreJNI.Pass_setFog__SWIG_5(swigCPtr, this, overrideScene);
  }

  public boolean getFogOverride() {
    return OgreJNI.Pass_getFogOverride(swigCPtr, this);
  }

  public FogMode getFogMode() {
    return FogMode.swigToEnum(OgreJNI.Pass_getFogMode(swigCPtr, this));
  }

  public ColourValue getFogColour() {
    return new ColourValue(OgreJNI.Pass_getFogColour(swigCPtr, this), false);
  }

  public float getFogStart() {
    return OgreJNI.Pass_getFogStart(swigCPtr, this);
  }

  public float getFogEnd() {
    return OgreJNI.Pass_getFogEnd(swigCPtr, this);
  }

  public float getFogDensity() {
    return OgreJNI.Pass_getFogDensity(swigCPtr, this);
  }

  public void setDepthBias(float constantBias, float slopeScaleBias) {
    OgreJNI.Pass_setDepthBias__SWIG_0(swigCPtr, this, constantBias, slopeScaleBias);
  }

  public void setDepthBias(float constantBias) {
    OgreJNI.Pass_setDepthBias__SWIG_1(swigCPtr, this, constantBias);
  }

  public float getDepthBiasConstant() {
    return OgreJNI.Pass_getDepthBiasConstant(swigCPtr, this);
  }

  public float getDepthBiasSlopeScale() {
    return OgreJNI.Pass_getDepthBiasSlopeScale(swigCPtr, this);
  }

  public void setIterationDepthBias(float biasPerIteration) {
    OgreJNI.Pass_setIterationDepthBias(swigCPtr, this, biasPerIteration);
  }

  public float getIterationDepthBias() {
    return OgreJNI.Pass_getIterationDepthBias(swigCPtr, this);
  }

  public void setAlphaRejectSettings(CompareFunction func, short value, boolean alphaToCoverageEnabled) {
    OgreJNI.Pass_setAlphaRejectSettings__SWIG_0(swigCPtr, this, func.swigValue(), value, alphaToCoverageEnabled);
  }

  public void setAlphaRejectSettings(CompareFunction func, short value) {
    OgreJNI.Pass_setAlphaRejectSettings__SWIG_1(swigCPtr, this, func.swigValue(), value);
  }

  public void setAlphaRejectFunction(CompareFunction func) {
    OgreJNI.Pass_setAlphaRejectFunction(swigCPtr, this, func.swigValue());
  }

  public void setAlphaRejectValue(short val) {
    OgreJNI.Pass_setAlphaRejectValue(swigCPtr, this, val);
  }

  public CompareFunction getAlphaRejectFunction() {
    return CompareFunction.swigToEnum(OgreJNI.Pass_getAlphaRejectFunction(swigCPtr, this));
  }

  public short getAlphaRejectValue() {
    return OgreJNI.Pass_getAlphaRejectValue(swigCPtr, this);
  }

  public void setAlphaToCoverageEnabled(boolean enabled) {
    OgreJNI.Pass_setAlphaToCoverageEnabled(swigCPtr, this, enabled);
  }

  public boolean isAlphaToCoverageEnabled() {
    return OgreJNI.Pass_isAlphaToCoverageEnabled(swigCPtr, this);
  }

  public void setTransparentSortingEnabled(boolean enabled) {
    OgreJNI.Pass_setTransparentSortingEnabled(swigCPtr, this, enabled);
  }

  public boolean getTransparentSortingEnabled() {
    return OgreJNI.Pass_getTransparentSortingEnabled(swigCPtr, this);
  }

  public void setTransparentSortingForced(boolean enabled) {
    OgreJNI.Pass_setTransparentSortingForced(swigCPtr, this, enabled);
  }

  public boolean getTransparentSortingForced() {
    return OgreJNI.Pass_getTransparentSortingForced(swigCPtr, this);
  }

  public void setIteratePerLight(boolean enabled, boolean onlyForOneLightType, Light.LightTypes lightType) {
    OgreJNI.Pass_setIteratePerLight__SWIG_0(swigCPtr, this, enabled, onlyForOneLightType, lightType.swigValue());
  }

  public void setIteratePerLight(boolean enabled, boolean onlyForOneLightType) {
    OgreJNI.Pass_setIteratePerLight__SWIG_1(swigCPtr, this, enabled, onlyForOneLightType);
  }

  public void setIteratePerLight(boolean enabled) {
    OgreJNI.Pass_setIteratePerLight__SWIG_2(swigCPtr, this, enabled);
  }

  public boolean getIteratePerLight() {
    return OgreJNI.Pass_getIteratePerLight(swigCPtr, this);
  }

  public boolean getRunOnlyForOneLightType() {
    return OgreJNI.Pass_getRunOnlyForOneLightType(swigCPtr, this);
  }

  public Light.LightTypes getOnlyLightType() {
    return Light.LightTypes.swigToEnum(OgreJNI.Pass_getOnlyLightType(swigCPtr, this));
  }

  public void setLightCountPerIteration(int c) {
    OgreJNI.Pass_setLightCountPerIteration(swigCPtr, this, c);
  }

  public int getLightCountPerIteration() {
    return OgreJNI.Pass_getLightCountPerIteration(swigCPtr, this);
  }

  public Technique getParent() {
    long cPtr = OgreJNI.Pass_getParent(swigCPtr, this);
    return (cPtr == 0) ? null : new Technique(cPtr, false);
  }

  public String getResourceGroup() {
    return OgreJNI.Pass_getResourceGroup(swigCPtr, this);
  }

  public void setVertexProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setVertexProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setVertexProgram(String name) {
    OgreJNI.Pass_setVertexProgram__SWIG_1(swigCPtr, this, name);
  }

  public GpuProgramPtr getGpuProgram(GpuProgramType programType) {
    return new GpuProgramPtr(OgreJNI.Pass_getGpuProgram(swigCPtr, this, programType.swigValue()), true);
  }

  public boolean hasGpuProgram(GpuProgramType programType) {
    return OgreJNI.Pass_hasGpuProgram(swigCPtr, this, programType.swigValue());
  }

  public void setVertexProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setVertexProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getVertexProgramName() {
    return OgreJNI.Pass_getVertexProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getVertexProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getVertexProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getVertexProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getVertexProgram(swigCPtr, this), false);
  }

  public void setShadowCasterVertexProgram(String name) {
    OgreJNI.Pass_setShadowCasterVertexProgram(swigCPtr, this, name);
  }

  public void setShadowCasterVertexProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setShadowCasterVertexProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getShadowCasterVertexProgramName() {
    return OgreJNI.Pass_getShadowCasterVertexProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getShadowCasterVertexProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getShadowCasterVertexProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getShadowCasterVertexProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getShadowCasterVertexProgram(swigCPtr, this), false);
  }

  public void setShadowCasterFragmentProgram(String name) {
    OgreJNI.Pass_setShadowCasterFragmentProgram(swigCPtr, this, name);
  }

  public void setShadowCasterFragmentProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setShadowCasterFragmentProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getShadowCasterFragmentProgramName() {
    return OgreJNI.Pass_getShadowCasterFragmentProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getShadowCasterFragmentProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getShadowCasterFragmentProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getShadowCasterFragmentProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getShadowCasterFragmentProgram(swigCPtr, this), false);
  }

  public void setShadowReceiverVertexProgram(String name) {
    OgreJNI.Pass_setShadowReceiverVertexProgram(swigCPtr, this, name);
  }

  public void setShadowReceiverVertexProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setShadowReceiverVertexProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public void setShadowReceiverFragmentProgram(String name) {
    OgreJNI.Pass_setShadowReceiverFragmentProgram(swigCPtr, this, name);
  }

  public void setShadowReceiverFragmentProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setShadowReceiverFragmentProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getShadowReceiverVertexProgramName() {
    return OgreJNI.Pass_getShadowReceiverVertexProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getShadowReceiverVertexProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getShadowReceiverVertexProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getShadowReceiverVertexProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getShadowReceiverVertexProgram(swigCPtr, this), false);
  }

  public String getShadowReceiverFragmentProgramName() {
    return OgreJNI.Pass_getShadowReceiverFragmentProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getShadowReceiverFragmentProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getShadowReceiverFragmentProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getShadowReceiverFragmentProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getShadowReceiverFragmentProgram(swigCPtr, this), false);
  }

  public void setFragmentProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setFragmentProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setFragmentProgram(String name) {
    OgreJNI.Pass_setFragmentProgram__SWIG_1(swigCPtr, this, name);
  }

  public void setFragmentProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setFragmentProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getFragmentProgramName() {
    return OgreJNI.Pass_getFragmentProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getFragmentProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getFragmentProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getFragmentProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getFragmentProgram(swigCPtr, this), false);
  }

  public void setGeometryProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setGeometryProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setGeometryProgram(String name) {
    OgreJNI.Pass_setGeometryProgram__SWIG_1(swigCPtr, this, name);
  }

  public void setGeometryProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setGeometryProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getGeometryProgramName() {
    return OgreJNI.Pass_getGeometryProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getGeometryProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getGeometryProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getGeometryProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getGeometryProgram(swigCPtr, this), false);
  }

  public Pass _split(int numUnits) {
    long cPtr = OgreJNI.Pass__split(swigCPtr, this, numUnits);
    return (cPtr == 0) ? null : new Pass(cPtr, false);
  }

  public void _notifyIndex(int index) {
    OgreJNI.Pass__notifyIndex(swigCPtr, this, index);
  }

  public void _prepare() {
    OgreJNI.Pass__prepare(swigCPtr, this);
  }

  public void _unprepare() {
    OgreJNI.Pass__unprepare(swigCPtr, this);
  }

  public void _load() {
    OgreJNI.Pass__load(swigCPtr, this);
  }

  public void _unload() {
    OgreJNI.Pass__unload(swigCPtr, this);
  }

  public boolean isLoaded() {
    return OgreJNI.Pass_isLoaded(swigCPtr, this);
  }

  public long getHash() {
    return OgreJNI.Pass_getHash(swigCPtr, this);
  }

  public void _dirtyHash() {
    OgreJNI.Pass__dirtyHash(swigCPtr, this);
  }

  public void _recalculateHash() {
    OgreJNI.Pass__recalculateHash(swigCPtr, this);
  }

  public void _notifyNeedsRecompile() {
    OgreJNI.Pass__notifyNeedsRecompile(swigCPtr, this);
  }

  public void _updateAutoParams(SWIGTYPE_p_Ogre__AutoParamDataSource source, int variabilityMask) {
    OgreJNI.Pass__updateAutoParams(swigCPtr, this, SWIGTYPE_p_Ogre__AutoParamDataSource.getCPtr(source), variabilityMask);
  }

  public int _getTextureUnitWithContentTypeIndex(TextureUnitState.ContentType contentType, int index) {
    return OgreJNI.Pass__getTextureUnitWithContentTypeIndex(swigCPtr, this, contentType.swigValue(), index);
  }

  public void setTextureFiltering(TextureFilterOptions filterType) {
    OgreJNI.Pass_setTextureFiltering(swigCPtr, this, filterType.swigValue());
  }

  public void setTextureAnisotropy(long maxAniso) {
    OgreJNI.Pass_setTextureAnisotropy(swigCPtr, this, maxAniso);
  }

  public void setNormaliseNormals(boolean normalise) {
    OgreJNI.Pass_setNormaliseNormals(swigCPtr, this, normalise);
  }

  public boolean getNormaliseNormals() {
    return OgreJNI.Pass_getNormaliseNormals(swigCPtr, this);
  }

  public static SWIGTYPE_p_Ogre__setT_Ogre__Pass_p_std__lessT_Ogre__Pass_p_t_t__type getDirtyHashList() {
    return new SWIGTYPE_p_Ogre__setT_Ogre__Pass_p_std__lessT_Ogre__Pass_p_t_t__type(OgreJNI.Pass_getDirtyHashList(), false);
  }

  public static SWIGTYPE_p_Ogre__setT_Ogre__Pass_p_std__lessT_Ogre__Pass_p_t_t__type getPassGraveyard() {
    return new SWIGTYPE_p_Ogre__setT_Ogre__Pass_p_std__lessT_Ogre__Pass_p_t_t__type(OgreJNI.Pass_getPassGraveyard(), false);
  }

  public static void clearDirtyHashList() {
    OgreJNI.Pass_clearDirtyHashList();
  }

  public static void processPendingPassUpdates() {
    OgreJNI.Pass_processPendingPassUpdates();
  }

  public void queueForDeletion() {
    OgreJNI.Pass_queueForDeletion(swigCPtr, this);
  }

  public boolean isAmbientOnly() {
    return OgreJNI.Pass_isAmbientOnly(swigCPtr, this);
  }

  public void setPassIterationCount(long count) {
    OgreJNI.Pass_setPassIterationCount(swigCPtr, this, count);
  }

  public long getPassIterationCount() {
    return OgreJNI.Pass_getPassIterationCount(swigCPtr, this);
  }

  public boolean applyTextureAliases(SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t aliasList, boolean apply) {
    return OgreJNI.Pass_applyTextureAliases__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(aliasList), apply);
  }

  public boolean applyTextureAliases(SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t aliasList) {
    return OgreJNI.Pass_applyTextureAliases__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(aliasList));
  }

  public void setLightScissoringEnabled(boolean enabled) {
    OgreJNI.Pass_setLightScissoringEnabled(swigCPtr, this, enabled);
  }

  public boolean getLightScissoringEnabled() {
    return OgreJNI.Pass_getLightScissoringEnabled(swigCPtr, this);
  }

  public void setLightClipPlanesEnabled(boolean enabled) {
    OgreJNI.Pass_setLightClipPlanesEnabled(swigCPtr, this, enabled);
  }

  public boolean getLightClipPlanesEnabled() {
    return OgreJNI.Pass_getLightClipPlanesEnabled(swigCPtr, this);
  }

  public void setIlluminationStage(IlluminationStage is) {
    OgreJNI.Pass_setIlluminationStage(swigCPtr, this, is.swigValue());
  }

  public IlluminationStage getIlluminationStage() {
    return IlluminationStage.swigToEnum(OgreJNI.Pass_getIlluminationStage(swigCPtr, this));
  }

  public static void setHashFunction(Pass.BuiltinHashFunction builtin) {
    OgreJNI.Pass_setHashFunction__SWIG_0(builtin.swigValue());
  }

  public static void setHashFunction(Pass.HashFunc hashFunc) {
    OgreJNI.Pass_setHashFunction__SWIG_1(Pass.HashFunc.getCPtr(hashFunc), hashFunc);
  }

  public static Pass.HashFunc getHashFunction() {
    long cPtr = OgreJNI.Pass_getHashFunction();
    return (cPtr == 0) ? null : new Pass.HashFunc(cPtr, false);
  }

  public static Pass.HashFunc getBuiltinHashFunction(Pass.BuiltinHashFunction builtin) {
    long cPtr = OgreJNI.Pass_getBuiltinHashFunction(builtin.swigValue());
    return (cPtr == 0) ? null : new Pass.HashFunc(cPtr, false);
  }

  public UserObjectBindings getUserObjectBindings() {
    return new UserObjectBindings(OgreJNI.Pass_getUserObjectBindings__SWIG_0(swigCPtr, this), false);
  }

  public void setTessellationHullProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setTessellationHullProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setTessellationHullProgram(String name) {
    OgreJNI.Pass_setTessellationHullProgram__SWIG_1(swigCPtr, this, name);
  }

  public void setTessellationHullProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setTessellationHullProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getTessellationHullProgramName() {
    return OgreJNI.Pass_getTessellationHullProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getTessellationHullProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getTessellationHullProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getTessellationHullProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getTessellationHullProgram(swigCPtr, this), false);
  }

  public void setTessellationDomainProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setTessellationDomainProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setTessellationDomainProgram(String name) {
    OgreJNI.Pass_setTessellationDomainProgram__SWIG_1(swigCPtr, this, name);
  }

  public void setTessellationDomainProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setTessellationDomainProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getTessellationDomainProgramName() {
    return OgreJNI.Pass_getTessellationDomainProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getTessellationDomainProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getTessellationDomainProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getTessellationDomainProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getTessellationDomainProgram(swigCPtr, this), false);
  }

  public void setComputeProgram(String name, boolean resetParams) {
    OgreJNI.Pass_setComputeProgram__SWIG_0(swigCPtr, this, name, resetParams);
  }

  public void setComputeProgram(String name) {
    OgreJNI.Pass_setComputeProgram__SWIG_1(swigCPtr, this, name);
  }

  public void setComputeProgramParameters(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params) {
    OgreJNI.Pass_setComputeProgramParameters(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params));
  }

  public String getComputeProgramName() {
    return OgreJNI.Pass_getComputeProgramName(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t getComputeProgramParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.Pass_getComputeProgramParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr getComputeProgram() {
    return new GpuProgramPtr(OgreJNI.Pass_getComputeProgram(swigCPtr, this), false);
  }

  public final static class BuiltinHashFunction {
    public final static Pass.BuiltinHashFunction MIN_TEXTURE_CHANGE = new Pass.BuiltinHashFunction("MIN_TEXTURE_CHANGE");
    public final static Pass.BuiltinHashFunction MIN_GPU_PROGRAM_CHANGE = new Pass.BuiltinHashFunction("MIN_GPU_PROGRAM_CHANGE");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static BuiltinHashFunction swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + BuiltinHashFunction.class + " with value " + swigValue);
    }

    private BuiltinHashFunction(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private BuiltinHashFunction(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private BuiltinHashFunction(String swigName, BuiltinHashFunction swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static BuiltinHashFunction[] swigValues = { MIN_TEXTURE_CHANGE, MIN_GPU_PROGRAM_CHANGE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
