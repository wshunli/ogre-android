/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class ShadowRenderable extends Renderable {
  private transient long swigCPtr;

  protected ShadowRenderable(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.ShadowRenderable_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ShadowRenderable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ShadowRenderable(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setMaterial(MaterialPtr mat) {
    OgreJNI.ShadowRenderable_setMaterial(swigCPtr, this, MaterialPtr.getCPtr(mat), mat);
  }

  public MaterialPtr getMaterial() {
    return new MaterialPtr(OgreJNI.ShadowRenderable_getMaterial(swigCPtr, this), false);
  }

  public void getRenderOperation(RenderOperation op) {
    OgreJNI.ShadowRenderable_getRenderOperation(swigCPtr, this, RenderOperation.getCPtr(op), op);
  }

  public RenderOperation getRenderOperationForUpdate() {
    long cPtr = OgreJNI.ShadowRenderable_getRenderOperationForUpdate(swigCPtr, this);
    return (cPtr == 0) ? null : new RenderOperation(cPtr, false);
  }

  public void getWorldTransforms(Matrix4 xform) {
    OgreJNI.ShadowRenderable_getWorldTransforms(swigCPtr, this, Matrix4.getCPtr(xform), xform);
  }

  public float getSquaredViewDepth(Camera arg0) {
    return OgreJNI.ShadowRenderable_getSquaredViewDepth(swigCPtr, this, Camera.getCPtr(arg0), arg0);
  }

  public SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t getLights() {
    return new SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t(OgreJNI.ShadowRenderable_getLights(swigCPtr, this), false);
  }

  public boolean isLightCapSeparate() {
    return OgreJNI.ShadowRenderable_isLightCapSeparate(swigCPtr, this);
  }

  public ShadowRenderable getLightCapRenderable() {
    long cPtr = OgreJNI.ShadowRenderable_getLightCapRenderable(swigCPtr, this);
    return (cPtr == 0) ? null : new ShadowRenderable(cPtr, false);
  }

  public boolean isVisible() {
    return OgreJNI.ShadowRenderable_isVisible(swigCPtr, this);
  }

  public void rebindIndexBuffer(HardwareIndexBufferPtr indexBuffer) {
    OgreJNI.ShadowRenderable_rebindIndexBuffer(swigCPtr, this, HardwareIndexBufferPtr.getCPtr(indexBuffer), indexBuffer);
  }

}
