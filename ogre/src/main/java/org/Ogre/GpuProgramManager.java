/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class GpuProgramManager extends ResourceManager {
  private transient long swigCPtr;

  protected GpuProgramManager(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.GpuProgramManager_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GpuProgramManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_GpuProgramManager(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GpuProgramPtr getByName(String name, String group, boolean preferHighLevelPrograms) {
    return new GpuProgramPtr(OgreJNI.GpuProgramManager_getByName__SWIG_0(swigCPtr, this, name, group, preferHighLevelPrograms), true);
  }

  public GpuProgramPtr getByName(String name, String group) {
    return new GpuProgramPtr(OgreJNI.GpuProgramManager_getByName__SWIG_1(swigCPtr, this, name, group), true);
  }

  public GpuProgramPtr loadFromString(String name, String groupName, String code, GpuProgramType gptype, String syntaxCode) {
    return new GpuProgramPtr(OgreJNI.GpuProgramManager_loadFromString(swigCPtr, this, name, groupName, code, gptype.swigValue(), syntaxCode), true);
  }

  public SWIGTYPE_p_Ogre__setT_std__string_std__lessT_std__string_t_t__type getSupportedSyntax() {
    return new SWIGTYPE_p_Ogre__setT_std__string_std__lessT_std__string_t_t__type(OgreJNI.GpuProgramManager_getSupportedSyntax(swigCPtr, this), false);
  }

  public boolean isSyntaxSupported(String syntaxCode) {
    return OgreJNI.GpuProgramManager_isSyntaxSupported(swigCPtr, this, syntaxCode);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t createParameters() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t(OgreJNI.GpuProgramManager_createParameters(swigCPtr, this), true);
  }

  public GpuProgramPtr createProgram(String name, String groupName, String filename, GpuProgramType gptype, String syntaxCode) {
    return new GpuProgramPtr(OgreJNI.GpuProgramManager_createProgram(swigCPtr, this, name, groupName, filename, gptype.swigValue(), syntaxCode), true);
  }

  public GpuProgramPtr createProgramFromString(String name, String groupName, String code, GpuProgramType gptype, String syntaxCode) {
    return new GpuProgramPtr(OgreJNI.GpuProgramManager_createProgramFromString(swigCPtr, this, name, groupName, code, gptype.swigValue(), syntaxCode), true);
  }

  public ResourcePtr create(String name, String group, GpuProgramType gptype, String syntaxCode, boolean isManual, ManualResourceLoader loader) {
    return new ResourcePtr(OgreJNI.GpuProgramManager_create__SWIG_0(swigCPtr, this, name, group, gptype.swigValue(), syntaxCode, isManual, ManualResourceLoader.getCPtr(loader), loader), true);
  }

  public ResourcePtr create(String name, String group, GpuProgramType gptype, String syntaxCode, boolean isManual) {
    return new ResourcePtr(OgreJNI.GpuProgramManager_create__SWIG_1(swigCPtr, this, name, group, gptype.swigValue(), syntaxCode, isManual), true);
  }

  public ResourcePtr create(String name, String group, GpuProgramType gptype, String syntaxCode) {
    return new ResourcePtr(OgreJNI.GpuProgramManager_create__SWIG_2(swigCPtr, this, name, group, gptype.swigValue(), syntaxCode), true);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t createSharedParameters(String name) {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t(OgreJNI.GpuProgramManager_createSharedParameters(swigCPtr, this, name), true);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t getSharedParameters(String name) {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t(OgreJNI.GpuProgramManager_getSharedParameters(swigCPtr, this, name), true);
  }

  public SWIGTYPE_p_Ogre__mapT_std__string_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t_std__lessT_std__string_t_t__type getAvailableSharedParameters() {
    return new SWIGTYPE_p_Ogre__mapT_std__string_Ogre__SharedPtrT_Ogre__GpuSharedParameters_t_std__lessT_std__string_t_t__type(OgreJNI.GpuProgramManager_getAvailableSharedParameters(swigCPtr, this), false);
  }

  public boolean getSaveMicrocodesToCache() {
    return OgreJNI.GpuProgramManager_getSaveMicrocodesToCache(swigCPtr, this);
  }

  public void setSaveMicrocodesToCache(boolean val) {
    OgreJNI.GpuProgramManager_setSaveMicrocodesToCache(swigCPtr, this, val);
  }

  public boolean isCacheDirty() {
    return OgreJNI.GpuProgramManager_isCacheDirty(swigCPtr, this);
  }

  public boolean canGetCompiledShaderBuffer() {
    return OgreJNI.GpuProgramManager_canGetCompiledShaderBuffer(swigCPtr, this);
  }

  public boolean isMicrocodeAvailableInCache(String name) {
    return OgreJNI.GpuProgramManager_isMicrocodeAvailableInCache(swigCPtr, this, name);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t getMicrocodeFromCache(String name) {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t(OgreJNI.GpuProgramManager_getMicrocodeFromCache(swigCPtr, this, name), false);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t createMicrocode(long size) {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t(OgreJNI.GpuProgramManager_createMicrocode(swigCPtr, this, size), true);
  }

  public void addMicrocodeToCache(String name, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t microcode) {
    OgreJNI.GpuProgramManager_addMicrocodeToCache(swigCPtr, this, name, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__MemoryDataStream_t.getCPtr(microcode));
  }

  public void removeMicrocodeFromCache(String name) {
    OgreJNI.GpuProgramManager_removeMicrocodeFromCache(swigCPtr, this, name);
  }

  public void saveMicrocodeCache(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream) {
    OgreJNI.GpuProgramManager_saveMicrocodeCache(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream));
  }

  public void loadMicrocodeCache(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream) {
    OgreJNI.GpuProgramManager_loadMicrocodeCache(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream));
  }

  public static GpuProgramManager getSingleton() {
    return new GpuProgramManager(OgreJNI.GpuProgramManager_getSingleton(), false);
  }

}
