/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class AnimationTrack {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AnimationTrack(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AnimationTrack obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_AnimationTrack(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class Listener {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected Listener(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Listener obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_AnimationTrack_Listener(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OgreJNI.AnimationTrack_Listener_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OgreJNI.AnimationTrack_Listener_change_ownership(this, swigCPtr, true);
    }
  
    public boolean getInterpolatedKeyFrame(AnimationTrack t, TimeIndex timeIndex, KeyFrame kf) {
      return OgreJNI.AnimationTrack_Listener_getInterpolatedKeyFrame(swigCPtr, this, AnimationTrack.getCPtr(t), t, TimeIndex.getCPtr(timeIndex), timeIndex, KeyFrame.getCPtr(kf), kf);
    }
  
    public Listener() {
      this(OgreJNI.new_AnimationTrack_Listener(), true);
      OgreJNI.AnimationTrack_Listener_director_connect(this, swigCPtr, true, true);
    }
  
  }

  public int getHandle() {
    return OgreJNI.AnimationTrack_getHandle(swigCPtr, this);
  }

  public int getNumKeyFrames() {
    return OgreJNI.AnimationTrack_getNumKeyFrames(swigCPtr, this);
  }

  public KeyFrame getKeyFrame(int index) {
    long cPtr = OgreJNI.AnimationTrack_getKeyFrame(swigCPtr, this, index);
    return (cPtr == 0) ? null : new KeyFrame(cPtr, false);
  }

  public float getKeyFramesAtTime(TimeIndex timeIndex, SWIGTYPE_p_p_Ogre__KeyFrame keyFrame1, SWIGTYPE_p_p_Ogre__KeyFrame keyFrame2, SWIGTYPE_p_unsigned_short firstKeyIndex) {
    return OgreJNI.AnimationTrack_getKeyFramesAtTime__SWIG_0(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, SWIGTYPE_p_p_Ogre__KeyFrame.getCPtr(keyFrame1), SWIGTYPE_p_p_Ogre__KeyFrame.getCPtr(keyFrame2), SWIGTYPE_p_unsigned_short.getCPtr(firstKeyIndex));
  }

  public float getKeyFramesAtTime(TimeIndex timeIndex, SWIGTYPE_p_p_Ogre__KeyFrame keyFrame1, SWIGTYPE_p_p_Ogre__KeyFrame keyFrame2) {
    return OgreJNI.AnimationTrack_getKeyFramesAtTime__SWIG_1(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, SWIGTYPE_p_p_Ogre__KeyFrame.getCPtr(keyFrame1), SWIGTYPE_p_p_Ogre__KeyFrame.getCPtr(keyFrame2));
  }

  public KeyFrame createKeyFrame(float timePos) {
    long cPtr = OgreJNI.AnimationTrack_createKeyFrame(swigCPtr, this, timePos);
    return (cPtr == 0) ? null : new KeyFrame(cPtr, false);
  }

  public void removeKeyFrame(int index) {
    OgreJNI.AnimationTrack_removeKeyFrame(swigCPtr, this, index);
  }

  public void removeAllKeyFrames() {
    OgreJNI.AnimationTrack_removeAllKeyFrames(swigCPtr, this);
  }

  public void getInterpolatedKeyFrame(TimeIndex timeIndex, KeyFrame kf) {
    OgreJNI.AnimationTrack_getInterpolatedKeyFrame(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, KeyFrame.getCPtr(kf), kf);
  }

  public void apply(TimeIndex timeIndex, float weight, float scale) {
    OgreJNI.AnimationTrack_apply__SWIG_0(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, weight, scale);
  }

  public void apply(TimeIndex timeIndex, float weight) {
    OgreJNI.AnimationTrack_apply__SWIG_1(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, weight);
  }

  public void apply(TimeIndex timeIndex) {
    OgreJNI.AnimationTrack_apply__SWIG_2(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex);
  }

  public void _keyFrameDataChanged() {
    OgreJNI.AnimationTrack__keyFrameDataChanged(swigCPtr, this);
  }

  public boolean hasNonZeroKeyFrames() {
    return OgreJNI.AnimationTrack_hasNonZeroKeyFrames(swigCPtr, this);
  }

  public void optimise() {
    OgreJNI.AnimationTrack_optimise(swigCPtr, this);
  }

  public void _collectKeyFrameTimes(SWIGTYPE_p_Ogre__vectorT_float_t__type keyFrameTimes) {
    OgreJNI.AnimationTrack__collectKeyFrameTimes(swigCPtr, this, SWIGTYPE_p_Ogre__vectorT_float_t__type.getCPtr(keyFrameTimes));
  }

  public void _buildKeyFrameIndexMap(SWIGTYPE_p_Ogre__vectorT_float_t__type keyFrameTimes) {
    OgreJNI.AnimationTrack__buildKeyFrameIndexMap(swigCPtr, this, SWIGTYPE_p_Ogre__vectorT_float_t__type.getCPtr(keyFrameTimes));
  }

  public void _applyBaseKeyFrame(KeyFrame base) {
    OgreJNI.AnimationTrack__applyBaseKeyFrame(swigCPtr, this, KeyFrame.getCPtr(base), base);
  }

  public void setListener(AnimationTrack.Listener l) {
    OgreJNI.AnimationTrack_setListener(swigCPtr, this, AnimationTrack.Listener.getCPtr(l), l);
  }

  public Animation getParent() {
    long cPtr = OgreJNI.AnimationTrack_getParent(swigCPtr, this);
    return (cPtr == 0) ? null : new Animation(cPtr, false);
  }

}
