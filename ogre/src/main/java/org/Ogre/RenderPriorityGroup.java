/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class RenderPriorityGroup {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RenderPriorityGroup(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RenderPriorityGroup obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_RenderPriorityGroup(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RenderPriorityGroup(RenderQueueGroup parent, boolean splitPassesByLightingType, boolean splitNoShadowPasses, boolean shadowCastersNotReceivers) {
    this(OgreJNI.new_RenderPriorityGroup(RenderQueueGroup.getCPtr(parent), parent, splitPassesByLightingType, splitNoShadowPasses, shadowCastersNotReceivers), true);
  }

  public QueuedRenderableCollection getSolidsBasic() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getSolidsBasic(swigCPtr, this), false);
  }

  public QueuedRenderableCollection getSolidsDiffuseSpecular() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getSolidsDiffuseSpecular(swigCPtr, this), false);
  }

  public QueuedRenderableCollection getSolidsDecal() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getSolidsDecal(swigCPtr, this), false);
  }

  public QueuedRenderableCollection getSolidsNoShadowReceive() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getSolidsNoShadowReceive(swigCPtr, this), false);
  }

  public QueuedRenderableCollection getTransparentsUnsorted() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getTransparentsUnsorted(swigCPtr, this), false);
  }

  public QueuedRenderableCollection getTransparents() {
    return new QueuedRenderableCollection(OgreJNI.RenderPriorityGroup_getTransparents(swigCPtr, this), false);
  }

  public void resetOrganisationModes() {
    OgreJNI.RenderPriorityGroup_resetOrganisationModes(swigCPtr, this);
  }

  public void addOrganisationMode(QueuedRenderableCollection.OrganisationMode om) {
    OgreJNI.RenderPriorityGroup_addOrganisationMode(swigCPtr, this, om.swigValue());
  }

  public void defaultOrganisationMode() {
    OgreJNI.RenderPriorityGroup_defaultOrganisationMode(swigCPtr, this);
  }

  public void addRenderable(Renderable pRend, Technique pTech) {
    OgreJNI.RenderPriorityGroup_addRenderable(swigCPtr, this, Renderable.getCPtr(pRend), pRend, Technique.getCPtr(pTech), pTech);
  }

  public void sort(Camera cam) {
    OgreJNI.RenderPriorityGroup_sort(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public void clear() {
    OgreJNI.RenderPriorityGroup_clear(swigCPtr, this);
  }

  public void setSplitPassesByLightingType(boolean split) {
    OgreJNI.RenderPriorityGroup_setSplitPassesByLightingType(swigCPtr, this, split);
  }

  public void setSplitNoShadowPasses(boolean split) {
    OgreJNI.RenderPriorityGroup_setSplitNoShadowPasses(swigCPtr, this, split);
  }

  public void setShadowCastersCannotBeReceivers(boolean ind) {
    OgreJNI.RenderPriorityGroup_setShadowCastersCannotBeReceivers(swigCPtr, this, ind);
  }

  public void merge(RenderPriorityGroup rhs) {
    OgreJNI.RenderPriorityGroup_merge(swigCPtr, this, RenderPriorityGroup.getCPtr(rhs), rhs);
  }

}
