/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class ArchiveManager {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ArchiveManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ArchiveManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ArchiveManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArchiveManager() {
    this(OgreJNI.new_ArchiveManager(), true);
  }

  public Archive load(String filename, String archiveType, boolean readOnly) {
    long cPtr = OgreJNI.ArchiveManager_load(swigCPtr, this, filename, archiveType, readOnly);
    return (cPtr == 0) ? null : new Archive(cPtr, false);
  }

  public void unload(Archive arch) {
    OgreJNI.ArchiveManager_unload__SWIG_0(swigCPtr, this, Archive.getCPtr(arch), arch);
  }

  public void unload(String filename) {
    OgreJNI.ArchiveManager_unload__SWIG_1(swigCPtr, this, filename);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__Archive_p_std__lessT_std__string_t_t__type_t getArchiveIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__Archive_p_std__lessT_std__string_t_t__type_t(OgreJNI.ArchiveManager_getArchiveIterator(swigCPtr, this), true);
  }

  public void addArchiveFactory(ArchiveFactory factory) {
    OgreJNI.ArchiveManager_addArchiveFactory(swigCPtr, this, ArchiveFactory.getCPtr(factory), factory);
  }

  public static ArchiveManager getSingleton() {
    return new ArchiveManager(OgreJNI.ArchiveManager_getSingleton(), false);
  }

}
