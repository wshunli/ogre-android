/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class MaterialManager_Listener {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected MaterialManager_Listener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MaterialManager_Listener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_MaterialManager_Listener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    OgreJNI.MaterialManager_Listener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    OgreJNI.MaterialManager_Listener_change_ownership(this, swigCPtr, true);
  }

  public Technique handleSchemeNotFound(int schemeIndex, String schemeName, Material originalMaterial, int lodIndex, Renderable rend) {
    long cPtr = OgreJNI.MaterialManager_Listener_handleSchemeNotFound(swigCPtr, this, schemeIndex, schemeName, Material.getCPtr(originalMaterial), originalMaterial, lodIndex, Renderable.getCPtr(rend), rend);
    return (cPtr == 0) ? null : new Technique(cPtr, false);
  }

  public boolean afterIlluminationPassesCreated(Technique technique) {
    return (getClass() == MaterialManager_Listener.class) ? OgreJNI.MaterialManager_Listener_afterIlluminationPassesCreated(swigCPtr, this, Technique.getCPtr(technique), technique) : OgreJNI.MaterialManager_Listener_afterIlluminationPassesCreatedSwigExplicitMaterialManager_Listener(swigCPtr, this, Technique.getCPtr(technique), technique);
  }

  public boolean beforeIlluminationPassesCleared(Technique technique) {
    return (getClass() == MaterialManager_Listener.class) ? OgreJNI.MaterialManager_Listener_beforeIlluminationPassesCleared(swigCPtr, this, Technique.getCPtr(technique), technique) : OgreJNI.MaterialManager_Listener_beforeIlluminationPassesClearedSwigExplicitMaterialManager_Listener(swigCPtr, this, Technique.getCPtr(technique), technique);
  }

  public MaterialManager_Listener() {
    this(OgreJNI.new_MaterialManager_Listener(), true);
    OgreJNI.MaterialManager_Listener_director_connect(this, swigCPtr, true, true);
  }

}
