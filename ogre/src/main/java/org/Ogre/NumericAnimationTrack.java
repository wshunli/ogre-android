/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class NumericAnimationTrack extends AnimationTrack {
  private transient long swigCPtr;

  protected NumericAnimationTrack(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.NumericAnimationTrack_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NumericAnimationTrack obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_NumericAnimationTrack(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public NumericAnimationTrack(Animation parent, int handle) {
    this(OgreJNI.new_NumericAnimationTrack__SWIG_0(Animation.getCPtr(parent), parent, handle), true);
  }

  public NumericAnimationTrack(Animation parent, int handle, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t target) {
    this(OgreJNI.new_NumericAnimationTrack__SWIG_1(Animation.getCPtr(parent), parent, handle, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(target)), true);
  }

  public NumericKeyFrame createNumericKeyFrame(float timePos) {
    long cPtr = OgreJNI.NumericAnimationTrack_createNumericKeyFrame(swigCPtr, this, timePos);
    return (cPtr == 0) ? null : new NumericKeyFrame(cPtr, false);
  }

  public void getInterpolatedKeyFrame(TimeIndex timeIndex, KeyFrame kf) {
    OgreJNI.NumericAnimationTrack_getInterpolatedKeyFrame(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, KeyFrame.getCPtr(kf), kf);
  }

  public void apply(TimeIndex timeIndex, float weight, float scale) {
    OgreJNI.NumericAnimationTrack_apply__SWIG_0(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, weight, scale);
  }

  public void apply(TimeIndex timeIndex, float weight) {
    OgreJNI.NumericAnimationTrack_apply__SWIG_1(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex, weight);
  }

  public void apply(TimeIndex timeIndex) {
    OgreJNI.NumericAnimationTrack_apply__SWIG_2(swigCPtr, this, TimeIndex.getCPtr(timeIndex), timeIndex);
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex, float weight, float scale) {
    OgreJNI.NumericAnimationTrack_applyToAnimable__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex), timeIndex, weight, scale);
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex, float weight) {
    OgreJNI.NumericAnimationTrack_applyToAnimable__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex), timeIndex, weight);
  }

  public void applyToAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t anim, TimeIndex timeIndex) {
    OgreJNI.NumericAnimationTrack_applyToAnimable__SWIG_2(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(anim), TimeIndex.getCPtr(timeIndex), timeIndex);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t getAssociatedAnimable() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t(OgreJNI.NumericAnimationTrack_getAssociatedAnimable(swigCPtr, this), false);
  }

  public void setAssociatedAnimable(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t val) {
    OgreJNI.NumericAnimationTrack_setAssociatedAnimable(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__AnimableValue_t.getCPtr(val));
  }

  public NumericKeyFrame getNumericKeyFrame(int index) {
    long cPtr = OgreJNI.NumericAnimationTrack_getNumericKeyFrame(swigCPtr, this, index);
    return (cPtr == 0) ? null : new NumericKeyFrame(cPtr, false);
  }

  public NumericAnimationTrack _clone(Animation newParent) {
    long cPtr = OgreJNI.NumericAnimationTrack__clone(swigCPtr, this, Animation.getCPtr(newParent), newParent);
    return (cPtr == 0) ? null : new NumericAnimationTrack(cPtr, false);
  }

}
