/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class ParticleEmitter extends StringInterface {
  private transient long swigCPtr;

  protected ParticleEmitter(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.ParticleEmitter_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParticleEmitter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ParticleEmitter(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setPosition(Vector3 pos) {
    OgreJNI.ParticleEmitter_setPosition(swigCPtr, this, Vector3.getCPtr(pos), pos);
  }

  public Vector3 getPosition() {
    return new Vector3(OgreJNI.ParticleEmitter_getPosition(swigCPtr, this), false);
  }

  public void setDirection(Vector3 direction) {
    OgreJNI.ParticleEmitter_setDirection(swigCPtr, this, Vector3.getCPtr(direction), direction);
  }

  public Vector3 getDirection() {
    return new Vector3(OgreJNI.ParticleEmitter_getDirection(swigCPtr, this), false);
  }

  public void setUp(Vector3 up) {
    OgreJNI.ParticleEmitter_setUp(swigCPtr, this, Vector3.getCPtr(up), up);
  }

  public Vector3 getUp() {
    return new Vector3(OgreJNI.ParticleEmitter_getUp(swigCPtr, this), false);
  }

  public void setDirPositionReference(Vector3 position, boolean enable) {
    OgreJNI.ParticleEmitter_setDirPositionReference(swigCPtr, this, Vector3.getCPtr(position), position, enable);
  }

  public Vector3 getDirPositionReference() {
    return new Vector3(OgreJNI.ParticleEmitter_getDirPositionReference(swigCPtr, this), false);
  }

  public boolean getDirPositionReferenceEnabled() {
    return OgreJNI.ParticleEmitter_getDirPositionReferenceEnabled(swigCPtr, this);
  }

  public void setAngle(Radian angle) {
    OgreJNI.ParticleEmitter_setAngle(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public Radian getAngle() {
    return new Radian(OgreJNI.ParticleEmitter_getAngle(swigCPtr, this), false);
  }

  public void setParticleVelocity(float speed) {
    OgreJNI.ParticleEmitter_setParticleVelocity__SWIG_0(swigCPtr, this, speed);
  }

  public void setParticleVelocity(float min, float max) {
    OgreJNI.ParticleEmitter_setParticleVelocity__SWIG_1(swigCPtr, this, min, max);
  }

  public void setMinParticleVelocity(float min) {
    OgreJNI.ParticleEmitter_setMinParticleVelocity(swigCPtr, this, min);
  }

  public void setMaxParticleVelocity(float max) {
    OgreJNI.ParticleEmitter_setMaxParticleVelocity(swigCPtr, this, max);
  }

  public float getParticleVelocity() {
    return OgreJNI.ParticleEmitter_getParticleVelocity(swigCPtr, this);
  }

  public float getMinParticleVelocity() {
    return OgreJNI.ParticleEmitter_getMinParticleVelocity(swigCPtr, this);
  }

  public float getMaxParticleVelocity() {
    return OgreJNI.ParticleEmitter_getMaxParticleVelocity(swigCPtr, this);
  }

  public void setEmissionRate(float particlesPerSecond) {
    OgreJNI.ParticleEmitter_setEmissionRate(swigCPtr, this, particlesPerSecond);
  }

  public float getEmissionRate() {
    return OgreJNI.ParticleEmitter_getEmissionRate(swigCPtr, this);
  }

  public void setTimeToLive(float ttl) {
    OgreJNI.ParticleEmitter_setTimeToLive__SWIG_0(swigCPtr, this, ttl);
  }

  public void setTimeToLive(float minTtl, float maxTtl) {
    OgreJNI.ParticleEmitter_setTimeToLive__SWIG_1(swigCPtr, this, minTtl, maxTtl);
  }

  public void setMinTimeToLive(float min) {
    OgreJNI.ParticleEmitter_setMinTimeToLive(swigCPtr, this, min);
  }

  public void setMaxTimeToLive(float max) {
    OgreJNI.ParticleEmitter_setMaxTimeToLive(swigCPtr, this, max);
  }

  public float getTimeToLive() {
    return OgreJNI.ParticleEmitter_getTimeToLive(swigCPtr, this);
  }

  public float getMinTimeToLive() {
    return OgreJNI.ParticleEmitter_getMinTimeToLive(swigCPtr, this);
  }

  public float getMaxTimeToLive() {
    return OgreJNI.ParticleEmitter_getMaxTimeToLive(swigCPtr, this);
  }

  public void setColour(ColourValue colour) {
    OgreJNI.ParticleEmitter_setColour__SWIG_0(swigCPtr, this, ColourValue.getCPtr(colour), colour);
  }

  public void setColour(ColourValue colourStart, ColourValue colourEnd) {
    OgreJNI.ParticleEmitter_setColour__SWIG_1(swigCPtr, this, ColourValue.getCPtr(colourStart), colourStart, ColourValue.getCPtr(colourEnd), colourEnd);
  }

  public void setColourRangeStart(ColourValue colour) {
    OgreJNI.ParticleEmitter_setColourRangeStart(swigCPtr, this, ColourValue.getCPtr(colour), colour);
  }

  public void setColourRangeEnd(ColourValue colour) {
    OgreJNI.ParticleEmitter_setColourRangeEnd(swigCPtr, this, ColourValue.getCPtr(colour), colour);
  }

  public ColourValue getColour() {
    return new ColourValue(OgreJNI.ParticleEmitter_getColour(swigCPtr, this), false);
  }

  public ColourValue getColourRangeStart() {
    return new ColourValue(OgreJNI.ParticleEmitter_getColourRangeStart(swigCPtr, this), false);
  }

  public ColourValue getColourRangeEnd() {
    return new ColourValue(OgreJNI.ParticleEmitter_getColourRangeEnd(swigCPtr, this), false);
  }

  public int _getEmissionCount(float timeElapsed) {
    return OgreJNI.ParticleEmitter__getEmissionCount(swigCPtr, this, timeElapsed);
  }

  public void _initParticle(Particle pParticle) {
    OgreJNI.ParticleEmitter__initParticle(swigCPtr, this, Particle.getCPtr(pParticle), pParticle);
  }

  public void setEnabled(boolean enabled) {
    OgreJNI.ParticleEmitter_setEnabled(swigCPtr, this, enabled);
  }

  public boolean getEnabled() {
    return OgreJNI.ParticleEmitter_getEnabled(swigCPtr, this);
  }

  public void setStartTime(float startTime) {
    OgreJNI.ParticleEmitter_setStartTime(swigCPtr, this, startTime);
  }

  public float getStartTime() {
    return OgreJNI.ParticleEmitter_getStartTime(swigCPtr, this);
  }

  public void setDuration(float duration) {
    OgreJNI.ParticleEmitter_setDuration__SWIG_0(swigCPtr, this, duration);
  }

  public float getDuration() {
    return OgreJNI.ParticleEmitter_getDuration(swigCPtr, this);
  }

  public void setDuration(float min, float max) {
    OgreJNI.ParticleEmitter_setDuration__SWIG_1(swigCPtr, this, min, max);
  }

  public void setMinDuration(float min) {
    OgreJNI.ParticleEmitter_setMinDuration(swigCPtr, this, min);
  }

  public void setMaxDuration(float max) {
    OgreJNI.ParticleEmitter_setMaxDuration(swigCPtr, this, max);
  }

  public float getMinDuration() {
    return OgreJNI.ParticleEmitter_getMinDuration(swigCPtr, this);
  }

  public float getMaxDuration() {
    return OgreJNI.ParticleEmitter_getMaxDuration(swigCPtr, this);
  }

  public void setRepeatDelay(float duration) {
    OgreJNI.ParticleEmitter_setRepeatDelay__SWIG_0(swigCPtr, this, duration);
  }

  public float getRepeatDelay() {
    return OgreJNI.ParticleEmitter_getRepeatDelay(swigCPtr, this);
  }

  public void setRepeatDelay(float min, float max) {
    OgreJNI.ParticleEmitter_setRepeatDelay__SWIG_1(swigCPtr, this, min, max);
  }

  public void setMinRepeatDelay(float min) {
    OgreJNI.ParticleEmitter_setMinRepeatDelay(swigCPtr, this, min);
  }

  public void setMaxRepeatDelay(float max) {
    OgreJNI.ParticleEmitter_setMaxRepeatDelay(swigCPtr, this, max);
  }

  public float getMinRepeatDelay() {
    return OgreJNI.ParticleEmitter_getMinRepeatDelay(swigCPtr, this);
  }

  public float getMaxRepeatDelay() {
    return OgreJNI.ParticleEmitter_getMaxRepeatDelay(swigCPtr, this);
  }

  public String getName() {
    return OgreJNI.ParticleEmitter_getName(swigCPtr, this);
  }

  public void setName(String newName) {
    OgreJNI.ParticleEmitter_setName(swigCPtr, this, newName);
  }

  public String getEmittedEmitter() {
    return OgreJNI.ParticleEmitter_getEmittedEmitter(swigCPtr, this);
  }

  public void setEmittedEmitter(String emittedEmitter) {
    OgreJNI.ParticleEmitter_setEmittedEmitter(swigCPtr, this, emittedEmitter);
  }

  public boolean isEmitted() {
    return OgreJNI.ParticleEmitter_isEmitted(swigCPtr, this);
  }

  public void setEmitted(boolean emitted) {
    OgreJNI.ParticleEmitter_setEmitted(swigCPtr, this, emitted);
  }

}
