/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class ControllerManager {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ControllerManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ControllerManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ControllerManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ControllerManager() {
    this(OgreJNI.new_ControllerManager(), true);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createController(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t src, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t dest, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerFunctionT_float_t_t func) {
    long cPtr = OgreJNI.ControllerManager_createController(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t.getCPtr(src), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t.getCPtr(dest), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerFunctionT_float_t_t.getCPtr(func));
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createFrameTimePassthroughController(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t dest) {
    long cPtr = OgreJNI.ControllerManager_createFrameTimePassthroughController(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t.getCPtr(dest));
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public void clearControllers() {
    OgreJNI.ControllerManager_clearControllers(swigCPtr, this);
  }

  public void updateAllControllers() {
    OgreJNI.ControllerManager_updateAllControllers(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t getFrameTimeSource() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerValueT_float_t_t(OgreJNI.ControllerManager_getFrameTimeSource(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerFunctionT_float_t_t getPassthroughControllerFunction() {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__ControllerFunctionT_float_t_t(OgreJNI.ControllerManager_getPassthroughControllerFunction(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureAnimator(TextureUnitState layer, float sequenceTime) {
    long cPtr = OgreJNI.ControllerManager_createTextureAnimator(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, sequenceTime);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureUVScroller(TextureUnitState layer, float speed) {
    long cPtr = OgreJNI.ControllerManager_createTextureUVScroller(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, speed);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureUScroller(TextureUnitState layer, float uSpeed) {
    long cPtr = OgreJNI.ControllerManager_createTextureUScroller(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, uSpeed);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureVScroller(TextureUnitState layer, float vSpeed) {
    long cPtr = OgreJNI.ControllerManager_createTextureVScroller(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, vSpeed);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureRotater(TextureUnitState layer, float speed) {
    long cPtr = OgreJNI.ControllerManager_createTextureRotater(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, speed);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureWaveTransformer(TextureUnitState layer, TextureUnitState.TextureTransformType ttype, WaveformType waveType, float base, float frequency, float phase, float amplitude) {
    long cPtr = OgreJNI.ControllerManager_createTextureWaveTransformer__SWIG_0(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, ttype.swigValue(), waveType.swigValue(), base, frequency, phase, amplitude);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureWaveTransformer(TextureUnitState layer, TextureUnitState.TextureTransformType ttype, WaveformType waveType, float base, float frequency, float phase) {
    long cPtr = OgreJNI.ControllerManager_createTextureWaveTransformer__SWIG_1(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, ttype.swigValue(), waveType.swigValue(), base, frequency, phase);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureWaveTransformer(TextureUnitState layer, TextureUnitState.TextureTransformType ttype, WaveformType waveType, float base, float frequency) {
    long cPtr = OgreJNI.ControllerManager_createTextureWaveTransformer__SWIG_2(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, ttype.swigValue(), waveType.swigValue(), base, frequency);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureWaveTransformer(TextureUnitState layer, TextureUnitState.TextureTransformType ttype, WaveformType waveType, float base) {
    long cPtr = OgreJNI.ControllerManager_createTextureWaveTransformer__SWIG_3(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, ttype.swigValue(), waveType.swigValue(), base);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createTextureWaveTransformer(TextureUnitState layer, TextureUnitState.TextureTransformType ttype, WaveformType waveType) {
    long cPtr = OgreJNI.ControllerManager_createTextureWaveTransformer__SWIG_4(swigCPtr, this, TextureUnitState.getCPtr(layer), layer, ttype.swigValue(), waveType.swigValue());
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createGpuProgramTimerParam(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params, long paramIndex, float timeFactor) {
    long cPtr = OgreJNI.ControllerManager_createGpuProgramTimerParam__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params), paramIndex, timeFactor);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__ControllerT_float_t createGpuProgramTimerParam(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t params, long paramIndex) {
    long cPtr = OgreJNI.ControllerManager_createGpuProgramTimerParam__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__GpuProgramParameters_t.getCPtr(params), paramIndex);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__ControllerT_float_t(cPtr, false);
  }

  public void destroyController(SWIGTYPE_p_Ogre__ControllerT_float_t controller) {
    OgreJNI.ControllerManager_destroyController(swigCPtr, this, SWIGTYPE_p_Ogre__ControllerT_float_t.getCPtr(controller));
  }

  public float getTimeFactor() {
    return OgreJNI.ControllerManager_getTimeFactor(swigCPtr, this);
  }

  public void setTimeFactor(float tf) {
    OgreJNI.ControllerManager_setTimeFactor(swigCPtr, this, tf);
  }

  public float getFrameDelay() {
    return OgreJNI.ControllerManager_getFrameDelay(swigCPtr, this);
  }

  public void setFrameDelay(float fd) {
    OgreJNI.ControllerManager_setFrameDelay(swigCPtr, this, fd);
  }

  public float getElapsedTime() {
    return OgreJNI.ControllerManager_getElapsedTime(swigCPtr, this);
  }

  public void setElapsedTime(float elapsedTime) {
    OgreJNI.ControllerManager_setElapsedTime(swigCPtr, this, elapsedTime);
  }

  public static ControllerManager getSingleton() {
    return new ControllerManager(OgreJNI.ControllerManager_getSingleton(), false);
  }

}
