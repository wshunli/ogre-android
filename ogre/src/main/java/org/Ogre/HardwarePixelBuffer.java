/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class HardwarePixelBuffer extends HardwareBuffer {
  private transient long swigCPtr;

  protected HardwarePixelBuffer(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.HardwarePixelBuffer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HardwarePixelBuffer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_HardwarePixelBuffer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PixelBox getCurrentLock() {
    return new PixelBox(OgreJNI.HardwarePixelBuffer_getCurrentLock(swigCPtr, this), false);
  }

  public void readData(long offset, long length, SWIGTYPE_p_void pDest) {
    OgreJNI.HardwarePixelBuffer_readData(swigCPtr, this, offset, length, SWIGTYPE_p_void.getCPtr(pDest));
  }

  public void writeData(long offset, long length, SWIGTYPE_p_void pSource, boolean discardWholeBuffer) {
    OgreJNI.HardwarePixelBuffer_writeData__SWIG_0(swigCPtr, this, offset, length, SWIGTYPE_p_void.getCPtr(pSource), discardWholeBuffer);
  }

  public void writeData(long offset, long length, SWIGTYPE_p_void pSource) {
    OgreJNI.HardwarePixelBuffer_writeData__SWIG_1(swigCPtr, this, offset, length, SWIGTYPE_p_void.getCPtr(pSource));
  }

  public void blit(HardwarePixelBufferPtr src, Box srcBox, Box dstBox) {
    OgreJNI.HardwarePixelBuffer_blit__SWIG_0(swigCPtr, this, HardwarePixelBufferPtr.getCPtr(src), src, Box.getCPtr(srcBox), srcBox, Box.getCPtr(dstBox), dstBox);
  }

  public void blit(HardwarePixelBufferPtr src) {
    OgreJNI.HardwarePixelBuffer_blit__SWIG_1(swigCPtr, this, HardwarePixelBufferPtr.getCPtr(src), src);
  }

  public void blitFromMemory(PixelBox src, Box dstBox) {
    OgreJNI.HardwarePixelBuffer_blitFromMemory__SWIG_0(swigCPtr, this, PixelBox.getCPtr(src), src, Box.getCPtr(dstBox), dstBox);
  }

  public void blitFromMemory(PixelBox src) {
    OgreJNI.HardwarePixelBuffer_blitFromMemory__SWIG_1(swigCPtr, this, PixelBox.getCPtr(src), src);
  }

  public void blitToMemory(Box srcBox, PixelBox dst) {
    OgreJNI.HardwarePixelBuffer_blitToMemory__SWIG_0(swigCPtr, this, Box.getCPtr(srcBox), srcBox, PixelBox.getCPtr(dst), dst);
  }

  public void blitToMemory(PixelBox dst) {
    OgreJNI.HardwarePixelBuffer_blitToMemory__SWIG_1(swigCPtr, this, PixelBox.getCPtr(dst), dst);
  }

  public RenderTexture getRenderTarget(long slice) {
    long cPtr = OgreJNI.HardwarePixelBuffer_getRenderTarget__SWIG_0(swigCPtr, this, slice);
    return (cPtr == 0) ? null : new RenderTexture(cPtr, false);
  }

  public RenderTexture getRenderTarget() {
    long cPtr = OgreJNI.HardwarePixelBuffer_getRenderTarget__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new RenderTexture(cPtr, false);
  }

  public long getWidth() {
    return OgreJNI.HardwarePixelBuffer_getWidth(swigCPtr, this);
  }

  public long getHeight() {
    return OgreJNI.HardwarePixelBuffer_getHeight(swigCPtr, this);
  }

  public long getDepth() {
    return OgreJNI.HardwarePixelBuffer_getDepth(swigCPtr, this);
  }

  public PixelFormat getFormat() {
    return PixelFormat.swigToEnum(OgreJNI.HardwarePixelBuffer_getFormat(swigCPtr, this));
  }

}
