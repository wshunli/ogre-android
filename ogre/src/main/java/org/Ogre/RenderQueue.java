/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class RenderQueue {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RenderQueue(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RenderQueue obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_RenderQueue(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class RenderableListener {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected RenderableListener(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(RenderableListener obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_RenderQueue_RenderableListener(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public boolean renderableQueued(Renderable rend, short groupID, int priority, SWIGTYPE_p_p_Ogre__Technique ppTech, RenderQueue pQueue) {
      return OgreJNI.RenderQueue_RenderableListener_renderableQueued(swigCPtr, this, Renderable.getCPtr(rend), rend, groupID, priority, SWIGTYPE_p_p_Ogre__Technique.getCPtr(ppTech), RenderQueue.getCPtr(pQueue), pQueue);
    }
  
  }

  public RenderQueue() {
    this(OgreJNI.new_RenderQueue(), true);
  }

  public void clear(boolean destroyPassMaps) {
    OgreJNI.RenderQueue_clear__SWIG_0(swigCPtr, this, destroyPassMaps);
  }

  public void clear() {
    OgreJNI.RenderQueue_clear__SWIG_1(swigCPtr, this);
  }

  public RenderQueueGroup getQueueGroup(short qid) {
    long cPtr = OgreJNI.RenderQueue_getQueueGroup(swigCPtr, this, qid);
    return (cPtr == 0) ? null : new RenderQueueGroup(cPtr, false);
  }

  public void addRenderable(Renderable pRend, short groupID, int priority) {
    OgreJNI.RenderQueue_addRenderable__SWIG_0(swigCPtr, this, Renderable.getCPtr(pRend), pRend, groupID, priority);
  }

  public void addRenderable(Renderable pRend, short groupId) {
    OgreJNI.RenderQueue_addRenderable__SWIG_1(swigCPtr, this, Renderable.getCPtr(pRend), pRend, groupId);
  }

  public void addRenderable(Renderable pRend) {
    OgreJNI.RenderQueue_addRenderable__SWIG_2(swigCPtr, this, Renderable.getCPtr(pRend), pRend);
  }

  public short getDefaultQueueGroup() {
    return OgreJNI.RenderQueue_getDefaultQueueGroup(swigCPtr, this);
  }

  public void setDefaultRenderablePriority(int priority) {
    OgreJNI.RenderQueue_setDefaultRenderablePriority(swigCPtr, this, priority);
  }

  public int getDefaultRenderablePriority() {
    return OgreJNI.RenderQueue_getDefaultRenderablePriority(swigCPtr, this);
  }

  public void setDefaultQueueGroup(short grp) {
    OgreJNI.RenderQueue_setDefaultQueueGroup(swigCPtr, this, grp);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_unsigned_char_Ogre__RenderQueueGroup_p_std__lessT_unsigned_char_t_t__type_t _getQueueGroupIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_unsigned_char_Ogre__RenderQueueGroup_p_std__lessT_unsigned_char_t_t__type_t(OgreJNI.RenderQueue__getQueueGroupIterator__SWIG_0(swigCPtr, this), true);
  }

  public void setSplitPassesByLightingType(boolean split) {
    OgreJNI.RenderQueue_setSplitPassesByLightingType(swigCPtr, this, split);
  }

  public boolean getSplitPassesByLightingType() {
    return OgreJNI.RenderQueue_getSplitPassesByLightingType(swigCPtr, this);
  }

  public void setSplitNoShadowPasses(boolean split) {
    OgreJNI.RenderQueue_setSplitNoShadowPasses(swigCPtr, this, split);
  }

  public boolean getSplitNoShadowPasses() {
    return OgreJNI.RenderQueue_getSplitNoShadowPasses(swigCPtr, this);
  }

  public void setShadowCastersCannotBeReceivers(boolean ind) {
    OgreJNI.RenderQueue_setShadowCastersCannotBeReceivers(swigCPtr, this, ind);
  }

  public boolean getShadowCastersCannotBeReceivers() {
    return OgreJNI.RenderQueue_getShadowCastersCannotBeReceivers(swigCPtr, this);
  }

  public void setRenderableListener(RenderQueue.RenderableListener listener) {
    OgreJNI.RenderQueue_setRenderableListener(swigCPtr, this, RenderQueue.RenderableListener.getCPtr(listener), listener);
  }

  public RenderQueue.RenderableListener getRenderableListener() {
    long cPtr = OgreJNI.RenderQueue_getRenderableListener(swigCPtr, this);
    return (cPtr == 0) ? null : new RenderQueue.RenderableListener(cPtr, false);
  }

  public void merge(RenderQueue rhs) {
    OgreJNI.RenderQueue_merge(swigCPtr, this, RenderQueue.getCPtr(rhs), rhs);
  }

  public void processVisibleObject(MovableObject mo, Camera cam, boolean onlyShadowCasters, VisibleObjectsBoundsInfo visibleBounds) {
    OgreJNI.RenderQueue_processVisibleObject(swigCPtr, this, MovableObject.getCPtr(mo), mo, Camera.getCPtr(cam), cam, onlyShadowCasters, VisibleObjectsBoundsInfo.getCPtr(visibleBounds), visibleBounds);
  }

}
