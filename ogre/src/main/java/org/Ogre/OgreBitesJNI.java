/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class OgreBitesJNI {
  public final static native long new_SGTechniqueResolverListener(long jarg1);
  public final static native long SGTechniqueResolverListener_handleSchemeNotFound(long jarg1, SGTechniqueResolverListener jarg1_, int jarg2, String jarg3, long jarg4, Material jarg4_, int jarg5, long jarg6, Renderable jarg6_);
  public final static native boolean SGTechniqueResolverListener_afterIlluminationPassesCreated(long jarg1, SGTechniqueResolverListener jarg1_, long jarg2, Technique jarg2_);
  public final static native boolean SGTechniqueResolverListener_beforeIlluminationPassesCleared(long jarg1, SGTechniqueResolverListener jarg1_, long jarg2, Technique jarg2_);
  public final static native void delete_SGTechniqueResolverListener(long jarg1);
  public final static native int BUTTON_LEFT_get();
  public final static native int BUTTON_MIDDLE_get();
  public final static native int BUTTON_RIGHT_get();
  public final static native void KeyboardEvent_type_set(long jarg1, KeyboardEvent jarg1_, int jarg2);
  public final static native int KeyboardEvent_type_get(long jarg1, KeyboardEvent jarg1_);
  public final static native void KeyboardEvent_repeat_set(long jarg1, KeyboardEvent jarg1_, int jarg2);
  public final static native int KeyboardEvent_repeat_get(long jarg1, KeyboardEvent jarg1_);
  public final static native long new_KeyboardEvent();
  public final static native void delete_KeyboardEvent(long jarg1);
  public final static native void MouseMotionEvent_type_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_type_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native void MouseMotionEvent_x_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_x_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native void MouseMotionEvent_y_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_y_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native void MouseMotionEvent_xrel_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_xrel_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native void MouseMotionEvent_yrel_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_yrel_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native void MouseMotionEvent_windowID_set(long jarg1, MouseMotionEvent jarg1_, int jarg2);
  public final static native int MouseMotionEvent_windowID_get(long jarg1, MouseMotionEvent jarg1_);
  public final static native long new_MouseMotionEvent();
  public final static native void delete_MouseMotionEvent(long jarg1);
  public final static native void MouseButtonEvent_type_set(long jarg1, MouseButtonEvent jarg1_, int jarg2);
  public final static native int MouseButtonEvent_type_get(long jarg1, MouseButtonEvent jarg1_);
  public final static native void MouseButtonEvent_x_set(long jarg1, MouseButtonEvent jarg1_, int jarg2);
  public final static native int MouseButtonEvent_x_get(long jarg1, MouseButtonEvent jarg1_);
  public final static native void MouseButtonEvent_y_set(long jarg1, MouseButtonEvent jarg1_, int jarg2);
  public final static native int MouseButtonEvent_y_get(long jarg1, MouseButtonEvent jarg1_);
  public final static native void MouseButtonEvent_button_set(long jarg1, MouseButtonEvent jarg1_, int jarg2);
  public final static native int MouseButtonEvent_button_get(long jarg1, MouseButtonEvent jarg1_);
  public final static native long new_MouseButtonEvent();
  public final static native void delete_MouseButtonEvent(long jarg1);
  public final static native void MouseWheelEvent_type_set(long jarg1, MouseWheelEvent jarg1_, int jarg2);
  public final static native int MouseWheelEvent_type_get(long jarg1, MouseWheelEvent jarg1_);
  public final static native void MouseWheelEvent_y_set(long jarg1, MouseWheelEvent jarg1_, int jarg2);
  public final static native int MouseWheelEvent_y_get(long jarg1, MouseWheelEvent jarg1_);
  public final static native long new_MouseWheelEvent();
  public final static native void delete_MouseWheelEvent(long jarg1);
  public final static native void TouchFingerEvent_type_set(long jarg1, TouchFingerEvent jarg1_, int jarg2);
  public final static native int TouchFingerEvent_type_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native void TouchFingerEvent_fingerId_set(long jarg1, TouchFingerEvent jarg1_, int jarg2);
  public final static native int TouchFingerEvent_fingerId_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native void TouchFingerEvent_x_set(long jarg1, TouchFingerEvent jarg1_, float jarg2);
  public final static native float TouchFingerEvent_x_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native void TouchFingerEvent_y_set(long jarg1, TouchFingerEvent jarg1_, float jarg2);
  public final static native float TouchFingerEvent_y_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native void TouchFingerEvent_dx_set(long jarg1, TouchFingerEvent jarg1_, float jarg2);
  public final static native float TouchFingerEvent_dx_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native void TouchFingerEvent_dy_set(long jarg1, TouchFingerEvent jarg1_, float jarg2);
  public final static native float TouchFingerEvent_dy_get(long jarg1, TouchFingerEvent jarg1_);
  public final static native long new_TouchFingerEvent();
  public final static native void delete_TouchFingerEvent(long jarg1);
  public final static native void Event_type_set(long jarg1, Event jarg1_, int jarg2);
  public final static native int Event_type_get(long jarg1, Event jarg1_);
  public final static native void Event_key_set(long jarg1, Event jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native long Event_key_get(long jarg1, Event jarg1_);
  public final static native void Event_button_set(long jarg1, Event jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native long Event_button_get(long jarg1, Event jarg1_);
  public final static native void Event_wheel_set(long jarg1, Event jarg1_, long jarg2, MouseWheelEvent jarg2_);
  public final static native long Event_wheel_get(long jarg1, Event jarg1_);
  public final static native void Event_motion_set(long jarg1, Event jarg1_, long jarg2, MouseMotionEvent jarg2_);
  public final static native long Event_motion_get(long jarg1, Event jarg1_);
  public final static native void Event_tfinger_set(long jarg1, Event jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native long Event_tfinger_get(long jarg1, Event jarg1_);
  public final static native long new_Event();
  public final static native void delete_Event(long jarg1);
  public final static native int SDLK_RETURN_get();
  public final static native int SDLK_ESCAPE_get();
  public final static native int SDLK_SPACE_get();
  public final static native int SDLK_DOWN_get();
  public final static native int SDLK_UP_get();
  public final static native int SDLK_LEFT_get();
  public final static native int SDLK_RIGHT_get();
  public final static native int SDLK_PAGEUP_get();
  public final static native int SDLK_PAGEDOWN_get();
  public final static native int SDLK_LSHIFT_get();
  public final static native int SDLK_F1_get();
  public final static native int SDLK_F2_get();
  public final static native int SDLK_F3_get();
  public final static native int SDLK_F4_get();
  public final static native int SDLK_F5_get();
  public final static native int SDLK_F6_get();
  public final static native int SDLK_F9_get();
  public final static native int SDLK_F10_get();
  public final static native int SDLK_F11_get();
  public final static native int SDLK_F12_get();
  public final static native int SDLK_KP_PLUS_get();
  public final static native int SDLK_KP_MINUS_get();
  public final static native int SDL_NUM_KEYCODES_get();
  public final static native int SDL_KEYDOWN_get();
  public final static native int SDL_KEYUP_get();
  public final static native int SDL_MOUSEBUTTONDOWN_get();
  public final static native int SDL_MOUSEBUTTONUP_get();
  public final static native int SDL_MOUSEWHEEL_get();
  public final static native int SDL_MOUSEMOTION_get();
  public final static native int SDL_FINGERDOWN_get();
  public final static native int SDL_FINGERUP_get();
  public final static native int SDL_FINGERMOTION_get();
  public final static native int KMOD_CTRL_get();
  public final static native long SDL_GetKeyboardState(long jarg1);
  public final static native int SDL_GetMouseState(long jarg1, long jarg2);
  public final static native int SDL_GetModState();
  public final static native void delete_InputListener(long jarg1);
  public final static native void InputListener_frameRendered(long jarg1, InputListener jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native void InputListener_frameRenderedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean InputListener_keyPressed(long jarg1, InputListener jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean InputListener_keyPressedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean InputListener_keyReleased(long jarg1, InputListener jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean InputListener_keyReleasedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean InputListener_touchMoved(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_touchMovedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_touchPressed(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_touchPressedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_touchReleased(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_touchReleasedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, TouchFingerEvent jarg2_);
  public final static native boolean InputListener_mouseMoved(long jarg1, InputListener jarg1_, long jarg2, MouseMotionEvent jarg2_);
  public final static native boolean InputListener_mouseMovedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, MouseMotionEvent jarg2_);
  public final static native boolean InputListener_mouseWheelRolled(long jarg1, InputListener jarg1_, long jarg2, MouseWheelEvent jarg2_);
  public final static native boolean InputListener_mouseWheelRolledSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, MouseWheelEvent jarg2_);
  public final static native boolean InputListener_mousePressed(long jarg1, InputListener jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean InputListener_mousePressedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean InputListener_mouseReleased(long jarg1, InputListener jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean InputListener_mouseReleasedSwigExplicitInputListener(long jarg1, InputListener jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native long new_InputListener();
  public final static native void InputListener_director_connect(InputListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void InputListener_change_ownership(InputListener obj, long cptr, boolean take_or_release);
  public final static native void NativeWindowPair_render_set(long jarg1, NativeWindowPair jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native long NativeWindowPair_render_get(long jarg1, NativeWindowPair jarg1_);
  public final static native void NativeWindowPair__native_set(long jarg1, NativeWindowPair jarg1_, long jarg2);
  public final static native long NativeWindowPair__native_get(long jarg1, NativeWindowPair jarg1_);
  public final static native long new_NativeWindowPair();
  public final static native void delete_NativeWindowPair(long jarg1);
  public final static native long new_ApplicationContext__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_ApplicationContext__SWIG_1(String jarg1);
  public final static native long new_ApplicationContext__SWIG_2();
  public final static native void delete_ApplicationContext(long jarg1);
  public final static native long ApplicationContext_getRenderWindow(long jarg1, ApplicationContext jarg1_);
  public final static native long ApplicationContext_getRoot(long jarg1, ApplicationContext jarg1_);
  public final static native long ApplicationContext_getOverlaySystem(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext__fireInputEventAndroid__SWIG_0(long jarg1, ApplicationContext jarg1_, long jarg2, int jarg3);
  public final static native void ApplicationContext__fireInputEventAndroid__SWIG_1(long jarg1, ApplicationContext jarg1_, long jarg2);
  public final static native void ApplicationContext_closeApp(long jarg1, ApplicationContext jarg1_);
  public final static native boolean ApplicationContext_frameStarted(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean ApplicationContext_frameStartedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean ApplicationContext_frameRenderingQueued(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean ApplicationContext_frameRenderingQueuedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean ApplicationContext_frameEnded(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean ApplicationContext_frameEndedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native void ApplicationContext_windowMoved(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowMovedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowResized(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowResizedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native boolean ApplicationContext_windowClosing(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native boolean ApplicationContext_windowClosingSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowClosed(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowClosedSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowFocusChange(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext_windowFocusChangeSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void ApplicationContext__fireInputEvent(long jarg1, ApplicationContext jarg1_, long jarg2, Event jarg2_, long jarg3);
  public final static native boolean ApplicationContext_initialiseRTShaderSystem(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_setRTSSWriteShadersToDisk(long jarg1, ApplicationContext jarg1_, boolean jarg2);
  public final static native void ApplicationContext_destroyRTShaderSystem(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_setup(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_setupSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_createRoot(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_createRootSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native boolean ApplicationContext_oneTimeConfig(long jarg1, ApplicationContext jarg1_);
  public final static native boolean ApplicationContext_oneTimeConfigSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_setWindowGrab__SWIG_0(long jarg1, ApplicationContext jarg1_, long jarg2, boolean jarg3);
  public final static native void ApplicationContext_setWindowGrab__SWIG_1(long jarg1, ApplicationContext jarg1_, long jarg2);
  public final static native void ApplicationContext_setWindowGrab__SWIG_2(long jarg1, ApplicationContext jarg1_, boolean jarg2);
  public final static native void ApplicationContext_setWindowGrab__SWIG_3(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_locateResources(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_locateResourcesSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_loadResources(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_loadResourcesSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_reconfigure(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3);
  public final static native void ApplicationContext_reconfigureSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3);
  public final static native void ApplicationContext_shutdown(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_shutdownSwigExplicitApplicationContext(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_pollEvents(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_createDummyScene(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_destroyDummyScene(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_enableShaderCache(long jarg1, ApplicationContext jarg1_);
  public final static native void ApplicationContext_addInputListener__SWIG_0(long jarg1, ApplicationContext jarg1_, long jarg2, long jarg3, InputListener jarg3_);
  public final static native void ApplicationContext_addInputListener__SWIG_1(long jarg1, ApplicationContext jarg1_, long jarg2, InputListener jarg2_);
  public final static native void ApplicationContext_removeInputListener__SWIG_0(long jarg1, ApplicationContext jarg1_, long jarg2, long jarg3, InputListener jarg3_);
  public final static native void ApplicationContext_removeInputListener__SWIG_1(long jarg1, ApplicationContext jarg1_, long jarg2, InputListener jarg2_);
  public final static native long ApplicationContext_createWindow__SWIG_0(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_0(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long ApplicationContext_createWindow__SWIG_1(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_1(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long ApplicationContext_createWindow__SWIG_2(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3);
  public final static native long ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_2(long jarg1, ApplicationContext jarg1_, String jarg2, long jarg3);
  public final static native long ApplicationContext_createWindow__SWIG_3(long jarg1, ApplicationContext jarg1_, String jarg2);
  public final static native long ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_3(long jarg1, ApplicationContext jarg1_, String jarg2);
  public final static native String ApplicationContext_getDefaultMediaDir();
  public final static native void ApplicationContext_initAppForAndroid(long jarg1, ApplicationContext jarg1_, Object jarg2, Object jarg3);
  public final static native void ApplicationContext_director_connect(ApplicationContext obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ApplicationContext_change_ownership(ApplicationContext obj, long cptr, boolean take_or_release);
  public final static native long new_CameraMan(long jarg1, SceneNode jarg1_);
  public final static native void CameraMan_setCamera(long jarg1, CameraMan jarg1_, long jarg2, SceneNode jarg2_);
  public final static native long CameraMan_getCamera(long jarg1, CameraMan jarg1_);
  public final static native void CameraMan_setTarget(long jarg1, CameraMan jarg1_, long jarg2, SceneNode jarg2_);
  public final static native long CameraMan_getTarget(long jarg1, CameraMan jarg1_);
  public final static native void CameraMan_setYawPitchDist(long jarg1, CameraMan jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, float jarg4);
  public final static native void CameraMan_setTopSpeed(long jarg1, CameraMan jarg1_, float jarg2);
  public final static native float CameraMan_getTopSpeed(long jarg1, CameraMan jarg1_);
  public final static native void CameraMan_setStyle(long jarg1, CameraMan jarg1_, int jarg2);
  public final static native int CameraMan_getStyle(long jarg1, CameraMan jarg1_);
  public final static native void CameraMan_manualStop(long jarg1, CameraMan jarg1_);
  public final static native void CameraMan_frameRendered(long jarg1, CameraMan jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean CameraMan_keyPressed(long jarg1, CameraMan jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean CameraMan_keyReleased(long jarg1, CameraMan jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native boolean CameraMan_mouseMoved(long jarg1, CameraMan jarg1_, long jarg2, MouseMotionEvent jarg2_);
  public final static native boolean CameraMan_mouseWheelRolled(long jarg1, CameraMan jarg1_, long jarg2, MouseWheelEvent jarg2_);
  public final static native boolean CameraMan_mousePressed(long jarg1, CameraMan jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean CameraMan_mouseReleased(long jarg1, CameraMan jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native void delete_CameraMan(long jarg1);
  public final static native void delete_WindowEventListener(long jarg1);
  public final static native void WindowEventListener_windowMoved(long jarg1, WindowEventListener jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void WindowEventListener_windowResized(long jarg1, WindowEventListener jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native boolean WindowEventListener_windowClosing(long jarg1, WindowEventListener jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void WindowEventListener_windowClosed(long jarg1, WindowEventListener jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native void WindowEventListener_windowFocusChange(long jarg1, WindowEventListener jarg1_, long jarg2, RenderWindow jarg2_);
  public final static native long new_WindowEventListener();
  public final static native void WindowEventUtilities_messagePump();
  public final static native void WindowEventUtilities_addWindowEventListener(long jarg1, RenderWindow jarg1_, long jarg2, WindowEventListener jarg2_);
  public final static native void WindowEventUtilities_removeWindowEventListener(long jarg1, RenderWindow jarg1_, long jarg2, WindowEventListener jarg2_);
  public final static native void WindowEventUtilities__addRenderWindow(long jarg1, RenderWindow jarg1_);
  public final static native void WindowEventUtilities__removeRenderWindow(long jarg1, RenderWindow jarg1_);
  public final static native void WindowEventUtilities__msListeners_set(long jarg1);
  public final static native long WindowEventUtilities__msListeners_get();
  public final static native void WindowEventUtilities__msWindows_set(long jarg1);
  public final static native long WindowEventUtilities__msWindows_get();
  public final static native long new_WindowEventUtilities();
  public final static native void delete_WindowEventUtilities(long jarg1);
  public final static native void delete_TrayListener(long jarg1);
  public final static native void TrayListener_buttonHit(long jarg1, TrayListener jarg1_, long jarg2, Button jarg2_);
  public final static native void TrayListener_itemSelected(long jarg1, TrayListener jarg1_, long jarg2, SelectMenu jarg2_);
  public final static native void TrayListener_labelHit(long jarg1, TrayListener jarg1_, long jarg2, Label jarg2_);
  public final static native void TrayListener_sliderMoved(long jarg1, TrayListener jarg1_, long jarg2, Slider jarg2_);
  public final static native void TrayListener_checkBoxToggled(long jarg1, TrayListener jarg1_, long jarg2, CheckBox jarg2_);
  public final static native void TrayListener_okDialogClosed(long jarg1, TrayListener jarg1_, long jarg2);
  public final static native void TrayListener_yesNoDialogClosed(long jarg1, TrayListener jarg1_, long jarg2, boolean jarg3);
  public final static native long new_TrayListener();
  public final static native long new_Widget();
  public final static native void delete_Widget(long jarg1);
  public final static native void Widget_cleanup(long jarg1, Widget jarg1_);
  public final static native void Widget_nukeOverlayElement(long jarg1);
  public final static native boolean Widget_isCursorOver__SWIG_0(long jarg1, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native boolean Widget_isCursorOver__SWIG_1(long jarg1, long jarg2, Vector2 jarg2_);
  public final static native long Widget_cursorOffset(long jarg1, long jarg2, Vector2 jarg2_);
  public final static native float Widget_getCaptionWidth(long jarg1, long jarg2);
  public final static native void Widget_fitCaptionToArea(long jarg1, long jarg2, float jarg3);
  public final static native long Widget_getOverlayElement(long jarg1, Widget jarg1_);
  public final static native String Widget_getName(long jarg1, Widget jarg1_);
  public final static native int Widget_getTrayLocation(long jarg1, Widget jarg1_);
  public final static native void Widget_hide(long jarg1, Widget jarg1_);
  public final static native void Widget_show(long jarg1, Widget jarg1_);
  public final static native boolean Widget_isVisible(long jarg1, Widget jarg1_);
  public final static native void Widget__cursorPressed(long jarg1, Widget jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Widget__cursorReleased(long jarg1, Widget jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Widget__cursorMoved(long jarg1, Widget jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void Widget__focusLost(long jarg1, Widget jarg1_);
  public final static native void Widget__assignToTray(long jarg1, Widget jarg1_, int jarg2);
  public final static native void Widget__assignListener(long jarg1, Widget jarg1_, long jarg2, TrayListener jarg2_);
  public final static native long new_Button(String jarg1, long jarg2, float jarg3);
  public final static native void delete_Button(long jarg1);
  public final static native long Button_getCaption(long jarg1, Button jarg1_);
  public final static native void Button_setCaption(long jarg1, Button jarg1_, long jarg2);
  public final static native int Button_getState(long jarg1, Button jarg1_);
  public final static native void Button__cursorPressed(long jarg1, Button jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Button__cursorReleased(long jarg1, Button jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Button__cursorMoved(long jarg1, Button jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void Button__focusLost(long jarg1, Button jarg1_);
  public final static native long new_TextBox(String jarg1, long jarg2, float jarg3, float jarg4);
  public final static native void TextBox_setPadding(long jarg1, TextBox jarg1_, float jarg2);
  public final static native float TextBox_getPadding(long jarg1, TextBox jarg1_);
  public final static native long TextBox_getCaption(long jarg1, TextBox jarg1_);
  public final static native void TextBox_setCaption(long jarg1, TextBox jarg1_, long jarg2);
  public final static native long TextBox_getText(long jarg1, TextBox jarg1_);
  public final static native void TextBox_setText(long jarg1, TextBox jarg1_, long jarg2);
  public final static native void TextBox_setTextAlignment(long jarg1, TextBox jarg1_, long jarg2);
  public final static native void TextBox_clearText(long jarg1, TextBox jarg1_);
  public final static native void TextBox_appendText(long jarg1, TextBox jarg1_, long jarg2);
  public final static native void TextBox_refitContents(long jarg1, TextBox jarg1_);
  public final static native void TextBox_setScrollPercentage(long jarg1, TextBox jarg1_, float jarg2);
  public final static native float TextBox_getScrollPercentage(long jarg1, TextBox jarg1_);
  public final static native long TextBox_getHeightInLines(long jarg1, TextBox jarg1_);
  public final static native void TextBox__cursorPressed(long jarg1, TextBox jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void TextBox__cursorReleased(long jarg1, TextBox jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void TextBox__cursorMoved(long jarg1, TextBox jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void TextBox__focusLost(long jarg1, TextBox jarg1_);
  public final static native void delete_TextBox(long jarg1);
  public final static native long new_SelectMenu(String jarg1, long jarg2, float jarg3, float jarg4, long jarg5);
  public final static native void SelectMenu_copyItemsFrom(long jarg1, SelectMenu jarg1_, long jarg2, SelectMenu jarg2_);
  public final static native boolean SelectMenu_isExpanded(long jarg1, SelectMenu jarg1_);
  public final static native long SelectMenu_getCaption(long jarg1, SelectMenu jarg1_);
  public final static native void SelectMenu_setCaption(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native long SelectMenu_getItems(long jarg1, SelectMenu jarg1_);
  public final static native long SelectMenu_getNumItems(long jarg1, SelectMenu jarg1_);
  public final static native void SelectMenu_setItems(long jarg1, SelectMenu jarg1_, long jarg2, StringVector jarg2_);
  public final static native void SelectMenu_addItem(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native void SelectMenu_insertItem(long jarg1, SelectMenu jarg1_, long jarg2, long jarg3);
  public final static native void SelectMenu_removeItem__SWIG_0(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native void SelectMenu_removeItem__SWIG_1(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native void SelectMenu_clearItems(long jarg1, SelectMenu jarg1_);
  public final static native void SelectMenu_selectItem__SWIG_0(long jarg1, SelectMenu jarg1_, long jarg2, boolean jarg3);
  public final static native void SelectMenu_selectItem__SWIG_1(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native boolean SelectMenu_containsItem(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native void SelectMenu_selectItem__SWIG_2(long jarg1, SelectMenu jarg1_, long jarg2, boolean jarg3);
  public final static native void SelectMenu_selectItem__SWIG_3(long jarg1, SelectMenu jarg1_, long jarg2);
  public final static native long SelectMenu_getSelectedItem(long jarg1, SelectMenu jarg1_);
  public final static native int SelectMenu_getSelectionIndex(long jarg1, SelectMenu jarg1_);
  public final static native void SelectMenu__cursorPressed(long jarg1, SelectMenu jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void SelectMenu__cursorReleased(long jarg1, SelectMenu jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void SelectMenu__cursorMoved(long jarg1, SelectMenu jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void SelectMenu__focusLost(long jarg1, SelectMenu jarg1_);
  public final static native void delete_SelectMenu(long jarg1);
  public final static native long new_Label(String jarg1, long jarg2, float jarg3);
  public final static native long Label_getCaption(long jarg1, Label jarg1_);
  public final static native void Label_setCaption(long jarg1, Label jarg1_, long jarg2);
  public final static native void Label__cursorPressed(long jarg1, Label jarg1_, long jarg2, Vector2 jarg2_);
  public final static native boolean Label__isFitToTray(long jarg1, Label jarg1_);
  public final static native void delete_Label(long jarg1);
  public final static native long new_Separator(String jarg1, float jarg2);
  public final static native boolean Separator__isFitToTray(long jarg1, Separator jarg1_);
  public final static native void delete_Separator(long jarg1);
  public final static native long new_Slider(String jarg1, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, long jarg8);
  public final static native void Slider_setRange__SWIG_0(long jarg1, Slider jarg1_, float jarg2, float jarg3, long jarg4, boolean jarg5);
  public final static native void Slider_setRange__SWIG_1(long jarg1, Slider jarg1_, float jarg2, float jarg3, long jarg4);
  public final static native long Slider_getValueCaption(long jarg1, Slider jarg1_);
  public final static native void Slider_setValueCaption(long jarg1, Slider jarg1_, long jarg2);
  public final static native void Slider_setValue__SWIG_0(long jarg1, Slider jarg1_, float jarg2, boolean jarg3);
  public final static native void Slider_setValue__SWIG_1(long jarg1, Slider jarg1_, float jarg2);
  public final static native float Slider_getValue(long jarg1, Slider jarg1_);
  public final static native long Slider_getCaption(long jarg1, Slider jarg1_);
  public final static native void Slider_setCaption(long jarg1, Slider jarg1_, long jarg2);
  public final static native void Slider__cursorPressed(long jarg1, Slider jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Slider__cursorReleased(long jarg1, Slider jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Slider__cursorMoved(long jarg1, Slider jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void Slider__focusLost(long jarg1, Slider jarg1_);
  public final static native void delete_Slider(long jarg1);
  public final static native long new_ParamsPanel(String jarg1, float jarg2, long jarg3);
  public final static native void ParamsPanel_setAllParamNames(long jarg1, ParamsPanel jarg1_, long jarg2, StringVector jarg2_);
  public final static native long ParamsPanel_getAllParamNames(long jarg1, ParamsPanel jarg1_);
  public final static native void ParamsPanel_setAllParamValues(long jarg1, ParamsPanel jarg1_, long jarg2, StringVector jarg2_);
  public final static native void ParamsPanel_setParamValue__SWIG_0(long jarg1, ParamsPanel jarg1_, long jarg2, long jarg3);
  public final static native void ParamsPanel_setParamValue__SWIG_1(long jarg1, ParamsPanel jarg1_, long jarg2, long jarg3);
  public final static native long ParamsPanel_getParamValue__SWIG_0(long jarg1, ParamsPanel jarg1_, long jarg2);
  public final static native long ParamsPanel_getParamValue__SWIG_1(long jarg1, ParamsPanel jarg1_, long jarg2);
  public final static native long ParamsPanel_getAllParamValues(long jarg1, ParamsPanel jarg1_);
  public final static native void delete_ParamsPanel(long jarg1);
  public final static native long new_CheckBox(String jarg1, long jarg2, float jarg3);
  public final static native long CheckBox_getCaption(long jarg1, CheckBox jarg1_);
  public final static native void CheckBox_setCaption(long jarg1, CheckBox jarg1_, long jarg2);
  public final static native boolean CheckBox_isChecked(long jarg1, CheckBox jarg1_);
  public final static native void CheckBox_setChecked__SWIG_0(long jarg1, CheckBox jarg1_, boolean jarg2, boolean jarg3);
  public final static native void CheckBox_setChecked__SWIG_1(long jarg1, CheckBox jarg1_, boolean jarg2);
  public final static native void CheckBox_toggle__SWIG_0(long jarg1, CheckBox jarg1_, boolean jarg2);
  public final static native void CheckBox_toggle__SWIG_1(long jarg1, CheckBox jarg1_);
  public final static native void CheckBox__cursorPressed(long jarg1, CheckBox jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void CheckBox__cursorMoved(long jarg1, CheckBox jarg1_, long jarg2, Vector2 jarg2_, float jarg3);
  public final static native void CheckBox__focusLost(long jarg1, CheckBox jarg1_);
  public final static native void delete_CheckBox(long jarg1);
  public final static native long new_DecorWidget(String jarg1, String jarg2);
  public final static native void delete_DecorWidget(long jarg1);
  public final static native long new_ProgressBar(String jarg1, long jarg2, float jarg3, float jarg4);
  public final static native void ProgressBar_setProgress(long jarg1, ProgressBar jarg1_, float jarg2);
  public final static native float ProgressBar_getProgress(long jarg1, ProgressBar jarg1_);
  public final static native long ProgressBar_getCaption(long jarg1, ProgressBar jarg1_);
  public final static native void ProgressBar_setCaption(long jarg1, ProgressBar jarg1_, long jarg2);
  public final static native long ProgressBar_getComment(long jarg1, ProgressBar jarg1_);
  public final static native void ProgressBar_setComment(long jarg1, ProgressBar jarg1_, long jarg2);
  public final static native void delete_ProgressBar(long jarg1);
  public final static native long new_TrayManager__SWIG_0(String jarg1, long jarg2, RenderWindow jarg2_, long jarg3, TrayListener jarg3_);
  public final static native long new_TrayManager__SWIG_1(String jarg1, long jarg2, RenderWindow jarg2_);
  public final static native void delete_TrayManager(long jarg1);
  public final static native long TrayManager_screenToScene(long jarg1, Camera jarg1_, long jarg2, Vector2 jarg2_);
  public final static native long TrayManager_sceneToScreen(long jarg1, Camera jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long TrayManager_getTrayContainer(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native long TrayManager_getBackdropLayer(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getTraysLayer(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getCursorLayer(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getBackdropContainer(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getCursorContainer(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getCursorImage(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_setListener(long jarg1, TrayManager jarg1_, long jarg2, TrayListener jarg2_);
  public final static native long TrayManager_getListener(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showAll(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_hideAll(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showBackdrop__SWIG_0(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native void TrayManager_showBackdrop__SWIG_1(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_hideBackdrop(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showCursor__SWIG_0(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native void TrayManager_showCursor__SWIG_1(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_hideCursor(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_refreshCursor(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showTrays(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_hideTrays(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_isCursorVisible(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_isBackdropVisible(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_areTraysVisible(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_setTrayWidgetAlignment(long jarg1, TrayManager jarg1_, int jarg2, long jarg3);
  public final static native void TrayManager_setWidgetPadding(long jarg1, TrayManager jarg1_, float jarg2);
  public final static native void TrayManager_setWidgetSpacing(long jarg1, TrayManager jarg1_, float jarg2);
  public final static native void TrayManager_setTrayPadding(long jarg1, TrayManager jarg1_, float jarg2);
  public final static native float TrayManager_getWidgetPadding(long jarg1, TrayManager jarg1_);
  public final static native float TrayManager_getWidgetSpacing(long jarg1, TrayManager jarg1_);
  public final static native float TrayManager_getTrayPadding(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_adjustTrays(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getCursorRay(long jarg1, TrayManager jarg1_, long jarg2, Camera jarg2_);
  public final static native long TrayManager_createButton__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, String jarg4, float jarg5);
  public final static native long TrayManager_createButton__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native long TrayManager_createTextBox(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6);
  public final static native long TrayManager_createThickSelectMenu__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, long jarg6, long jarg7, StringVector jarg7_);
  public final static native long TrayManager_createThickSelectMenu__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, long jarg6);
  public final static native long TrayManager_createLongSelectMenu__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6, long jarg7, long jarg8, StringVector jarg8_);
  public final static native long TrayManager_createLongSelectMenu__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6, long jarg7);
  public final static native long TrayManager_createLongSelectMenu__SWIG_2(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, long jarg6, long jarg7, StringVector jarg7_);
  public final static native long TrayManager_createLongSelectMenu__SWIG_3(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, long jarg6);
  public final static native long TrayManager_createLabel__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5);
  public final static native long TrayManager_createLabel__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native long TrayManager_createSeparator__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, float jarg4);
  public final static native long TrayManager_createSeparator__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3);
  public final static native long TrayManager_createThickSlider(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9);
  public final static native long TrayManager_createLongSlider__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, long jarg10);
  public final static native long TrayManager_createLongSlider__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6, float jarg7, float jarg8, long jarg9);
  public final static native long TrayManager_createParamsPanel__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, float jarg4, long jarg5);
  public final static native long TrayManager_createParamsPanel__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, float jarg4, long jarg5, StringVector jarg5_);
  public final static native long TrayManager_createCheckBox__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5);
  public final static native long TrayManager_createCheckBox__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native long TrayManager_createDecorWidget(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native long TrayManager_createProgressBar(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, long jarg4, float jarg5, float jarg6);
  public final static native void TrayManager_showFrameStats__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, long jarg3);
  public final static native void TrayManager_showFrameStats__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native void TrayManager_hideFrameStats(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_areFrameStatsVisible(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_toggleAdvancedFrameStats(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showLogo__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, long jarg3);
  public final static native void TrayManager_showLogo__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native void TrayManager_hideLogo(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_isLogoVisible(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showLoadingBar__SWIG_0(long jarg1, TrayManager jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native void TrayManager_showLoadingBar__SWIG_1(long jarg1, TrayManager jarg1_, long jarg2, long jarg3);
  public final static native void TrayManager_showLoadingBar__SWIG_2(long jarg1, TrayManager jarg1_, long jarg2);
  public final static native void TrayManager_showLoadingBar__SWIG_3(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_hideLoadingBar(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_isLoadingBarVisible(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_showOkDialog(long jarg1, TrayManager jarg1_, long jarg2, long jarg3);
  public final static native void TrayManager_showYesNoDialog(long jarg1, TrayManager jarg1_, long jarg2, long jarg3);
  public final static native void TrayManager_closeDialog(long jarg1, TrayManager jarg1_);
  public final static native boolean TrayManager_isDialogVisible(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getWidget__SWIG_0(long jarg1, TrayManager jarg1_, int jarg2, String jarg3);
  public final static native long TrayManager_getWidget__SWIG_1(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native long TrayManager_getNumWidgets(long jarg1, TrayManager jarg1_);
  public final static native long TrayManager_getWidgets(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native int TrayManager_locateWidgetInTray(long jarg1, TrayManager jarg1_, long jarg2, Widget jarg2_);
  public final static native void TrayManager_destroyWidget__SWIG_0(long jarg1, TrayManager jarg1_, long jarg2, Widget jarg2_);
  public final static native void TrayManager_destroyWidget__SWIG_1(long jarg1, TrayManager jarg1_, int jarg2, long jarg3);
  public final static native void TrayManager_destroyWidget__SWIG_2(long jarg1, TrayManager jarg1_, int jarg2, String jarg3);
  public final static native void TrayManager_destroyWidget__SWIG_3(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native void TrayManager_destroyAllWidgetsInTray(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native void TrayManager_destroyAllWidgets(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_moveWidgetToTray__SWIG_0(long jarg1, TrayManager jarg1_, long jarg2, Widget jarg2_, int jarg3, long jarg4);
  public final static native void TrayManager_moveWidgetToTray__SWIG_1(long jarg1, TrayManager jarg1_, long jarg2, Widget jarg2_, int jarg3);
  public final static native void TrayManager_moveWidgetToTray__SWIG_2(long jarg1, TrayManager jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void TrayManager_moveWidgetToTray__SWIG_3(long jarg1, TrayManager jarg1_, String jarg2, int jarg3);
  public final static native void TrayManager_moveWidgetToTray__SWIG_4(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, int jarg4, long jarg5);
  public final static native void TrayManager_moveWidgetToTray__SWIG_5(long jarg1, TrayManager jarg1_, int jarg2, String jarg3, int jarg4);
  public final static native void TrayManager_moveWidgetToTray__SWIG_6(long jarg1, TrayManager jarg1_, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void TrayManager_moveWidgetToTray__SWIG_7(long jarg1, TrayManager jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void TrayManager_removeWidgetFromTray__SWIG_0(long jarg1, TrayManager jarg1_, long jarg2, Widget jarg2_);
  public final static native void TrayManager_removeWidgetFromTray__SWIG_1(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native void TrayManager_removeWidgetFromTray__SWIG_2(long jarg1, TrayManager jarg1_, int jarg2, String jarg3);
  public final static native void TrayManager_removeWidgetFromTray__SWIG_3(long jarg1, TrayManager jarg1_, int jarg2, long jarg3);
  public final static native void TrayManager_clearTray(long jarg1, TrayManager jarg1_, int jarg2);
  public final static native void TrayManager_clearAllTrays(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_frameRendered(long jarg1, TrayManager jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native void TrayManager_windowUpdate(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_resourceGroupScriptingStarted(long jarg1, TrayManager jarg1_, String jarg2, long jarg3);
  public final static native void TrayManager_scriptParseStarted(long jarg1, TrayManager jarg1_, String jarg2, long jarg3);
  public final static native void TrayManager_scriptParseEnded(long jarg1, TrayManager jarg1_, String jarg2, boolean jarg3);
  public final static native void TrayManager_resourceGroupLoadStarted(long jarg1, TrayManager jarg1_, String jarg2, long jarg3);
  public final static native void TrayManager_resourceLoadStarted(long jarg1, TrayManager jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void TrayManager_resourceLoadEnded(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_worldGeometryStageStarted(long jarg1, TrayManager jarg1_, String jarg2);
  public final static native void TrayManager_worldGeometryStageEnded(long jarg1, TrayManager jarg1_);
  public final static native void TrayManager_labelHit(long jarg1, TrayManager jarg1_, long jarg2, Label jarg2_);
  public final static native void TrayManager_buttonHit(long jarg1, TrayManager jarg1_, long jarg2, Button jarg2_);
  public final static native boolean TrayManager_mousePressed(long jarg1, TrayManager jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean TrayManager_mouseReleased(long jarg1, TrayManager jarg1_, long jarg2, MouseButtonEvent jarg2_);
  public final static native boolean TrayManager_mouseMoved(long jarg1, TrayManager jarg1_, long jarg2, MouseMotionEvent jarg2_);
  public final static native long new_AdvancedRenderControls(long jarg1, TrayManager jarg1_, long jarg2, Camera jarg2_);
  public final static native void delete_AdvancedRenderControls(long jarg1);
  public final static native boolean AdvancedRenderControls_keyPressed(long jarg1, AdvancedRenderControls jarg1_, long jarg2, KeyboardEvent jarg2_);
  public final static native void AdvancedRenderControls_frameRendered(long jarg1, AdvancedRenderControls jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native long SGTechniqueResolverListener_SWIGUpcast(long jarg1);
  public final static native long ApplicationContext_SWIGUpcast(long jarg1);
  public final static native long CameraMan_SWIGUpcast(long jarg1);
  public final static native long Button_SWIGUpcast(long jarg1);
  public final static native long TextBox_SWIGUpcast(long jarg1);
  public final static native long SelectMenu_SWIGUpcast(long jarg1);
  public final static native long Label_SWIGUpcast(long jarg1);
  public final static native long Separator_SWIGUpcast(long jarg1);
  public final static native long Slider_SWIGUpcast(long jarg1);
  public final static native long ParamsPanel_SWIGUpcast(long jarg1);
  public final static native long CheckBox_SWIGUpcast(long jarg1);
  public final static native long DecorWidget_SWIGUpcast(long jarg1);
  public final static native long ProgressBar_SWIGUpcast(long jarg1);
  public final static native long TrayManager_SWIGUpcast(long jarg1);
  public final static native long AdvancedRenderControls_SWIGUpcast(long jarg1);

  public static void SwigDirector_InputListener_frameRendered(InputListener jself, long evt) {
    jself.frameRendered(new FrameEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_keyPressed(InputListener jself, long evt) {
    return jself.keyPressed(new KeyboardEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_keyReleased(InputListener jself, long evt) {
    return jself.keyReleased(new KeyboardEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_touchMoved(InputListener jself, long evt) {
    return jself.touchMoved(new TouchFingerEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_touchPressed(InputListener jself, long evt) {
    return jself.touchPressed(new TouchFingerEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_touchReleased(InputListener jself, long evt) {
    return jself.touchReleased(new TouchFingerEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_mouseMoved(InputListener jself, long evt) {
    return jself.mouseMoved(new MouseMotionEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_mouseWheelRolled(InputListener jself, long evt) {
    return jself.mouseWheelRolled(new MouseWheelEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_mousePressed(InputListener jself, long evt) {
    return jself.mousePressed(new MouseButtonEvent(evt, false));
  }
  public static boolean SwigDirector_InputListener_mouseReleased(InputListener jself, long evt) {
    return jself.mouseReleased(new MouseButtonEvent(evt, false));
  }
  public static boolean SwigDirector_ApplicationContext_frameStarted(ApplicationContext jself, long evt) {
    return jself.frameStarted(new FrameEvent(evt, false));
  }
  public static boolean SwigDirector_ApplicationContext_frameRenderingQueued(ApplicationContext jself, long evt) {
    return jself.frameRenderingQueued(new FrameEvent(evt, false));
  }
  public static boolean SwigDirector_ApplicationContext_frameEnded(ApplicationContext jself, long evt) {
    return jself.frameEnded(new FrameEvent(evt, false));
  }
  public static void SwigDirector_ApplicationContext_windowMoved(ApplicationContext jself, long rw) {
    jself.windowMoved((rw == 0) ? null : new RenderWindow(rw, false));
  }
  public static void SwigDirector_ApplicationContext_windowResized(ApplicationContext jself, long rw) {
    jself.windowResized((rw == 0) ? null : new RenderWindow(rw, false));
  }
  public static boolean SwigDirector_ApplicationContext_windowClosing(ApplicationContext jself, long rw) {
    return jself.windowClosing((rw == 0) ? null : new RenderWindow(rw, false));
  }
  public static void SwigDirector_ApplicationContext_windowClosed(ApplicationContext jself, long rw) {
    jself.windowClosed((rw == 0) ? null : new RenderWindow(rw, false));
  }
  public static void SwigDirector_ApplicationContext_windowFocusChange(ApplicationContext jself, long rw) {
    jself.windowFocusChange((rw == 0) ? null : new RenderWindow(rw, false));
  }
  public static void SwigDirector_ApplicationContext_setup(ApplicationContext jself) {
    jself.setup();
  }
  public static void SwigDirector_ApplicationContext_createRoot(ApplicationContext jself) {
    jself.createRoot();
  }
  public static boolean SwigDirector_ApplicationContext_oneTimeConfig(ApplicationContext jself) {
    return jself.oneTimeConfig();
  }
  public static void SwigDirector_ApplicationContext_locateResources(ApplicationContext jself) {
    jself.locateResources();
  }
  public static void SwigDirector_ApplicationContext_loadResources(ApplicationContext jself) {
    jself.loadResources();
  }
  public static void SwigDirector_ApplicationContext_reconfigure(ApplicationContext jself, String renderer, long options) {
    jself.reconfigure(renderer, new SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t(options, false));
  }
  public static void SwigDirector_ApplicationContext_shutdown(ApplicationContext jself) {
    jself.shutdown();
  }
  public static long SwigDirector_ApplicationContext_createWindow__SWIG_0(ApplicationContext jself, String name, long w, long h, long miscParams) {
    return NativeWindowPair.getCPtr(jself.createWindow(name, w, h, new SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t(miscParams, true)));
  }
  public static long SwigDirector_ApplicationContext_createWindow__SWIG_1(ApplicationContext jself, String name, long w, long h) {
    return NativeWindowPair.getCPtr(jself.createWindow(name, w, h));
  }
  public static long SwigDirector_ApplicationContext_createWindow__SWIG_2(ApplicationContext jself, String name, long w) {
    return NativeWindowPair.getCPtr(jself.createWindow(name, w));
  }
  public static long SwigDirector_ApplicationContext_createWindow__SWIG_3(ApplicationContext jself, String name) {
    return NativeWindowPair.getCPtr(jself.createWindow(name));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
