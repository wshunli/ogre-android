/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class TextureManager extends ResourceManager {
  private transient long swigCPtr;

  protected TextureManager(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.TextureManager_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TextureManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_TextureManager(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public TexturePtr create(String name, String group, boolean isManual, ManualResourceLoader loader, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t createParams) {
    return new TexturePtr(OgreJNI.TextureManager_create__SWIG_0(swigCPtr, this, name, group, isManual, ManualResourceLoader.getCPtr(loader), loader, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(createParams)), true);
  }

  public TexturePtr create(String name, String group, boolean isManual, ManualResourceLoader loader) {
    return new TexturePtr(OgreJNI.TextureManager_create__SWIG_1(swigCPtr, this, name, group, isManual, ManualResourceLoader.getCPtr(loader), loader), true);
  }

  public TexturePtr create(String name, String group, boolean isManual) {
    return new TexturePtr(OgreJNI.TextureManager_create__SWIG_2(swigCPtr, this, name, group, isManual), true);
  }

  public TexturePtr create(String name, String group) {
    return new TexturePtr(OgreJNI.TextureManager_create__SWIG_3(swigCPtr, this, name, group), true);
  }

  public TexturePtr getByName(String name, String groupName) {
    return new TexturePtr(OgreJNI.TextureManager_getByName(swigCPtr, this, name, groupName), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType, int numMipmaps, float gamma, boolean isAlpha, PixelFormat desiredFormat, boolean hwGammaCorrection) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_0(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue(), numMipmaps, gamma, isAlpha, desiredFormat.swigValue(), hwGammaCorrection), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType, int numMipmaps, float gamma, boolean isAlpha, PixelFormat desiredFormat) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_1(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue(), numMipmaps, gamma, isAlpha, desiredFormat.swigValue()), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType, int numMipmaps, float gamma, boolean isAlpha) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_2(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue(), numMipmaps, gamma, isAlpha), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType, int numMipmaps, float gamma) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_3(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue(), numMipmaps, gamma), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType, int numMipmaps) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_4(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue(), numMipmaps), true);
  }

  public TexturePtr loadImage(String name, String group, Image img, TextureType texType) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_5(swigCPtr, this, name, group, Image.getCPtr(img), img, texType.swigValue()), true);
  }

  public TexturePtr loadImage(String name, String group, Image img) {
    return new TexturePtr(OgreJNI.TextureManager_loadImage__SWIG_6(swigCPtr, this, name, group, Image.getCPtr(img), img), true);
  }

  public TexturePtr loadRawData(String name, String group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int width, int height, PixelFormat format, TextureType texType, int numMipmaps, float gamma, boolean hwGammaCorrection) {
    return new TexturePtr(OgreJNI.TextureManager_loadRawData__SWIG_0(swigCPtr, this, name, group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, format.swigValue(), texType.swigValue(), numMipmaps, gamma, hwGammaCorrection), true);
  }

  public TexturePtr loadRawData(String name, String group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int width, int height, PixelFormat format, TextureType texType, int numMipmaps, float gamma) {
    return new TexturePtr(OgreJNI.TextureManager_loadRawData__SWIG_1(swigCPtr, this, name, group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, format.swigValue(), texType.swigValue(), numMipmaps, gamma), true);
  }

  public TexturePtr loadRawData(String name, String group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int width, int height, PixelFormat format, TextureType texType, int numMipmaps) {
    return new TexturePtr(OgreJNI.TextureManager_loadRawData__SWIG_2(swigCPtr, this, name, group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, format.swigValue(), texType.swigValue(), numMipmaps), true);
  }

  public TexturePtr loadRawData(String name, String group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int width, int height, PixelFormat format, TextureType texType) {
    return new TexturePtr(OgreJNI.TextureManager_loadRawData__SWIG_3(swigCPtr, this, name, group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, format.swigValue(), texType.swigValue()), true);
  }

  public TexturePtr loadRawData(String name, String group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int width, int height, PixelFormat format) {
    return new TexturePtr(OgreJNI.TextureManager_loadRawData__SWIG_4(swigCPtr, this, name, group, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, format.swigValue()), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection, long fsaa, String fsaaHint) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_0(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection, fsaa, fsaaHint), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection, long fsaa) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_1(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection, fsaa), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_2(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_3(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format, int usage) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_4(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue(), usage), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, long depth, int numMipmaps, PixelFormat format) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_5(swigCPtr, this, name, group, texType.swigValue(), width, height, depth, numMipmaps, format.swigValue()), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection, long fsaa, String fsaaHint) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_6(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection, fsaa, fsaaHint), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection, long fsaa) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_7(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection, fsaa), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader, boolean hwGammaCorrection) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_8(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader, hwGammaCorrection), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format, int usage, ManualResourceLoader loader) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_9(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue(), usage, ManualResourceLoader.getCPtr(loader), loader), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format, int usage) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_10(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue(), usage), true);
  }

  public TexturePtr createManual(String name, String group, TextureType texType, long width, long height, int numMipmaps, PixelFormat format) {
    return new TexturePtr(OgreJNI.TextureManager_createManual__SWIG_11(swigCPtr, this, name, group, texType.swigValue(), width, height, numMipmaps, format.swigValue()), true);
  }

  public void setPreferredIntegerBitDepth(int bits, boolean reloadTextures) {
    OgreJNI.TextureManager_setPreferredIntegerBitDepth__SWIG_0(swigCPtr, this, bits, reloadTextures);
  }

  public void setPreferredIntegerBitDepth(int bits) {
    OgreJNI.TextureManager_setPreferredIntegerBitDepth__SWIG_1(swigCPtr, this, bits);
  }

  public int getPreferredIntegerBitDepth() {
    return OgreJNI.TextureManager_getPreferredIntegerBitDepth(swigCPtr, this);
  }

  public void setPreferredFloatBitDepth(int bits, boolean reloadTextures) {
    OgreJNI.TextureManager_setPreferredFloatBitDepth__SWIG_0(swigCPtr, this, bits, reloadTextures);
  }

  public void setPreferredFloatBitDepth(int bits) {
    OgreJNI.TextureManager_setPreferredFloatBitDepth__SWIG_1(swigCPtr, this, bits);
  }

  public int getPreferredFloatBitDepth() {
    return OgreJNI.TextureManager_getPreferredFloatBitDepth(swigCPtr, this);
  }

  public void setPreferredBitDepths(int integerBits, int floatBits, boolean reloadTextures) {
    OgreJNI.TextureManager_setPreferredBitDepths__SWIG_0(swigCPtr, this, integerBits, floatBits, reloadTextures);
  }

  public void setPreferredBitDepths(int integerBits, int floatBits) {
    OgreJNI.TextureManager_setPreferredBitDepths__SWIG_1(swigCPtr, this, integerBits, floatBits);
  }

  public boolean isFormatSupported(TextureType ttype, PixelFormat format, int usage) {
    return OgreJNI.TextureManager_isFormatSupported(swigCPtr, this, ttype.swigValue(), format.swigValue(), usage);
  }

  public boolean isEquivalentFormatSupported(TextureType ttype, PixelFormat format, int usage) {
    return OgreJNI.TextureManager_isEquivalentFormatSupported(swigCPtr, this, ttype.swigValue(), format.swigValue(), usage);
  }

  public PixelFormat getNativeFormat(TextureType ttype, PixelFormat format, int usage) {
    return PixelFormat.swigToEnum(OgreJNI.TextureManager_getNativeFormat(swigCPtr, this, ttype.swigValue(), format.swigValue(), usage));
  }

  public boolean isHardwareFilteringSupported(TextureType ttype, PixelFormat format, int usage, boolean preciseFormatOnly) {
    return OgreJNI.TextureManager_isHardwareFilteringSupported__SWIG_0(swigCPtr, this, ttype.swigValue(), format.swigValue(), usage, preciseFormatOnly);
  }

  public boolean isHardwareFilteringSupported(TextureType ttype, PixelFormat format, int usage) {
    return OgreJNI.TextureManager_isHardwareFilteringSupported__SWIG_1(swigCPtr, this, ttype.swigValue(), format.swigValue(), usage);
  }

  public void setDefaultNumMipmaps(long num) {
    OgreJNI.TextureManager_setDefaultNumMipmaps(swigCPtr, this, num);
  }

  public long getDefaultNumMipmaps() {
    return OgreJNI.TextureManager_getDefaultNumMipmaps(swigCPtr, this);
  }

  public TexturePtr _getWarningTexture() {
    return new TexturePtr(OgreJNI.TextureManager__getWarningTexture(swigCPtr, this), false);
  }

  public static TextureManager getSingleton() {
    return new TextureManager(OgreJNI.TextureManager_getSingleton(), false);
  }

}
