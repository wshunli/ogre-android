/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class BillboardChain extends Renderable {
  private transient long swigCPtr;

  protected BillboardChain(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.BillboardChain_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BillboardChain obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_BillboardChain(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class Element {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected Element(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Element obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_BillboardChain_Element(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public Element() {
      this(OgreJNI.new_BillboardChain_Element__SWIG_0(), true);
    }
  
    public Element(Vector3 position, float width, float texCoord, ColourValue colour, Quaternion orientation) {
      this(OgreJNI.new_BillboardChain_Element__SWIG_1(Vector3.getCPtr(position), position, width, texCoord, ColourValue.getCPtr(colour), colour, Quaternion.getCPtr(orientation), orientation), true);
    }
  
    public void setPosition(Vector3 value) {
      OgreJNI.BillboardChain_Element_position_set(swigCPtr, this, Vector3.getCPtr(value), value);
    }
  
    public Vector3 getPosition() {
      long cPtr = OgreJNI.BillboardChain_Element_position_get(swigCPtr, this);
      return (cPtr == 0) ? null : new Vector3(cPtr, false);
    }
  
    public void setWidth(float value) {
      OgreJNI.BillboardChain_Element_width_set(swigCPtr, this, value);
    }
  
    public float getWidth() {
      return OgreJNI.BillboardChain_Element_width_get(swigCPtr, this);
    }
  
    public void setTexCoord(float value) {
      OgreJNI.BillboardChain_Element_texCoord_set(swigCPtr, this, value);
    }
  
    public float getTexCoord() {
      return OgreJNI.BillboardChain_Element_texCoord_get(swigCPtr, this);
    }
  
    public void setColour(ColourValue value) {
      OgreJNI.BillboardChain_Element_colour_set(swigCPtr, this, ColourValue.getCPtr(value), value);
    }
  
    public ColourValue getColour() {
      long cPtr = OgreJNI.BillboardChain_Element_colour_get(swigCPtr, this);
      return (cPtr == 0) ? null : new ColourValue(cPtr, false);
    }
  
    public void setOrientation(Quaternion value) {
      OgreJNI.BillboardChain_Element_orientation_set(swigCPtr, this, Quaternion.getCPtr(value), value);
    }
  
    public Quaternion getOrientation() {
      long cPtr = OgreJNI.BillboardChain_Element_orientation_get(swigCPtr, this);
      return (cPtr == 0) ? null : new Quaternion(cPtr, false);
    }
  
  }

  public BillboardChain(String name, long maxElements, long numberOfChains, boolean useTextureCoords, boolean useColours, boolean dynamic) {
    this(OgreJNI.new_BillboardChain__SWIG_0(name, maxElements, numberOfChains, useTextureCoords, useColours, dynamic), true);
  }

  public BillboardChain(String name, long maxElements, long numberOfChains, boolean useTextureCoords, boolean useColours) {
    this(OgreJNI.new_BillboardChain__SWIG_1(name, maxElements, numberOfChains, useTextureCoords, useColours), true);
  }

  public BillboardChain(String name, long maxElements, long numberOfChains, boolean useTextureCoords) {
    this(OgreJNI.new_BillboardChain__SWIG_2(name, maxElements, numberOfChains, useTextureCoords), true);
  }

  public BillboardChain(String name, long maxElements, long numberOfChains) {
    this(OgreJNI.new_BillboardChain__SWIG_3(name, maxElements, numberOfChains), true);
  }

  public BillboardChain(String name, long maxElements) {
    this(OgreJNI.new_BillboardChain__SWIG_4(name, maxElements), true);
  }

  public BillboardChain(String name) {
    this(OgreJNI.new_BillboardChain__SWIG_5(name), true);
  }

  public void setMaxChainElements(long maxElements) {
    OgreJNI.BillboardChain_setMaxChainElements(swigCPtr, this, maxElements);
  }

  public long getMaxChainElements() {
    return OgreJNI.BillboardChain_getMaxChainElements(swigCPtr, this);
  }

  public void setNumberOfChains(long numChains) {
    OgreJNI.BillboardChain_setNumberOfChains(swigCPtr, this, numChains);
  }

  public long getNumberOfChains() {
    return OgreJNI.BillboardChain_getNumberOfChains(swigCPtr, this);
  }

  public void setUseTextureCoords(boolean use) {
    OgreJNI.BillboardChain_setUseTextureCoords(swigCPtr, this, use);
  }

  public boolean getUseTextureCoords() {
    return OgreJNI.BillboardChain_getUseTextureCoords(swigCPtr, this);
  }

  public void setTextureCoordDirection(BillboardChain.TexCoordDirection dir) {
    OgreJNI.BillboardChain_setTextureCoordDirection(swigCPtr, this, dir.swigValue());
  }

  public BillboardChain.TexCoordDirection getTextureCoordDirection() {
    return BillboardChain.TexCoordDirection.swigToEnum(OgreJNI.BillboardChain_getTextureCoordDirection(swigCPtr, this));
  }

  public void setOtherTextureCoordRange(float start, float end) {
    OgreJNI.BillboardChain_setOtherTextureCoordRange(swigCPtr, this, start, end);
  }

  public SWIGTYPE_p_float getOtherTextureCoordRange() {
    long cPtr = OgreJNI.BillboardChain_getOtherTextureCoordRange(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setUseVertexColours(boolean use) {
    OgreJNI.BillboardChain_setUseVertexColours(swigCPtr, this, use);
  }

  public boolean getUseVertexColours() {
    return OgreJNI.BillboardChain_getUseVertexColours(swigCPtr, this);
  }

  public void setDynamic(boolean dyn) {
    OgreJNI.BillboardChain_setDynamic(swigCPtr, this, dyn);
  }

  public boolean getDynamic() {
    return OgreJNI.BillboardChain_getDynamic(swigCPtr, this);
  }

  public void addChainElement(long chainIndex, BillboardChain.Element billboardChainElement) {
    OgreJNI.BillboardChain_addChainElement(swigCPtr, this, chainIndex, BillboardChain.Element.getCPtr(billboardChainElement), billboardChainElement);
  }

  public void removeChainElement(long chainIndex) {
    OgreJNI.BillboardChain_removeChainElement(swigCPtr, this, chainIndex);
  }

  public void updateChainElement(long chainIndex, long elementIndex, BillboardChain.Element billboardChainElement) {
    OgreJNI.BillboardChain_updateChainElement(swigCPtr, this, chainIndex, elementIndex, BillboardChain.Element.getCPtr(billboardChainElement), billboardChainElement);
  }

  public BillboardChain.Element getChainElement(long chainIndex, long elementIndex) {
    return new BillboardChain.Element(OgreJNI.BillboardChain_getChainElement(swigCPtr, this, chainIndex, elementIndex), false);
  }

  public long getNumChainElements(long chainIndex) {
    return OgreJNI.BillboardChain_getNumChainElements(swigCPtr, this, chainIndex);
  }

  public void clearChain(long chainIndex) {
    OgreJNI.BillboardChain_clearChain(swigCPtr, this, chainIndex);
  }

  public void clearAllChains() {
    OgreJNI.BillboardChain_clearAllChains(swigCPtr, this);
  }

  public void setFaceCamera(boolean faceCamera, Vector3 normalVector) {
    OgreJNI.BillboardChain_setFaceCamera__SWIG_0(swigCPtr, this, faceCamera, Vector3.getCPtr(normalVector), normalVector);
  }

  public void setFaceCamera(boolean faceCamera) {
    OgreJNI.BillboardChain_setFaceCamera__SWIG_1(swigCPtr, this, faceCamera);
  }

  public String getMaterialName() {
    return OgreJNI.BillboardChain_getMaterialName(swigCPtr, this);
  }

  public void setMaterialName(String name, String groupName) {
    OgreJNI.BillboardChain_setMaterialName__SWIG_0(swigCPtr, this, name, groupName);
  }

  public void setMaterialName(String name) {
    OgreJNI.BillboardChain_setMaterialName__SWIG_1(swigCPtr, this, name);
  }

  public float getSquaredViewDepth(Camera cam) {
    return OgreJNI.BillboardChain_getSquaredViewDepth(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public float getBoundingRadius() {
    return OgreJNI.BillboardChain_getBoundingRadius(swigCPtr, this);
  }

  public AxisAlignedBox getBoundingBox() {
    return new AxisAlignedBox(OgreJNI.BillboardChain_getBoundingBox(swigCPtr, this), false);
  }

  public MaterialPtr getMaterial() {
    return new MaterialPtr(OgreJNI.BillboardChain_getMaterial(swigCPtr, this), false);
  }

  public String getMovableType() {
    return OgreJNI.BillboardChain_getMovableType(swigCPtr, this);
  }

  public void _updateRenderQueue(RenderQueue arg0) {
    OgreJNI.BillboardChain__updateRenderQueue(swigCPtr, this, RenderQueue.getCPtr(arg0), arg0);
  }

  public void getRenderOperation(RenderOperation arg0) {
    OgreJNI.BillboardChain_getRenderOperation(swigCPtr, this, RenderOperation.getCPtr(arg0), arg0);
  }

  public boolean preRender(SceneManager sm, RenderSystem rsys) {
    return OgreJNI.BillboardChain_preRender(swigCPtr, this, SceneManager.getCPtr(sm), sm, RenderSystem.getCPtr(rsys), rsys);
  }

  public void getWorldTransforms(Matrix4 arg0) {
    OgreJNI.BillboardChain_getWorldTransforms(swigCPtr, this, Matrix4.getCPtr(arg0), arg0);
  }

  public SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t getLights() {
    return new SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t(OgreJNI.BillboardChain_getLights(swigCPtr, this), false);
  }

  public void visitRenderables(Renderable.Visitor visitor, boolean debugRenderables) {
    OgreJNI.BillboardChain_visitRenderables__SWIG_0(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor, debugRenderables);
  }

  public void visitRenderables(Renderable.Visitor visitor) {
    OgreJNI.BillboardChain_visitRenderables__SWIG_1(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor);
  }

  public final static class TexCoordDirection {
    public final static BillboardChain.TexCoordDirection TCD_U = new BillboardChain.TexCoordDirection("TCD_U");
    public final static BillboardChain.TexCoordDirection TCD_V = new BillboardChain.TexCoordDirection("TCD_V");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static TexCoordDirection swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + TexCoordDirection.class + " with value " + swigValue);
    }

    private TexCoordDirection(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private TexCoordDirection(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private TexCoordDirection(String swigName, TexCoordDirection swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static TexCoordDirection[] swigValues = { TCD_U, TCD_V };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
