/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Image {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Image(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Image obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Image(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Image() {
    this(OgreJNI.new_Image__SWIG_0(), true);
  }

  public Image(Image img) {
    this(OgreJNI.new_Image__SWIG_1(Image.getCPtr(img), img), true);
  }

  public Image flipAroundY() {
    return new Image(OgreJNI.Image_flipAroundY(swigCPtr, this), false);
  }

  public Image flipAroundX() {
    return new Image(OgreJNI.Image_flipAroundX(swigCPtr, this), false);
  }

  public Image loadDynamicImage(SWIGTYPE_p_unsigned_char data, long width, long height, long depth, PixelFormat format, boolean autoDelete, long numFaces, long numMipMaps) {
    return new Image(OgreJNI.Image_loadDynamicImage__SWIG_0(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), width, height, depth, format.swigValue(), autoDelete, numFaces, numMipMaps), false);
  }

  public Image loadDynamicImage(SWIGTYPE_p_unsigned_char data, long width, long height, long depth, PixelFormat format, boolean autoDelete, long numFaces) {
    return new Image(OgreJNI.Image_loadDynamicImage__SWIG_1(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), width, height, depth, format.swigValue(), autoDelete, numFaces), false);
  }

  public Image loadDynamicImage(SWIGTYPE_p_unsigned_char data, long width, long height, long depth, PixelFormat format, boolean autoDelete) {
    return new Image(OgreJNI.Image_loadDynamicImage__SWIG_2(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), width, height, depth, format.swigValue(), autoDelete), false);
  }

  public Image loadDynamicImage(SWIGTYPE_p_unsigned_char data, long width, long height, long depth, PixelFormat format) {
    return new Image(OgreJNI.Image_loadDynamicImage__SWIG_3(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(data), width, height, depth, format.swigValue()), false);
  }

  public Image loadRawData(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, long width, long height, long depth, PixelFormat format, long numFaces, long numMipMaps) {
    return new Image(OgreJNI.Image_loadRawData__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, depth, format.swigValue(), numFaces, numMipMaps), false);
  }

  public Image loadRawData(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, long width, long height, long depth, PixelFormat format, long numFaces) {
    return new Image(OgreJNI.Image_loadRawData__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, depth, format.swigValue(), numFaces), false);
  }

  public Image loadRawData(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, long width, long height, long depth, PixelFormat format) {
    return new Image(OgreJNI.Image_loadRawData__SWIG_2(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), width, height, depth, format.swigValue()), false);
  }

  public Image load(String filename, String groupName) {
    return new Image(OgreJNI.Image_load__SWIG_0(swigCPtr, this, filename, groupName), false);
  }

  public Image load(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, String type) {
    return new Image(OgreJNI.Image_load__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), type), false);
  }

  public Image load(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream) {
    return new Image(OgreJNI.Image_load__SWIG_2(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream)), false);
  }

  public Image loadTwoImagesAsRGBA(String rgbFilename, String alphaFilename, String groupName, PixelFormat format) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_0(swigCPtr, this, rgbFilename, alphaFilename, groupName, format.swigValue()), false);
  }

  public Image loadTwoImagesAsRGBA(String rgbFilename, String alphaFilename, String groupName) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_1(swigCPtr, this, rgbFilename, alphaFilename, groupName), false);
  }

  public Image loadTwoImagesAsRGBA(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t rgbStream, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t alphaStream, PixelFormat format, String rgbType, String alphaType) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_2(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(rgbStream), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(alphaStream), format.swigValue(), rgbType, alphaType), false);
  }

  public Image loadTwoImagesAsRGBA(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t rgbStream, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t alphaStream, PixelFormat format, String rgbType) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_3(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(rgbStream), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(alphaStream), format.swigValue(), rgbType), false);
  }

  public Image loadTwoImagesAsRGBA(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t rgbStream, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t alphaStream, PixelFormat format) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_4(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(rgbStream), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(alphaStream), format.swigValue()), false);
  }

  public Image loadTwoImagesAsRGBA(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t rgbStream, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t alphaStream) {
    return new Image(OgreJNI.Image_loadTwoImagesAsRGBA__SWIG_5(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(rgbStream), SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(alphaStream)), false);
  }

  public Image combineTwoImagesAsRGBA(Image rgb, Image alpha, PixelFormat format) {
    return new Image(OgreJNI.Image_combineTwoImagesAsRGBA__SWIG_0(swigCPtr, this, Image.getCPtr(rgb), rgb, Image.getCPtr(alpha), alpha, format.swigValue()), false);
  }

  public Image combineTwoImagesAsRGBA(Image rgb, Image alpha) {
    return new Image(OgreJNI.Image_combineTwoImagesAsRGBA__SWIG_1(swigCPtr, this, Image.getCPtr(rgb), rgb, Image.getCPtr(alpha), alpha), false);
  }

  public void save(String filename) {
    OgreJNI.Image_save(swigCPtr, this, filename);
  }

  public SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t encode(String formatextension) {
    return new SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t(OgreJNI.Image_encode(swigCPtr, this, formatextension), true);
  }

  public SWIGTYPE_p_unsigned_char getData() {
    long cPtr = OgreJNI.Image_getData__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public long getSize() {
    return OgreJNI.Image_getSize(swigCPtr, this);
  }

  public long getNumMipmaps() {
    return OgreJNI.Image_getNumMipmaps(swigCPtr, this);
  }

  public boolean hasFlag(ImageFlags imgFlag) {
    return OgreJNI.Image_hasFlag(swigCPtr, this, imgFlag.swigValue());
  }

  public long getWidth() {
    return OgreJNI.Image_getWidth(swigCPtr, this);
  }

  public long getHeight() {
    return OgreJNI.Image_getHeight(swigCPtr, this);
  }

  public long getDepth() {
    return OgreJNI.Image_getDepth(swigCPtr, this);
  }

  public long getNumFaces() {
    return OgreJNI.Image_getNumFaces(swigCPtr, this);
  }

  public long getRowSpan() {
    return OgreJNI.Image_getRowSpan(swigCPtr, this);
  }

  public PixelFormat getFormat() {
    return PixelFormat.swigToEnum(OgreJNI.Image_getFormat(swigCPtr, this));
  }

  public short getBPP() {
    return OgreJNI.Image_getBPP(swigCPtr, this);
  }

  public boolean getHasAlpha() {
    return OgreJNI.Image_getHasAlpha(swigCPtr, this);
  }

  public static void applyGamma(SWIGTYPE_p_unsigned_char buffer, float gamma, long size, short bpp) {
    OgreJNI.Image_applyGamma(SWIGTYPE_p_unsigned_char.getCPtr(buffer), gamma, size, bpp);
  }

  public ColourValue getColourAt(long x, long y, long z) {
    return new ColourValue(OgreJNI.Image_getColourAt(swigCPtr, this, x, y, z), true);
  }

  public void setColourAt(ColourValue cv, long x, long y, long z) {
    OgreJNI.Image_setColourAt(swigCPtr, this, ColourValue.getCPtr(cv), cv, x, y, z);
  }

  public PixelBox getPixelBox(long face, long mipmap) {
    return new PixelBox(OgreJNI.Image_getPixelBox__SWIG_0(swigCPtr, this, face, mipmap), true);
  }

  public PixelBox getPixelBox(long face) {
    return new PixelBox(OgreJNI.Image_getPixelBox__SWIG_1(swigCPtr, this, face), true);
  }

  public PixelBox getPixelBox() {
    return new PixelBox(OgreJNI.Image_getPixelBox__SWIG_2(swigCPtr, this), true);
  }

  public void freeMemory() {
    OgreJNI.Image_freeMemory(swigCPtr, this);
  }

  public static void scale(PixelBox src, PixelBox dst, Image.Filter filter) {
    OgreJNI.Image_scale__SWIG_0(PixelBox.getCPtr(src), src, PixelBox.getCPtr(dst), dst, filter.swigValue());
  }

  public static void scale(PixelBox src, PixelBox dst) {
    OgreJNI.Image_scale__SWIG_1(PixelBox.getCPtr(src), src, PixelBox.getCPtr(dst), dst);
  }

  public void resize(int width, int height, Image.Filter filter) {
    OgreJNI.Image_resize__SWIG_0(swigCPtr, this, width, height, filter.swigValue());
  }

  public void resize(int width, int height) {
    OgreJNI.Image_resize__SWIG_1(swigCPtr, this, width, height);
  }

  public static long calculateSize(long mipmaps, long faces, long width, long height, long depth, PixelFormat format) {
    return OgreJNI.Image_calculateSize(mipmaps, faces, width, height, depth, format.swigValue());
  }

  public static String getFileExtFromMagic(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream) {
    return OgreJNI.Image_getFileExtFromMagic(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream));
  }

  public final static class Filter {
    public final static Image.Filter FILTER_NEAREST = new Image.Filter("FILTER_NEAREST");
    public final static Image.Filter FILTER_LINEAR = new Image.Filter("FILTER_LINEAR");
    public final static Image.Filter FILTER_BILINEAR = new Image.Filter("FILTER_BILINEAR");
    public final static Image.Filter FILTER_BOX = new Image.Filter("FILTER_BOX");
    public final static Image.Filter FILTER_TRIANGLE = new Image.Filter("FILTER_TRIANGLE");
    public final static Image.Filter FILTER_BICUBIC = new Image.Filter("FILTER_BICUBIC");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Filter swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Filter.class + " with value " + swigValue);
    }

    private Filter(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Filter(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Filter(String swigName, Filter swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Filter[] swigValues = { FILTER_NEAREST, FILTER_LINEAR, FILTER_BILINEAR, FILTER_BOX, FILTER_TRIANGLE, FILTER_BICUBIC };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
