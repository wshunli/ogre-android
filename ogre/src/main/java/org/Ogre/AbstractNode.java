/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class AbstractNode {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AbstractNode(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AbstractNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_AbstractNode(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFile(String value) {
    OgreJNI.AbstractNode_file_set(swigCPtr, this, value);
  }

  public String getFile() {
    return OgreJNI.AbstractNode_file_get(swigCPtr, this);
  }

  public void setLine(long value) {
    OgreJNI.AbstractNode_line_set(swigCPtr, this, value);
  }

  public long getLine() {
    return OgreJNI.AbstractNode_line_get(swigCPtr, this);
  }

  public void setType(AbstractNodeType value) {
    OgreJNI.AbstractNode_type_set(swigCPtr, this, value.swigValue());
  }

  public AbstractNodeType getType() {
    return AbstractNodeType.swigToEnum(OgreJNI.AbstractNode_type_get(swigCPtr, this));
  }

  public void setParent(AbstractNode value) {
    OgreJNI.AbstractNode_parent_set(swigCPtr, this, AbstractNode.getCPtr(value), value);
  }

  public AbstractNode getParent() {
    long cPtr = OgreJNI.AbstractNode_parent_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractNode(cPtr, false);
  }

  public void setContext(Any value) {
    OgreJNI.AbstractNode_context_set(swigCPtr, this, Any.getCPtr(value), value);
  }

  public Any getContext() {
    long cPtr = OgreJNI.AbstractNode_context_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Any(cPtr, false);
  }

  public AbstractNode clone() {
    long cPtr = OgreJNI.AbstractNode_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractNode(cPtr, false);
  }

  public String getValue() {
    return OgreJNI.AbstractNode_getValue(swigCPtr, this);
  }

}
