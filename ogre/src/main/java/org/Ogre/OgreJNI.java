/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class OgreJNI {
  public final static native int OGRE_DEBUG_MODE_get();
  public final static native int OGRE_RESOURCEMANAGER_STRICT_get();
  public final static native int OGRE_USE_STD11_get();
  public final static native int OGRE_NODE_STORAGE_LEGACY_get();
  public final static native int OGRE_DOUBLE_PRECISION_get();
  public final static native int OGRE_NODE_INHERIT_TRANSFORM_get();
  public final static native int OGRE_MEMORY_ALLOCATOR_get();
  public final static native int OGRE_CONTAINERS_USE_CUSTOM_MEMORY_ALLOCATOR_get();
  public final static native int OGRE_STRING_USE_CUSTOM_MEMORY_ALLOCATOR_get();
  public final static native int OGRE_MEMORY_TRACKER_DEBUG_MODE_get();
  public final static native int OGRE_MEMORY_TRACKER_RELEASE_MODE_get();
  public final static native int OGRE_ASSERT_MODE_get();
  public final static native int OGRE_THREAD_SUPPORT_get();
  public final static native int OGRE_THREAD_PROVIDER_get();
  public final static native int OGRE_NO_MESHLOD_get();
  public final static native int OGRE_NO_FREEIMAGE_get();
  public final static native int OGRE_NO_DDS_CODEC_get();
  public final static native int OGRE_NO_PVRTC_CODEC_get();
  public final static native int OGRE_NO_ETC_CODEC_get();
  public final static native int OGRE_NO_STBI_CODEC_get();
  public final static native int OGRE_NO_ASTC_CODEC_get();
  public final static native int OGRE_NO_ZIP_ARCHIVE_get();
  public final static native int OGRE_NO_VIEWPORT_ORIENTATIONMODE_get();
  public final static native int OGRE_NO_GLES2_CG_SUPPORT_get();
  public final static native int OGRE_NO_GLES2_GLSL_OPTIMISER_get();
  public final static native int OGRE_NO_GL_STATE_CACHE_SUPPORT_get();
  public final static native int OGRE_NO_GLES3_SUPPORT_get();
  public final static native int OGRE_NO_TBB_SCHEDULER_get();
  public final static native int OGRE_PROFILING_get();
  public final static native int OGRE_NO_QUAD_BUFFER_STEREO_get();
  public final static native int OGRE_BITES_HAVE_SDL_get();
  public final static native int OGRE_MEMORY_TRACKER_get();
  public final static native int OGRE_VERSION_MAJOR_get();
  public final static native int OGRE_VERSION_MINOR_get();
  public final static native int OGRE_VERSION_PATCH_get();
  public final static native String OGRE_VERSION_SUFFIX_get();
  public final static native String OGRE_VERSION_NAME_get();
  public final static native int OGRE_VERSION_get();
  public final static native int OGRE_PLATFORM_WIN32_get();
  public final static native int OGRE_PLATFORM_LINUX_get();
  public final static native int OGRE_PLATFORM_APPLE_get();
  public final static native int OGRE_PLATFORM_APPLE_IOS_get();
  public final static native int OGRE_PLATFORM_ANDROID_get();
  public final static native int OGRE_PLATFORM_NACL_get();
  public final static native int OGRE_PLATFORM_WINRT_get();
  public final static native int OGRE_PLATFORM_EMSCRIPTEN_get();
  public final static native int OGRE_COMPILER_MSVC_get();
  public final static native int OGRE_COMPILER_GNUC_get();
  public final static native int OGRE_COMPILER_BORL_get();
  public final static native int OGRE_COMPILER_WINSCW_get();
  public final static native int OGRE_COMPILER_GCCE_get();
  public final static native int OGRE_COMPILER_CLANG_get();
  public final static native int OGRE_ENDIAN_LITTLE_get();
  public final static native int OGRE_ENDIAN_BIG_get();
  public final static native int OGRE_ARCHITECTURE_32_get();
  public final static native int OGRE_ARCHITECTURE_64_get();
  public final static native int OGRE_PLATFORM_get();
  public final static native int OGRE_ARCH_TYPE_get();
  public final static native int OGRE_UNICODE_SUPPORT_get();
  public final static native int CLOCKS_PER_SEC_get();
  public final static native int __OGRE_HAVE_DIRECTXMATH_get();
  public final static native int OGRE_ENDIAN_get();
  public final static native String OGRE_DEFAULT_LOCALE_get();
  public final static native String OGRE_BUILD_SUFFIX_get();
  public final static native int OGRE_PRETEND_TEXTURE_UNITS_get();
  public final static native int OGRE_MAX_TEXTURE_COORD_SETS_get();
  public final static native int OGRE_MAX_TEXTURE_LAYERS_get();
  public final static native int OGRE_MAX_SIMULTANEOUS_LIGHTS_get();
  public final static native int OGRE_MAX_BLEND_WEIGHTS_get();
  public final static native int OGRE_MEMORY_ALLOCATOR_STD_get();
  public final static native int OGRE_MEMORY_ALLOCATOR_NED_get();
  public final static native int OGRE_MEMORY_ALLOCATOR_USER_get();
  public final static native int OGRE_MEMORY_ALLOCATOR_NEDPOOLING_get();
  public final static native int OGRE_MAX_MULTIPLE_RENDER_TARGETS_get();
  public final static native int MEMCATEGORY_GENERAL_get();
  public final static native int MEMCATEGORY_GEOMETRY_get();
  public final static native int MEMCATEGORY_ANIMATION_get();
  public final static native int MEMCATEGORY_SCENE_CONTROL_get();
  public final static native int MEMCATEGORY_SCENE_OBJECTS_get();
  public final static native int MEMCATEGORY_RESOURCE_get();
  public final static native int MEMCATEGORY_SCRIPTING_get();
  public final static native int MEMCATEGORY_RENDERSYS_get();
  public final static native int MEMCATEGORY_COUNT_get();
  public final static native long FastHash__SWIG_0(String jarg1, long jarg2, long jarg3);
  public final static native long FastHash__SWIG_1(String jarg1, long jarg2);
  public final static native int CULL_NONE_get();
  public final static native int CULL_CLOCKWISE_get();
  public final static native int CULL_ANTICLOCKWISE_get();
  public final static native int MANUAL_CULL_NONE_get();
  public final static native int MANUAL_CULL_BACK_get();
  public final static native int MANUAL_CULL_FRONT_get();
  public final static native int PM_POINTS_get();
  public final static native int PM_WIREFRAME_get();
  public final static native int PM_SOLID_get();
  public final static native int SHADOWTYPE_NONE_get();
  public final static native int SHADOWDETAILTYPE_ADDITIVE_get();
  public final static native int SHADOWDETAILTYPE_MODULATIVE_get();
  public final static native int SHADOWDETAILTYPE_INTEGRATED_get();
  public final static native int SHADOWDETAILTYPE_STENCIL_get();
  public final static native int SHADOWDETAILTYPE_TEXTURE_get();
  public final static native int SHADOWTYPE_STENCIL_MODULATIVE_get();
  public final static native int SHADOWTYPE_STENCIL_ADDITIVE_get();
  public final static native int SHADOWTYPE_TEXTURE_MODULATIVE_get();
  public final static native int SHADOWTYPE_TEXTURE_ADDITIVE_get();
  public final static native int SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED_get();
  public final static native int SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED_get();
  public final static native int TVC_NONE_get();
  public final static native int TVC_AMBIENT_get();
  public final static native int TVC_DIFFUSE_get();
  public final static native int TVC_SPECULAR_get();
  public final static native int TVC_EMISSIVE_get();
  public final static native int FBT_COLOUR_get();
  public final static native int FBT_DEPTH_get();
  public final static native int FBT_STENCIL_get();
  public final static native int CBT_BACK_get();
  public final static native int SMT_NONE_get();
  public final static native int IM_USE16BIT_get();
  public final static native int IM_VTFBESTFIT_get();
  public final static native int IM_VTFBONEMATRIXLOOKUP_get();
  public final static native int IM_USEBONEDUALQUATERNIONS_get();
  public final static native int IM_USEONEWEIGHT_get();
  public final static native int IM_FORCEONEWEIGHT_get();
  public final static native int IM_USEALL_get();
  public final static native String BLANKSTRING_get();
  public final static native void Box_left_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_left_get(long jarg1, Box jarg1_);
  public final static native void Box_top_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_top_get(long jarg1, Box jarg1_);
  public final static native void Box_right_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_right_get(long jarg1, Box jarg1_);
  public final static native void Box_bottom_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_bottom_get(long jarg1, Box jarg1_);
  public final static native void Box_front_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_front_get(long jarg1, Box jarg1_);
  public final static native void Box_back_set(long jarg1, Box jarg1_, long jarg2);
  public final static native long Box_back_get(long jarg1, Box jarg1_);
  public final static native long new_Box__SWIG_0();
  public final static native long new_Box__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_Box__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native boolean Box_contains(long jarg1, Box jarg1_, long jarg2, Box jarg2_);
  public final static native long Box_getWidth(long jarg1, Box jarg1_);
  public final static native long Box_getHeight(long jarg1, Box jarg1_);
  public final static native long Box_getDepth(long jarg1, Box jarg1_);
  public final static native void delete_Box(long jarg1);
  public final static native int findCommandLineOpts(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int CLIPPED_NONE_get();
  public final static native int CLIPPED_SOME_get();
  public final static native int CLIPPED_ALL_get();
  public final static native void RenderWindowDescription_name_set(long jarg1, RenderWindowDescription jarg1_, String jarg2);
  public final static native String RenderWindowDescription_name_get(long jarg1, RenderWindowDescription jarg1_);
  public final static native void RenderWindowDescription_width_set(long jarg1, RenderWindowDescription jarg1_, long jarg2);
  public final static native long RenderWindowDescription_width_get(long jarg1, RenderWindowDescription jarg1_);
  public final static native void RenderWindowDescription_height_set(long jarg1, RenderWindowDescription jarg1_, long jarg2);
  public final static native long RenderWindowDescription_height_get(long jarg1, RenderWindowDescription jarg1_);
  public final static native void RenderWindowDescription_useFullScreen_set(long jarg1, RenderWindowDescription jarg1_, boolean jarg2);
  public final static native boolean RenderWindowDescription_useFullScreen_get(long jarg1, RenderWindowDescription jarg1_);
  public final static native void RenderWindowDescription_miscParams_set(long jarg1, RenderWindowDescription jarg1_, long jarg2);
  public final static native long RenderWindowDescription_miscParams_get(long jarg1, RenderWindowDescription jarg1_);
  public final static native long new_RenderWindowDescription();
  public final static native void delete_RenderWindowDescription(long jarg1);
  public final static native long new_NameValuePairList__SWIG_0();
  public final static native long new_NameValuePairList__SWIG_1(long jarg1, NameValuePairList jarg1_);
  public final static native long NameValuePairList_size(long jarg1, NameValuePairList jarg1_);
  public final static native boolean NameValuePairList_empty(long jarg1, NameValuePairList jarg1_);
  public final static native void NameValuePairList_clear(long jarg1, NameValuePairList jarg1_);
  public final static native String NameValuePairList_get(long jarg1, NameValuePairList jarg1_, String jarg2);
  public final static native void NameValuePairList_set(long jarg1, NameValuePairList jarg1_, String jarg2, String jarg3);
  public final static native void NameValuePairList_del(long jarg1, NameValuePairList jarg1_, String jarg2);
  public final static native boolean NameValuePairList_has_key(long jarg1, NameValuePairList jarg1_, String jarg2);
  public final static native void delete_NameValuePairList(long jarg1);
  public final static native long new_OgreException__SWIG_0(int jarg1, String jarg2, String jarg3);
  public final static native long new_OgreException__SWIG_1(int jarg1, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native long new_OgreException__SWIG_2(long jarg1, OgreException jarg1_);
  public final static native void delete_OgreException(long jarg1);
  public final static native String OgreException_getFullDescription(long jarg1, OgreException jarg1_);
  public final static native String OgreException_getSource(long jarg1, OgreException jarg1_);
  public final static native String OgreException_getFile(long jarg1, OgreException jarg1_);
  public final static native int OgreException_getLine(long jarg1, OgreException jarg1_);
  public final static native String OgreException_getDescription(long jarg1, OgreException jarg1_);
  public final static native String OgreException_what(long jarg1, OgreException jarg1_);
  public final static native long new_UnimplementedException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_UnimplementedException(long jarg1);
  public final static native long new_FileNotFoundException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_FileNotFoundException(long jarg1);
  public final static native long new_IOException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_IOException(long jarg1);
  public final static native long new_InvalidStateException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_InvalidStateException(long jarg1);
  public final static native long new_InvalidParametersException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_InvalidParametersException(long jarg1);
  public final static native long new_ItemIdentityException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_ItemIdentityException(long jarg1);
  public final static native long new_InternalErrorException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_InternalErrorException(long jarg1);
  public final static native long new_RenderingAPIException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_RenderingAPIException(long jarg1);
  public final static native long new_RuntimeAssertionException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_RuntimeAssertionException(long jarg1);
  public final static native long new_InvalidCallException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_InvalidCallException(long jarg1);
  public final static native void ExceptionFactory_throwException(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native void delete_ExceptionFactory(long jarg1);
  public final static native long new_SharedPtrInfo();
  public final static native void delete_SharedPtrInfo(long jarg1);
  public final static native void SharedPtrInfo_useCount_set(long jarg1, SharedPtrInfo jarg1_, long jarg2);
  public final static native long SharedPtrInfo_useCount_get(long jarg1, SharedPtrInfo jarg1_);
  public final static native long new_SharedPtrInfoNone();
  public final static native void delete_SharedPtrInfoNone(long jarg1);
  public final static native long new_Any__SWIG_0();
  public final static native long new_Any__SWIG_2(long jarg1, Any jarg1_);
  public final static native void delete_Any(long jarg1);
  public final static native long Any_swap(long jarg1, Any jarg1_, long jarg2, Any jarg2_);
  public final static native boolean Any_has_value(long jarg1, Any jarg1_);
  public final static native boolean Any_isEmpty(long jarg1, Any jarg1_);
  public final static native long Any_type(long jarg1, Any jarg1_);
  public final static native void Any_reset(long jarg1, Any jarg1_);
  public final static native long new_AnyNumeric__SWIG_0();
  public final static native long new_AnyNumeric__SWIG_2(long jarg1, AnyNumeric jarg1_);
  public final static native void delete_AnyNumeric(long jarg1);
  public final static native long new_Radian__SWIG_0(float jarg1);
  public final static native long new_Radian__SWIG_1();
  public final static native long new_Radian__SWIG_2(long jarg1, Degree jarg1_);
  public final static native float Radian_valueDegrees(long jarg1, Radian jarg1_);
  public final static native float Radian_valueRadians(long jarg1, Radian jarg1_);
  public final static native float Radian_valueAngleUnits(long jarg1, Radian jarg1_);
  public final static native String Radian_toString(long jarg1, Radian jarg1_);
  public final static native void delete_Radian(long jarg1);
  public final static native long new_Degree__SWIG_0(float jarg1);
  public final static native long new_Degree__SWIG_1();
  public final static native long new_Degree__SWIG_2(long jarg1, Radian jarg1_);
  public final static native float Degree_valueDegrees(long jarg1, Degree jarg1_);
  public final static native float Degree_valueRadians(long jarg1, Degree jarg1_);
  public final static native float Degree_valueAngleUnits(long jarg1, Degree jarg1_);
  public final static native String Degree_toString(long jarg1, Degree jarg1_);
  public final static native void delete_Degree(long jarg1);
  public final static native long new_Angle(float jarg1);
  public final static native void delete_Angle(long jarg1);
  public final static native void delete_Math_RandomValueProvider(long jarg1);
  public final static native float Math_RandomValueProvider_getRandomUnit(long jarg1, Math.RandomValueProvider jarg1_);
  public final static native long new_Math__SWIG_0(long jarg1);
  public final static native long new_Math__SWIG_1();
  public final static native void delete_Math(long jarg1);
  public final static native int Math_IAbs(int jarg1);
  public final static native int Math_ICeil(float jarg1);
  public final static native int Math_IFloor(float jarg1);
  public final static native int Math_ISign(int jarg1);
  public final static native float Math_Abs__SWIG_0(float jarg1);
  public final static native long Math_Abs__SWIG_1(long jarg1, Degree jarg1_);
  public final static native long Math_Abs__SWIG_2(long jarg1, Radian jarg1_);
  public final static native long Math_ACos(float jarg1);
  public final static native long Math_ASin(float jarg1);
  public final static native long Math_ATan(float jarg1);
  public final static native long Math_ATan2(float jarg1, float jarg2);
  public final static native float Math_Ceil(float jarg1);
  public final static native boolean Math_isNaN(float jarg1);
  public final static native float Math_Cos__SWIG_0(long jarg1, Radian jarg1_, boolean jarg2);
  public final static native float Math_Cos__SWIG_1(long jarg1, Radian jarg1_);
  public final static native float Math_Cos__SWIG_2(float jarg1, boolean jarg2);
  public final static native float Math_Cos__SWIG_3(float jarg1);
  public final static native float Math_Exp(float jarg1);
  public final static native float Math_Floor(float jarg1);
  public final static native float Math_Log(float jarg1);
  public final static native float Math_LOG2_get();
  public final static native float Math_Log2(float jarg1);
  public final static native float Math_LogN(float jarg1, float jarg2);
  public final static native float Math_Pow(float jarg1, float jarg2);
  public final static native float Math_Sign__SWIG_0(float jarg1);
  public final static native long Math_Sign__SWIG_1(long jarg1, Radian jarg1_);
  public final static native long Math_Sign__SWIG_2(long jarg1, Degree jarg1_);
  public final static native float Math_saturate__SWIG_0(float jarg1);
  public final static native double Math_saturate__SWIG_1(double jarg1);
  public final static native float Math_Sin__SWIG_0(long jarg1, Radian jarg1_, boolean jarg2);
  public final static native float Math_Sin__SWIG_1(long jarg1, Radian jarg1_);
  public final static native float Math_Sin__SWIG_2(float jarg1, boolean jarg2);
  public final static native float Math_Sin__SWIG_3(float jarg1);
  public final static native float Math_Sqr(float jarg1);
  public final static native float Math_Sqrt__SWIG_0(float jarg1);
  public final static native long Math_Sqrt__SWIG_1(long jarg1, Radian jarg1_);
  public final static native long Math_Sqrt__SWIG_2(long jarg1, Degree jarg1_);
  public final static native float Math_InvSqrt(float jarg1);
  public final static native float Math_UnitRandom();
  public final static native float Math_RangeRandom(float jarg1, float jarg2);
  public final static native float Math_SymmetricRandom();
  public final static native void Math_SetRandomValueProvider(long jarg1, Math.RandomValueProvider jarg1_);
  public final static native float Math_Tan__SWIG_0(long jarg1, Radian jarg1_, boolean jarg2);
  public final static native float Math_Tan__SWIG_1(long jarg1, Radian jarg1_);
  public final static native float Math_Tan__SWIG_2(float jarg1, boolean jarg2);
  public final static native float Math_Tan__SWIG_3(float jarg1);
  public final static native float Math_DegreesToRadians(float jarg1);
  public final static native float Math_RadiansToDegrees(float jarg1);
  public final static native void Math_setAngleUnit(int jarg1);
  public final static native int Math_getAngleUnit();
  public final static native float Math_AngleUnitsToRadians(float jarg1);
  public final static native float Math_RadiansToAngleUnits(float jarg1);
  public final static native float Math_AngleUnitsToDegrees(float jarg1);
  public final static native float Math_DegreesToAngleUnits(float jarg1);
  public final static native boolean Math_pointInTri2D(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_, long jarg3, Vector2 jarg3_, long jarg4, Vector2 jarg4_);
  public final static native boolean Math_pointInTri3D(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_);
  public final static native long Math_intersects__SWIG_0(long jarg1, Ray jarg1_, long jarg2, Plane jarg2_);
  public final static native long Math_intersects__SWIG_1(long jarg1, Ray jarg1_, long jarg2, Sphere jarg2_, boolean jarg3);
  public final static native long Math_intersects__SWIG_2(long jarg1, Ray jarg1_, long jarg2, Sphere jarg2_);
  public final static native long Math_intersects__SWIG_3(long jarg1, Ray jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean Math_intersects__SWIG_4(long jarg1, Ray jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3, long jarg4);
  public final static native long Math_intersects__SWIG_5(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_, boolean jarg6, boolean jarg7);
  public final static native long Math_intersects__SWIG_6(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_, boolean jarg6);
  public final static native long Math_intersects__SWIG_7(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_);
  public final static native long Math_intersects__SWIG_8(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, boolean jarg5, boolean jarg6);
  public final static native long Math_intersects__SWIG_9(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, boolean jarg5);
  public final static native long Math_intersects__SWIG_10(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native boolean Math_intersects__SWIG_11(long jarg1, Sphere jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean Math_intersects__SWIG_12(long jarg1, Plane jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long Math_intersects__SWIG_13(long jarg1, Ray jarg1_, long jarg2, boolean jarg3);
  public final static native long Math_intersects__SWIG_14(long jarg1, Ray jarg1_, long jarg2, boolean jarg3);
  public final static native boolean Math_intersects__SWIG_15(long jarg1, Sphere jarg1_, long jarg2, Plane jarg2_);
  public final static native boolean Math_RealEqual__SWIG_0(float jarg1, float jarg2, float jarg3);
  public final static native boolean Math_RealEqual__SWIG_1(float jarg1, float jarg2);
  public final static native long Math_calculateTangentSpaceVector(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);
  public final static native long Math_buildReflectionMatrix(long jarg1, Plane jarg1_);
  public final static native long Math_calculateFaceNormal(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Math_calculateBasicFaceNormal(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Math_calculateFaceNormalWithoutNormalize(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Math_calculateBasicFaceNormalWithoutNormalize(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native float Math_gaussianDistribution__SWIG_0(float jarg1, float jarg2, float jarg3);
  public final static native float Math_gaussianDistribution__SWIG_1(float jarg1, float jarg2);
  public final static native float Math_gaussianDistribution__SWIG_2(float jarg1);
  public final static native long Math_makeViewMatrix__SWIG_0(long jarg1, Vector3 jarg1_, long jarg2, Quaternion jarg2_, long jarg3, Matrix4 jarg3_);
  public final static native long Math_makeViewMatrix__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Quaternion jarg2_);
  public final static native float Math_boundingRadiusFromAABB(long jarg1, AxisAlignedBox jarg1_);
  public final static native float Math_boundingRadiusFromAABBCentered(long jarg1, AxisAlignedBox jarg1_);
  public final static native float Math_POS_INFINITY_get();
  public final static native float Math_NEG_INFINITY_get();
  public final static native float Math_PI_get();
  public final static native float Math_TWO_PI_get();
  public final static native float Math_HALF_PI_get();
  public final static native float Math_fDeg2Rad_get();
  public final static native float Math_fRad2Deg_get();
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native long new_StringVector__SWIG_2(int jarg1);
  public final static native long new_StringVector__SWIG_3(int jarg1, String jarg2);
  public final static native int StringVector_doSize(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doAdd__SWIG_0(long jarg1, StringVector jarg1_, String jarg2);
  public final static native void StringVector_doAdd__SWIG_1(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native String StringVector_doRemove(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doGet(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doSet(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void StringVector_doRemoveRange(long jarg1, StringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_StringVectorPtr__SWIG_1();
  public final static native long new_StringVectorPtr__SWIG_2(long jarg1, StringVectorPtr jarg1_);
  public final static native void delete_StringVectorPtr(long jarg1);
  public final static native long StringVectorPtr___ref__(long jarg1, StringVectorPtr jarg1_);
  public final static native long StringVectorPtr___deref__(long jarg1, StringVectorPtr jarg1_);
  public final static native long StringVectorPtr_get(long jarg1, StringVectorPtr jarg1_);
  public final static native boolean StringVectorPtr_unique(long jarg1, StringVectorPtr jarg1_);
  public final static native int StringVectorPtr_use_count(long jarg1, StringVectorPtr jarg1_);
  public final static native void StringVectorPtr_reset__SWIG_0(long jarg1, StringVectorPtr jarg1_);
  public final static native void StringVectorPtr_reset__SWIG_1(long jarg1, StringVectorPtr jarg1_, long jarg2, StringVector jarg2_);
  public final static native long StringVectorPtr_capacity(long jarg1, StringVectorPtr jarg1_);
  public final static native void StringVectorPtr_reserve(long jarg1, StringVectorPtr jarg1_, long jarg2);
  public final static native boolean StringVectorPtr_isEmpty(long jarg1, StringVectorPtr jarg1_);
  public final static native void StringVectorPtr_clear(long jarg1, StringVectorPtr jarg1_);
  public final static native int StringVectorPtr_doSize(long jarg1, StringVectorPtr jarg1_);
  public final static native void StringVectorPtr_doAdd__SWIG_0(long jarg1, StringVectorPtr jarg1_, String jarg2);
  public final static native void StringVectorPtr_doAdd__SWIG_1(long jarg1, StringVectorPtr jarg1_, int jarg2, String jarg3);
  public final static native String StringVectorPtr_doRemove(long jarg1, StringVectorPtr jarg1_, int jarg2);
  public final static native String StringVectorPtr_doGet(long jarg1, StringVectorPtr jarg1_, int jarg2);
  public final static native String StringVectorPtr_doSet(long jarg1, StringVectorPtr jarg1_, int jarg2, String jarg3);
  public final static native void StringVectorPtr_doRemoveRange(long jarg1, StringVectorPtr jarg1_, int jarg2, int jarg3);
  public final static native void Vector2_x_set(long jarg1, Vector2 jarg1_, float jarg2);
  public final static native float Vector2_x_get(long jarg1, Vector2 jarg1_);
  public final static native void Vector2_y_set(long jarg1, Vector2 jarg1_, float jarg2);
  public final static native float Vector2_y_get(long jarg1, Vector2 jarg1_);
  public final static native long new_Vector2__SWIG_0();
  public final static native long new_Vector2__SWIG_1(float jarg1, float jarg2);
  public final static native long new_Vector2__SWIG_2(float jarg1);
  public final static native long new_Vector2__SWIG_3(long jarg1);
  public final static native long new_Vector2__SWIG_4(long jarg1);
  public final static native void Vector2_swap(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native float Vector2___getitem____SWIG_0(long jarg1, Vector2 jarg1_, long jarg2);
  public final static native long Vector2_ptr__SWIG_0(long jarg1, Vector2 jarg1_);
  public final static native float Vector2_length(long jarg1, Vector2 jarg1_);
  public final static native float Vector2_squaredLength(long jarg1, Vector2 jarg1_);
  public final static native float Vector2_distance(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native float Vector2_squaredDistance(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native float Vector2_dotProduct(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native float Vector2_normalise(long jarg1, Vector2 jarg1_);
  public final static native long Vector2_midPoint(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Vector2_makeFloor(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Vector2_makeCeil(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native long Vector2_perpendicular(long jarg1, Vector2 jarg1_);
  public final static native float Vector2_crossProduct(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native long Vector2_randomDeviant(long jarg1, Vector2 jarg1_, long jarg2, Radian jarg2_);
  public final static native boolean Vector2_isZeroLength(long jarg1, Vector2 jarg1_);
  public final static native long Vector2_normalisedCopy(long jarg1, Vector2 jarg1_);
  public final static native long Vector2_reflect(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native boolean Vector2_isNaN(long jarg1, Vector2 jarg1_);
  public final static native long Vector2_angleBetween(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native long Vector2_angleTo(long jarg1, Vector2 jarg1_, long jarg2, Vector2 jarg2_);
  public final static native long Vector2_ZERO_get();
  public final static native long Vector2_UNIT_X_get();
  public final static native long Vector2_UNIT_Y_get();
  public final static native long Vector2_NEGATIVE_UNIT_X_get();
  public final static native long Vector2_NEGATIVE_UNIT_Y_get();
  public final static native long Vector2_UNIT_SCALE_get();
  public final static native String Vector2_toString(long jarg1, Vector2 jarg1_);
  public final static native void delete_Vector2(long jarg1);
  public final static native void Vector3_x_set(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native float Vector3_x_get(long jarg1, Vector3 jarg1_);
  public final static native void Vector3_y_set(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native float Vector3_y_get(long jarg1, Vector3 jarg1_);
  public final static native void Vector3_z_set(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native float Vector3_z_get(long jarg1, Vector3 jarg1_);
  public final static native long new_Vector3__SWIG_0();
  public final static native long new_Vector3__SWIG_1(float jarg1, float jarg2, float jarg3);
  public final static native long new_Vector3__SWIG_2(long jarg1);
  public final static native long new_Vector3__SWIG_3(long jarg1);
  public final static native long new_Vector3__SWIG_5(float jarg1);
  public final static native long Vector3_xy(long jarg1, Vector3 jarg1_);
  public final static native void Vector3_swap(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Vector3___getitem____SWIG_0(long jarg1, Vector3 jarg1_, long jarg2);
  public final static native long Vector3_ptr__SWIG_0(long jarg1, Vector3 jarg1_);
  public final static native float Vector3_length(long jarg1, Vector3 jarg1_);
  public final static native float Vector3_squaredLength(long jarg1, Vector3 jarg1_);
  public final static native float Vector3_distance(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Vector3_squaredDistance(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Vector3_dotProduct(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Vector3_absDotProduct(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Vector3_normalise(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_crossProduct(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Vector3_midPoint(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Vector3_makeFloor(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Vector3_makeCeil(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Vector3_perpendicular(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_randomDeviant__SWIG_0(long jarg1, Vector3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Vector3_randomDeviant__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Radian jarg2_);
  public final static native long Vector3_angleBetween(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Vector3_getRotationTo__SWIG_0(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Vector3_getRotationTo__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean Vector3_isZeroLength(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_normalisedCopy(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_reflect(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean Vector3_positionEquals__SWIG_0(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, float jarg3);
  public final static native boolean Vector3_positionEquals__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean Vector3_positionCloses__SWIG_0(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, float jarg3);
  public final static native boolean Vector3_positionCloses__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean Vector3_directionEquals(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Radian jarg3_);
  public final static native boolean Vector3_isNaN(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_primaryAxis(long jarg1, Vector3 jarg1_);
  public final static native long Vector3_ZERO_get();
  public final static native long Vector3_UNIT_X_get();
  public final static native long Vector3_UNIT_Y_get();
  public final static native long Vector3_UNIT_Z_get();
  public final static native long Vector3_NEGATIVE_UNIT_X_get();
  public final static native long Vector3_NEGATIVE_UNIT_Y_get();
  public final static native long Vector3_NEGATIVE_UNIT_Z_get();
  public final static native long Vector3_UNIT_SCALE_get();
  public final static native String Vector3_toString(long jarg1, Vector3 jarg1_);
  public final static native void delete_Vector3(long jarg1);
  public final static native void Vector4_x_set(long jarg1, Vector4 jarg1_, float jarg2);
  public final static native float Vector4_x_get(long jarg1, Vector4 jarg1_);
  public final static native void Vector4_y_set(long jarg1, Vector4 jarg1_, float jarg2);
  public final static native float Vector4_y_get(long jarg1, Vector4 jarg1_);
  public final static native void Vector4_z_set(long jarg1, Vector4 jarg1_, float jarg2);
  public final static native float Vector4_z_get(long jarg1, Vector4 jarg1_);
  public final static native void Vector4_w_set(long jarg1, Vector4 jarg1_, float jarg2);
  public final static native float Vector4_w_get(long jarg1, Vector4 jarg1_);
  public final static native long new_Vector4__SWIG_0();
  public final static native long new_Vector4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_Vector4__SWIG_2(long jarg1);
  public final static native long new_Vector4__SWIG_3(long jarg1);
  public final static native long new_Vector4__SWIG_5(float jarg1);
  public final static native long new_Vector4__SWIG_6(long jarg1, Vector3 jarg1_);
  public final static native long Vector4_xyz(long jarg1, Vector4 jarg1_);
  public final static native long Vector4_xy(long jarg1, Vector4 jarg1_);
  public final static native void Vector4_swap(long jarg1, Vector4 jarg1_, long jarg2, Vector4 jarg2_);
  public final static native float Vector4___getitem____SWIG_0(long jarg1, Vector4 jarg1_, long jarg2);
  public final static native long Vector4_ptr__SWIG_0(long jarg1, Vector4 jarg1_);
  public final static native float Vector4_dotProduct(long jarg1, Vector4 jarg1_, long jarg2, Vector4 jarg2_);
  public final static native boolean Vector4_isNaN(long jarg1, Vector4 jarg1_);
  public final static native long Vector4_ZERO_get();
  public final static native String Vector4_toString(long jarg1, Vector4 jarg1_);
  public final static native void delete_Vector4(long jarg1);
  public final static native long new_Matrix3__SWIG_0();
  public final static native long new_Matrix3__SWIG_1(long jarg1);
  public final static native long new_Matrix3__SWIG_2(long jarg1, Matrix3 jarg1_);
  public final static native long new_Matrix3__SWIG_3(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);
  public final static native void Matrix3_swap(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_);
  public final static native long Matrix3_GetColumn(long jarg1, Matrix3 jarg1_, long jarg2);
  public final static native void Matrix3_SetColumn(long jarg1, Matrix3 jarg1_, long jarg2, long jarg3, Vector3 jarg3_);
  public final static native void Matrix3_FromAxes(long jarg1, Matrix3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native long Matrix3_Transpose(long jarg1, Matrix3 jarg1_);
  public final static native boolean Matrix3_Inverse__SWIG_0(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_, float jarg3);
  public final static native boolean Matrix3_Inverse__SWIG_1(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_);
  public final static native long Matrix3_Inverse__SWIG_2(long jarg1, Matrix3 jarg1_, float jarg2);
  public final static native long Matrix3_Inverse__SWIG_3(long jarg1, Matrix3 jarg1_);
  public final static native float Matrix3_Determinant(long jarg1, Matrix3 jarg1_);
  public final static native void Matrix3_SingularValueDecomposition(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Matrix3 jarg4_);
  public final static native void Matrix3_SingularValueComposition(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Matrix3 jarg4_);
  public final static native void Matrix3_Orthonormalize(long jarg1, Matrix3 jarg1_);
  public final static native void Matrix3_QDUDecomposition(long jarg1, Matrix3 jarg1_, long jarg2, Matrix3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native float Matrix3_SpectralNorm(long jarg1, Matrix3 jarg1_);
  public final static native void Matrix3_ToAngleAxis__SWIG_0(long jarg1, Matrix3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Radian jarg3_);
  public final static native void Matrix3_ToAngleAxis__SWIG_1(long jarg1, Matrix3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Degree jarg3_);
  public final static native void Matrix3_FromAngleAxis(long jarg1, Matrix3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Radian jarg3_);
  public final static native boolean Matrix3_ToEulerAnglesXYZ(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native boolean Matrix3_ToEulerAnglesXZY(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native boolean Matrix3_ToEulerAnglesYXZ(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native boolean Matrix3_ToEulerAnglesYZX(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native boolean Matrix3_ToEulerAnglesZXY(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native boolean Matrix3_ToEulerAnglesZYX(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesXYZ(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesXZY(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesYXZ(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesYZX(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesZXY(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_FromEulerAnglesZYX(long jarg1, Matrix3 jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, long jarg4, Radian jarg4_);
  public final static native void Matrix3_EigenSolveSymmetric(long jarg1, Matrix3 jarg1_, long jarg2, long jarg3, Vector3 jarg3_);
  public final static native void Matrix3_TensorProduct(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Matrix3 jarg3_);
  public final static native boolean Matrix3_hasScale(long jarg1, Matrix3 jarg1_);
  public final static native float Matrix3_EPSILON_get();
  public final static native long Matrix3_ZERO_get();
  public final static native long Matrix3_IDENTITY_get();
  public final static native String Matrix3_toString(long jarg1, Matrix3 jarg1_);
  public final static native void delete_Matrix3(long jarg1);
  public final static native long new_Matrix4__SWIG_0();
  public final static native long new_Matrix4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16);
  public final static native long new_Matrix4__SWIG_2(long jarg1, Matrix3 jarg1_);
  public final static native long new_Matrix4__SWIG_3(long jarg1, Quaternion jarg1_);
  public final static native void Matrix4_swap(long jarg1, Matrix4 jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long Matrix4_concatenate(long jarg1, Matrix4 jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long Matrix4_transpose(long jarg1, Matrix4 jarg1_);
  public final static native void Matrix4_setTrans(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Matrix4_getTrans__SWIG_0(long jarg1, Matrix4 jarg1_);
  public final static native void Matrix4_makeTrans__SWIG_0(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Matrix4_makeTrans__SWIG_1(long jarg1, Matrix4 jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long Matrix4_getTrans__SWIG_1(long jarg1, Vector3 jarg1_);
  public final static native long Matrix4_getTrans__SWIG_2(float jarg1, float jarg2, float jarg3);
  public final static native void Matrix4_setScale(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Matrix4_getScale__SWIG_0(long jarg1, Vector3 jarg1_);
  public final static native long Matrix4_getScale__SWIG_1(float jarg1, float jarg2, float jarg3);
  public final static native void Matrix4_extract3x3Matrix(long jarg1, Matrix4 jarg1_, long jarg2, Matrix3 jarg2_);
  public final static native boolean Matrix4_hasScale(long jarg1, Matrix4 jarg1_);
  public final static native boolean Matrix4_hasNegativeScale(long jarg1, Matrix4 jarg1_);
  public final static native long Matrix4_extractQuaternion(long jarg1, Matrix4 jarg1_);
  public final static native long Matrix4_ZERO_get();
  public final static native long Matrix4_ZEROAFFINE_get();
  public final static native long Matrix4_IDENTITY_get();
  public final static native long Matrix4_CLIPSPACE2DTOIMAGESPACE_get();
  public final static native long Matrix4_adjoint(long jarg1, Matrix4 jarg1_);
  public final static native float Matrix4_determinant(long jarg1, Matrix4 jarg1_);
  public final static native long Matrix4_inverse(long jarg1, Matrix4 jarg1_);
  public final static native void Matrix4_makeTransform(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native void Matrix4_makeInverseTransform(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native void Matrix4_decomposition(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native boolean Matrix4_isAffine(long jarg1, Matrix4 jarg1_);
  public final static native long Matrix4_inverseAffine(long jarg1, Matrix4 jarg1_);
  public final static native long Matrix4_concatenateAffine(long jarg1, Matrix4 jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long Matrix4_transformDirectionAffine(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Matrix4_transformAffine__SWIG_0(long jarg1, Matrix4 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Matrix4_transformAffine__SWIG_1(long jarg1, Matrix4 jarg1_, long jarg2, Vector4 jarg2_);
  public final static native String Matrix4_toString(long jarg1, Matrix4 jarg1_);
  public final static native void delete_Matrix4(long jarg1);
  public final static native long new_Quaternion__SWIG_0();
  public final static native long new_Quaternion__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_Quaternion__SWIG_2(long jarg1, Matrix3 jarg1_);
  public final static native long new_Quaternion__SWIG_3(long jarg1, Radian jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long new_Quaternion__SWIG_4(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long new_Quaternion__SWIG_5(long jarg1, Vector3 jarg1_);
  public final static native long new_Quaternion__SWIG_6(long jarg1);
  public final static native void Quaternion_swap(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_);
  public final static native float Quaternion___getitem____SWIG_0(long jarg1, Quaternion jarg1_, long jarg2);
  public final static native long Quaternion_ptr__SWIG_0(long jarg1, Quaternion jarg1_);
  public final static native void Quaternion_FromRotationMatrix(long jarg1, Quaternion jarg1_, long jarg2, Matrix3 jarg2_);
  public final static native void Quaternion_ToRotationMatrix(long jarg1, Quaternion jarg1_, long jarg2, Matrix3 jarg2_);
  public final static native void Quaternion_FromAngleAxis(long jarg1, Quaternion jarg1_, long jarg2, Radian jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void Quaternion_ToAngleAxis__SWIG_0(long jarg1, Quaternion jarg1_, long jarg2, Radian jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void Quaternion_ToAngleAxis__SWIG_1(long jarg1, Quaternion jarg1_, long jarg2, Degree jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void Quaternion_FromAxes__SWIG_0(long jarg1, Quaternion jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Quaternion_FromAxes__SWIG_1(long jarg1, Quaternion jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native void Quaternion_ToAxes__SWIG_0(long jarg1, Quaternion jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Quaternion_ToAxes__SWIG_1(long jarg1, Quaternion jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native long Quaternion_xAxis(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_yAxis(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_zAxis(long jarg1, Quaternion jarg1_);
  public final static native float Quaternion_Dot(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_);
  public final static native float Quaternion_Norm(long jarg1, Quaternion jarg1_);
  public final static native float Quaternion_normalise(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_Inverse(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_UnitInverse(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_Exp(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_Log(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_getRoll__SWIG_0(long jarg1, Quaternion jarg1_, boolean jarg2);
  public final static native long Quaternion_getRoll__SWIG_1(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_getPitch__SWIG_0(long jarg1, Quaternion jarg1_, boolean jarg2);
  public final static native long Quaternion_getPitch__SWIG_1(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_getYaw__SWIG_0(long jarg1, Quaternion jarg1_, boolean jarg2);
  public final static native long Quaternion_getYaw__SWIG_1(long jarg1, Quaternion jarg1_);
  public final static native boolean Quaternion_equals(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_, long jarg3, Radian jarg3_);
  public final static native boolean Quaternion_orientationEquals__SWIG_0(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_, float jarg3);
  public final static native boolean Quaternion_orientationEquals__SWIG_1(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long Quaternion_Slerp__SWIG_0(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, boolean jarg4);
  public final static native long Quaternion_Slerp__SWIG_1(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_);
  public final static native long Quaternion_SlerpExtraSpins(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, int jarg4);
  public final static native void Quaternion_Intermediate(long jarg1, Quaternion jarg1_, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, long jarg4, Quaternion jarg4_, long jarg5, Quaternion jarg5_);
  public final static native long Quaternion_Squad__SWIG_0(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, long jarg4, Quaternion jarg4_, long jarg5, Quaternion jarg5_, boolean jarg6);
  public final static native long Quaternion_Squad__SWIG_1(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, long jarg4, Quaternion jarg4_, long jarg5, Quaternion jarg5_);
  public final static native long Quaternion_nlerp__SWIG_0(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_, boolean jarg4);
  public final static native long Quaternion_nlerp__SWIG_1(float jarg1, long jarg2, Quaternion jarg2_, long jarg3, Quaternion jarg3_);
  public final static native float Quaternion_msEpsilon_get();
  public final static native long Quaternion_ZERO_get();
  public final static native long Quaternion_IDENTITY_get();
  public final static native void Quaternion_w_set(long jarg1, Quaternion jarg1_, float jarg2);
  public final static native float Quaternion_w_get(long jarg1, Quaternion jarg1_);
  public final static native void Quaternion_x_set(long jarg1, Quaternion jarg1_, float jarg2);
  public final static native float Quaternion_x_get(long jarg1, Quaternion jarg1_);
  public final static native void Quaternion_y_set(long jarg1, Quaternion jarg1_, float jarg2);
  public final static native float Quaternion_y_get(long jarg1, Quaternion jarg1_);
  public final static native void Quaternion_z_set(long jarg1, Quaternion jarg1_, float jarg2);
  public final static native float Quaternion_z_get(long jarg1, Quaternion jarg1_);
  public final static native boolean Quaternion_isNaN(long jarg1, Quaternion jarg1_);
  public final static native String Quaternion_toString(long jarg1, Quaternion jarg1_);
  public final static native void delete_Quaternion(long jarg1);
  public final static native long new_SimpleSpline();
  public final static native void delete_SimpleSpline(long jarg1);
  public final static native void SimpleSpline_addPoint(long jarg1, SimpleSpline jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long SimpleSpline_getPoint(long jarg1, SimpleSpline jarg1_, int jarg2);
  public final static native int SimpleSpline_getNumPoints(long jarg1, SimpleSpline jarg1_);
  public final static native void SimpleSpline_clear(long jarg1, SimpleSpline jarg1_);
  public final static native void SimpleSpline_updatePoint(long jarg1, SimpleSpline jarg1_, int jarg2, long jarg3, Vector3 jarg3_);
  public final static native long SimpleSpline_interpolate__SWIG_0(long jarg1, SimpleSpline jarg1_, float jarg2);
  public final static native long SimpleSpline_interpolate__SWIG_1(long jarg1, SimpleSpline jarg1_, long jarg2, float jarg3);
  public final static native void SimpleSpline_setAutoCalculate(long jarg1, SimpleSpline jarg1_, boolean jarg2);
  public final static native void SimpleSpline_recalcTangents(long jarg1, SimpleSpline jarg1_);
  public final static native long new_RotationalSpline();
  public final static native void delete_RotationalSpline(long jarg1);
  public final static native void RotationalSpline_addPoint(long jarg1, RotationalSpline jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long RotationalSpline_getPoint(long jarg1, RotationalSpline jarg1_, int jarg2);
  public final static native int RotationalSpline_getNumPoints(long jarg1, RotationalSpline jarg1_);
  public final static native void RotationalSpline_clear(long jarg1, RotationalSpline jarg1_);
  public final static native void RotationalSpline_updatePoint(long jarg1, RotationalSpline jarg1_, int jarg2, long jarg3, Quaternion jarg3_);
  public final static native long RotationalSpline_interpolate__SWIG_0(long jarg1, RotationalSpline jarg1_, float jarg2, boolean jarg3);
  public final static native long RotationalSpline_interpolate__SWIG_1(long jarg1, RotationalSpline jarg1_, float jarg2);
  public final static native long RotationalSpline_interpolate__SWIG_2(long jarg1, RotationalSpline jarg1_, long jarg2, float jarg3, boolean jarg4);
  public final static native long RotationalSpline_interpolate__SWIG_3(long jarg1, RotationalSpline jarg1_, long jarg2, float jarg3);
  public final static native void RotationalSpline_setAutoCalculate(long jarg1, RotationalSpline jarg1_, boolean jarg2);
  public final static native void RotationalSpline_recalcTangents(long jarg1, RotationalSpline jarg1_);
  public final static native int AxisAlignedBox_FAR_LEFT_BOTTOM_get();
  public final static native int AxisAlignedBox_FAR_LEFT_TOP_get();
  public final static native int AxisAlignedBox_FAR_RIGHT_TOP_get();
  public final static native int AxisAlignedBox_FAR_RIGHT_BOTTOM_get();
  public final static native int AxisAlignedBox_NEAR_RIGHT_BOTTOM_get();
  public final static native int AxisAlignedBox_NEAR_LEFT_BOTTOM_get();
  public final static native int AxisAlignedBox_NEAR_LEFT_TOP_get();
  public final static native int AxisAlignedBox_NEAR_RIGHT_TOP_get();
  public final static native long new_AxisAlignedBox__SWIG_0();
  public final static native long new_AxisAlignedBox__SWIG_1(int jarg1);
  public final static native long new_AxisAlignedBox__SWIG_2(long jarg1, AxisAlignedBox jarg1_);
  public final static native long new_AxisAlignedBox__SWIG_3(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long new_AxisAlignedBox__SWIG_4(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void delete_AxisAlignedBox(long jarg1);
  public final static native long AxisAlignedBox_getMinimum__SWIG_0(long jarg1, AxisAlignedBox jarg1_);
  public final static native long AxisAlignedBox_getMaximum__SWIG_0(long jarg1, AxisAlignedBox jarg1_);
  public final static native void AxisAlignedBox_setMinimum__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void AxisAlignedBox_setMinimum__SWIG_1(long jarg1, AxisAlignedBox jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void AxisAlignedBox_setMinimumX(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setMinimumY(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setMinimumZ(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setMaximum__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void AxisAlignedBox_setMaximum__SWIG_1(long jarg1, AxisAlignedBox jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void AxisAlignedBox_setMaximumX(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setMaximumY(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setMaximumZ(long jarg1, AxisAlignedBox jarg1_, float jarg2);
  public final static native void AxisAlignedBox_setExtents__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void AxisAlignedBox_setExtents__SWIG_1(long jarg1, AxisAlignedBox jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native long AxisAlignedBox_getAllCorners(long jarg1, AxisAlignedBox jarg1_);
  public final static native long AxisAlignedBox_getCorner(long jarg1, AxisAlignedBox jarg1_, int jarg2);
  public final static native void AxisAlignedBox_merge__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void AxisAlignedBox_merge__SWIG_1(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void AxisAlignedBox_transform(long jarg1, AxisAlignedBox jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void AxisAlignedBox_transformAffine(long jarg1, AxisAlignedBox jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void AxisAlignedBox_setNull(long jarg1, AxisAlignedBox jarg1_);
  public final static native boolean AxisAlignedBox_isNull(long jarg1, AxisAlignedBox jarg1_);
  public final static native boolean AxisAlignedBox_isFinite(long jarg1, AxisAlignedBox jarg1_);
  public final static native void AxisAlignedBox_setInfinite(long jarg1, AxisAlignedBox jarg1_);
  public final static native boolean AxisAlignedBox_isInfinite(long jarg1, AxisAlignedBox jarg1_);
  public final static native boolean AxisAlignedBox_intersects__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long AxisAlignedBox_intersection(long jarg1, AxisAlignedBox jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native float AxisAlignedBox_volume(long jarg1, AxisAlignedBox jarg1_);
  public final static native void AxisAlignedBox_scale(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean AxisAlignedBox_intersects__SWIG_1(long jarg1, AxisAlignedBox jarg1_, long jarg2, Sphere jarg2_);
  public final static native boolean AxisAlignedBox_intersects__SWIG_2(long jarg1, AxisAlignedBox jarg1_, long jarg2, Plane jarg2_);
  public final static native boolean AxisAlignedBox_intersects__SWIG_3(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long AxisAlignedBox_getCenter(long jarg1, AxisAlignedBox jarg1_);
  public final static native long AxisAlignedBox_getSize(long jarg1, AxisAlignedBox jarg1_);
  public final static native long AxisAlignedBox_getHalfSize(long jarg1, AxisAlignedBox jarg1_);
  public final static native boolean AxisAlignedBox_contains__SWIG_0(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float AxisAlignedBox_squaredDistance(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float AxisAlignedBox_distance(long jarg1, AxisAlignedBox jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean AxisAlignedBox_contains__SWIG_1(long jarg1, AxisAlignedBox jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long AxisAlignedBox_BOX_NULL_get();
  public final static native long AxisAlignedBox_BOX_INFINITE_get();
  public final static native String AxisAlignedBox_toString(long jarg1, AxisAlignedBox jarg1_);
  public final static native long new_Sphere__SWIG_0();
  public final static native long new_Sphere__SWIG_1(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native float Sphere_getRadius(long jarg1, Sphere jarg1_);
  public final static native void Sphere_setRadius(long jarg1, Sphere jarg1_, float jarg2);
  public final static native long Sphere_getCenter(long jarg1, Sphere jarg1_);
  public final static native void Sphere_setCenter(long jarg1, Sphere jarg1_, long jarg2, Vector3 jarg2_);
  public final static native boolean Sphere_intersects__SWIG_0(long jarg1, Sphere jarg1_, long jarg2, Sphere jarg2_);
  public final static native boolean Sphere_intersects__SWIG_1(long jarg1, Sphere jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean Sphere_intersects__SWIG_2(long jarg1, Sphere jarg1_, long jarg2, Plane jarg2_);
  public final static native boolean Sphere_intersects__SWIG_3(long jarg1, Sphere jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Sphere_merge(long jarg1, Sphere jarg1_, long jarg2, Sphere jarg2_);
  public final static native void delete_Sphere(long jarg1);
  public final static native void Plane_normal_set(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Plane_normal_get(long jarg1, Plane jarg1_);
  public final static native void Plane_d_set(long jarg1, Plane jarg1_, float jarg2);
  public final static native float Plane_d_get(long jarg1, Plane jarg1_);
  public final static native long new_Plane__SWIG_0();
  public final static native long new_Plane__SWIG_1(long jarg1, Plane jarg1_);
  public final static native long new_Plane__SWIG_2(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native long new_Plane__SWIG_3(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_Plane__SWIG_4(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long new_Plane__SWIG_5(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native int Plane_getSide__SWIG_0(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_);
  public final static native int Plane_getSide__SWIG_1(long jarg1, Plane jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native int Plane_getSide__SWIG_2(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native float Plane_getDistance(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Plane_redefine__SWIG_0(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native void Plane_redefine__SWIG_1(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native long Plane_projectVector(long jarg1, Plane jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float Plane_normalise(long jarg1, Plane jarg1_);
  public final static native String Plane_toString(long jarg1, Plane jarg1_);
  public final static native void delete_Plane(long jarg1);
  public final static native void PlaneBoundedVolume_planes_set(long jarg1, PlaneBoundedVolume jarg1_, long jarg2);
  public final static native long PlaneBoundedVolume_planes_get(long jarg1, PlaneBoundedVolume jarg1_);
  public final static native void PlaneBoundedVolume_outside_set(long jarg1, PlaneBoundedVolume jarg1_, int jarg2);
  public final static native int PlaneBoundedVolume_outside_get(long jarg1, PlaneBoundedVolume jarg1_);
  public final static native long new_PlaneBoundedVolume__SWIG_0();
  public final static native long new_PlaneBoundedVolume__SWIG_1(int jarg1);
  public final static native boolean PlaneBoundedVolume_intersects__SWIG_0(long jarg1, PlaneBoundedVolume jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean PlaneBoundedVolume_intersects__SWIG_1(long jarg1, PlaneBoundedVolume jarg1_, long jarg2, Sphere jarg2_);
  public final static native long PlaneBoundedVolume_intersects__SWIG_2(long jarg1, PlaneBoundedVolume jarg1_, long jarg2, Ray jarg2_);
  public final static native void delete_PlaneBoundedVolume(long jarg1);
  public final static native void ConfigOption_name_set(long jarg1, ConfigOption jarg1_, String jarg2);
  public final static native String ConfigOption_name_get(long jarg1, ConfigOption jarg1_);
  public final static native void ConfigOption_currentValue_set(long jarg1, ConfigOption jarg1_, String jarg2);
  public final static native String ConfigOption_currentValue_get(long jarg1, ConfigOption jarg1_);
  public final static native void ConfigOption_possibleValues_set(long jarg1, ConfigOption jarg1_, long jarg2, StringVector jarg2_);
  public final static native long ConfigOption_possibleValues_get(long jarg1, ConfigOption jarg1_);
  public final static native void ConfigOption_immutable_set(long jarg1, ConfigOption jarg1_, boolean jarg2);
  public final static native boolean ConfigOption_immutable_get(long jarg1, ConfigOption jarg1_);
  public final static native long new_ConfigOption();
  public final static native void delete_ConfigOption(long jarg1);
  public final static native long new_SettingsBySection__SWIG_0();
  public final static native long new_SettingsBySection__SWIG_1(long jarg1, SettingsBySection jarg1_);
  public final static native long SettingsBySection_size(long jarg1, SettingsBySection jarg1_);
  public final static native boolean SettingsBySection_empty(long jarg1, SettingsBySection jarg1_);
  public final static native void SettingsBySection_clear(long jarg1, SettingsBySection jarg1_);
  public final static native long SettingsBySection_get(long jarg1, SettingsBySection jarg1_, String jarg2);
  public final static native void SettingsBySection_set(long jarg1, SettingsBySection jarg1_, String jarg2, long jarg3);
  public final static native void SettingsBySection_del(long jarg1, SettingsBySection jarg1_, String jarg2);
  public final static native boolean SettingsBySection_has_key(long jarg1, SettingsBySection jarg1_, String jarg2);
  public final static native void delete_SettingsBySection(long jarg1);
  public final static native long new_ConfigFile();
  public final static native void ConfigFile_loadDirect__SWIG_0(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ConfigFile_loadDirect__SWIG_1(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3);
  public final static native void ConfigFile_loadDirect__SWIG_2(long jarg1, ConfigFile jarg1_, String jarg2);
  public final static native void ConfigFile_loadFromResourceSystem__SWIG_0(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native void ConfigFile_loadFromResourceSystem__SWIG_1(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ConfigFile_loadFromResourceSystem__SWIG_2(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3);
  public final static native String ConfigFile_getSetting__SWIG_0(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native String ConfigFile_getSetting__SWIG_1(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3);
  public final static native String ConfigFile_getSetting__SWIG_2(long jarg1, ConfigFile jarg1_, String jarg2);
  public final static native long ConfigFile_getMultiSetting__SWIG_0(long jarg1, ConfigFile jarg1_, String jarg2, String jarg3);
  public final static native long ConfigFile_getMultiSetting__SWIG_1(long jarg1, ConfigFile jarg1_, String jarg2);
  public final static native long ConfigFile_getSettingsBySection(long jarg1, ConfigFile jarg1_);
  public final static native long ConfigFile_getSettings__SWIG_0(long jarg1, ConfigFile jarg1_, String jarg2);
  public final static native long ConfigFile_getSettings__SWIG_1(long jarg1, ConfigFile jarg1_);
  public final static native void ConfigFile_clear(long jarg1, ConfigFile jarg1_);
  public final static native void delete_ConfigFile(long jarg1);
  public final static native int OGRE_LOG_THRESHOLD_get();
  public final static native int LL_LOW_get();
  public final static native int LL_NORMAL_get();
  public final static native int LL_BOREME_get();
  public final static native int LML_TRIVIAL_get();
  public final static native int LML_NORMAL_get();
  public final static native int LML_WARNING_get();
  public final static native int LML_CRITICAL_get();
  public final static native void delete_LogListener(long jarg1);
  public final static native void LogListener_messageLogged(long jarg1, LogListener jarg1_, String jarg2, int jarg3, boolean jarg4, String jarg5, long jarg6);
  public final static native long new_Log__SWIG_0(String jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_Log__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_Log__SWIG_2(String jarg1);
  public final static native void delete_Log(long jarg1);
  public final static native String Log_getName(long jarg1, Log jarg1_);
  public final static native boolean Log_isDebugOutputEnabled(long jarg1, Log jarg1_);
  public final static native boolean Log_isFileOutputSuppressed(long jarg1, Log jarg1_);
  public final static native boolean Log_isTimeStampEnabled(long jarg1, Log jarg1_);
  public final static native void Log_logMessage__SWIG_0(long jarg1, Log jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void Log_logMessage__SWIG_1(long jarg1, Log jarg1_, String jarg2, int jarg3);
  public final static native void Log_logMessage__SWIG_2(long jarg1, Log jarg1_, String jarg2);
  public final static native long Log_stream__SWIG_0(long jarg1, Log jarg1_, int jarg2, boolean jarg3);
  public final static native long Log_stream__SWIG_1(long jarg1, Log jarg1_, int jarg2);
  public final static native long Log_stream__SWIG_2(long jarg1, Log jarg1_);
  public final static native void Log_setDebugOutputEnabled(long jarg1, Log jarg1_, boolean jarg2);
  public final static native void Log_setLogDetail(long jarg1, Log jarg1_, int jarg2);
  public final static native void Log_setTimeStampEnabled(long jarg1, Log jarg1_, boolean jarg2);
  public final static native int Log_getLogDetail(long jarg1, Log jarg1_);
  public final static native void Log_addListener(long jarg1, Log jarg1_, long jarg2, LogListener jarg2_);
  public final static native void Log_removeListener(long jarg1, Log jarg1_, long jarg2, LogListener jarg2_);
  public final static native long new_Log_Stream_Flush();
  public final static native void delete_Log_Stream_Flush(long jarg1);
  public final static native long new_Log_Stream__SWIG_0(long jarg1, Log jarg1_, int jarg2, boolean jarg3);
  public final static native long new_Log_Stream__SWIG_1(long jarg1, Log.Stream jarg1_);
  public final static native void delete_Log_Stream(long jarg1);
  public final static native long new_LogManager();
  public final static native void delete_LogManager(long jarg1);
  public final static native long LogManager_createLog__SWIG_0(long jarg1, LogManager jarg1_, String jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long LogManager_createLog__SWIG_1(long jarg1, LogManager jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long LogManager_createLog__SWIG_2(long jarg1, LogManager jarg1_, String jarg2, boolean jarg3);
  public final static native long LogManager_createLog__SWIG_3(long jarg1, LogManager jarg1_, String jarg2);
  public final static native long LogManager_getLog(long jarg1, LogManager jarg1_, String jarg2);
  public final static native long LogManager_getDefaultLog(long jarg1, LogManager jarg1_);
  public final static native void LogManager_destroyLog__SWIG_0(long jarg1, LogManager jarg1_, String jarg2);
  public final static native void LogManager_destroyLog__SWIG_1(long jarg1, LogManager jarg1_, long jarg2, Log jarg2_);
  public final static native long LogManager_setDefaultLog(long jarg1, LogManager jarg1_, long jarg2, Log jarg2_);
  public final static native void LogManager_logMessage__SWIG_0(long jarg1, LogManager jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void LogManager_logMessage__SWIG_1(long jarg1, LogManager jarg1_, String jarg2, int jarg3);
  public final static native void LogManager_logMessage__SWIG_2(long jarg1, LogManager jarg1_, String jarg2);
  public final static native void LogManager_logError__SWIG_0(long jarg1, LogManager jarg1_, String jarg2, boolean jarg3);
  public final static native void LogManager_logError__SWIG_1(long jarg1, LogManager jarg1_, String jarg2);
  public final static native void LogManager_logWarning__SWIG_0(long jarg1, LogManager jarg1_, String jarg2, boolean jarg3);
  public final static native void LogManager_logWarning__SWIG_1(long jarg1, LogManager jarg1_, String jarg2);
  public final static native void LogManager_logMessage__SWIG_3(long jarg1, LogManager jarg1_, int jarg2, String jarg3, boolean jarg4);
  public final static native void LogManager_logMessage__SWIG_4(long jarg1, LogManager jarg1_, int jarg2, String jarg3);
  public final static native long LogManager_stream__SWIG_0(long jarg1, LogManager jarg1_, int jarg2, boolean jarg3);
  public final static native long LogManager_stream__SWIG_1(long jarg1, LogManager jarg1_, int jarg2);
  public final static native long LogManager_stream__SWIG_2(long jarg1, LogManager jarg1_);
  public final static native void LogManager_setLogDetail(long jarg1, LogManager jarg1_, int jarg2);
  public final static native long LogManager_getSingleton();
  public final static native int DataStream_READ_get();
  public final static native int DataStream_WRITE_get();
  public final static native String DataStream_getName(long jarg1, DataStream jarg1_);
  public final static native int DataStream_getAccessMode(long jarg1, DataStream jarg1_);
  public final static native boolean DataStream_isReadable(long jarg1, DataStream jarg1_);
  public final static native boolean DataStream_isWriteable(long jarg1, DataStream jarg1_);
  public final static native void delete_DataStream(long jarg1);
  public final static native long DataStream_read(long jarg1, DataStream jarg1_, long jarg2, long jarg3);
  public final static native long DataStream_write(long jarg1, DataStream jarg1_, long jarg2, long jarg3);
  public final static native long DataStream_readLine__SWIG_0(long jarg1, DataStream jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long DataStream_readLine__SWIG_1(long jarg1, DataStream jarg1_, String jarg2, long jarg3);
  public final static native String DataStream_getLine__SWIG_0(long jarg1, DataStream jarg1_, boolean jarg2);
  public final static native String DataStream_getLine__SWIG_1(long jarg1, DataStream jarg1_);
  public final static native String DataStream_getAsString(long jarg1, DataStream jarg1_);
  public final static native long DataStream_skipLine__SWIG_0(long jarg1, DataStream jarg1_, String jarg2);
  public final static native long DataStream_skipLine__SWIG_1(long jarg1, DataStream jarg1_);
  public final static native void DataStream_skip(long jarg1, DataStream jarg1_, int jarg2);
  public final static native void DataStream_seek(long jarg1, DataStream jarg1_, long jarg2);
  public final static native long DataStream_tell(long jarg1, DataStream jarg1_);
  public final static native boolean DataStream_eof(long jarg1, DataStream jarg1_);
  public final static native long DataStream_size(long jarg1, DataStream jarg1_);
  public final static native void DataStream_close(long jarg1, DataStream jarg1_);
  public final static native long new_MemoryDataStream__SWIG_0(long jarg1, long jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_MemoryDataStream__SWIG_1(long jarg1, long jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_2(long jarg1, long jarg2);
  public final static native long new_MemoryDataStream__SWIG_3(String jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_MemoryDataStream__SWIG_4(String jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_MemoryDataStream__SWIG_5(String jarg1, long jarg2, long jarg3);
  public final static native long new_MemoryDataStream__SWIG_6(long jarg1, DataStream jarg1_, boolean jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_7(long jarg1, DataStream jarg1_, boolean jarg2);
  public final static native long new_MemoryDataStream__SWIG_8(long jarg1, DataStream jarg1_);
  public final static native long new_MemoryDataStream__SWIG_9(long jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_10(long jarg1, boolean jarg2);
  public final static native long new_MemoryDataStream__SWIG_11(long jarg1);
  public final static native long new_MemoryDataStream__SWIG_12(String jarg1, long jarg2, DataStream jarg2_, boolean jarg3, boolean jarg4);
  public final static native long new_MemoryDataStream__SWIG_13(String jarg1, long jarg2, DataStream jarg2_, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_14(String jarg1, long jarg2, DataStream jarg2_);
  public final static native long new_MemoryDataStream__SWIG_15(String jarg1, long jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_MemoryDataStream__SWIG_16(String jarg1, long jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_17(String jarg1, long jarg2);
  public final static native long new_MemoryDataStream__SWIG_18(long jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_19(long jarg1);
  public final static native long new_MemoryDataStream__SWIG_20(String jarg1, long jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_MemoryDataStream__SWIG_21(String jarg1, long jarg2, boolean jarg3);
  public final static native long new_MemoryDataStream__SWIG_22(String jarg1, long jarg2);
  public final static native void delete_MemoryDataStream(long jarg1);
  public final static native long MemoryDataStream_getPtr(long jarg1, MemoryDataStream jarg1_);
  public final static native long MemoryDataStream_getCurrentPtr(long jarg1, MemoryDataStream jarg1_);
  public final static native long MemoryDataStream_read(long jarg1, MemoryDataStream jarg1_, long jarg2, long jarg3);
  public final static native long MemoryDataStream_write(long jarg1, MemoryDataStream jarg1_, long jarg2, long jarg3);
  public final static native long MemoryDataStream_readLine__SWIG_0(long jarg1, MemoryDataStream jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long MemoryDataStream_readLine__SWIG_1(long jarg1, MemoryDataStream jarg1_, String jarg2, long jarg3);
  public final static native long MemoryDataStream_skipLine__SWIG_0(long jarg1, MemoryDataStream jarg1_, String jarg2);
  public final static native long MemoryDataStream_skipLine__SWIG_1(long jarg1, MemoryDataStream jarg1_);
  public final static native void MemoryDataStream_skip(long jarg1, MemoryDataStream jarg1_, int jarg2);
  public final static native void MemoryDataStream_seek(long jarg1, MemoryDataStream jarg1_, long jarg2);
  public final static native long MemoryDataStream_tell(long jarg1, MemoryDataStream jarg1_);
  public final static native boolean MemoryDataStream_eof(long jarg1, MemoryDataStream jarg1_);
  public final static native void MemoryDataStream_close(long jarg1, MemoryDataStream jarg1_);
  public final static native void MemoryDataStream_setFreeOnClose(long jarg1, MemoryDataStream jarg1_, boolean jarg2);
  public final static native long new_FileStreamDataStream__SWIG_0(long jarg1, boolean jarg2);
  public final static native long new_FileStreamDataStream__SWIG_1(long jarg1);
  public final static native long new_FileStreamDataStream__SWIG_2(long jarg1, boolean jarg2);
  public final static native long new_FileStreamDataStream__SWIG_3(long jarg1);
  public final static native long new_FileStreamDataStream__SWIG_4(String jarg1, long jarg2, boolean jarg3);
  public final static native long new_FileStreamDataStream__SWIG_5(String jarg1, long jarg2);
  public final static native long new_FileStreamDataStream__SWIG_6(String jarg1, long jarg2, boolean jarg3);
  public final static native long new_FileStreamDataStream__SWIG_7(String jarg1, long jarg2);
  public final static native long new_FileStreamDataStream__SWIG_8(String jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_FileStreamDataStream__SWIG_9(String jarg1, long jarg2, long jarg3);
  public final static native long new_FileStreamDataStream__SWIG_10(String jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_FileStreamDataStream__SWIG_11(String jarg1, long jarg2, long jarg3);
  public final static native void delete_FileStreamDataStream(long jarg1);
  public final static native long FileStreamDataStream_read(long jarg1, FileStreamDataStream jarg1_, long jarg2, long jarg3);
  public final static native long FileStreamDataStream_write(long jarg1, FileStreamDataStream jarg1_, long jarg2, long jarg3);
  public final static native long FileStreamDataStream_readLine__SWIG_0(long jarg1, FileStreamDataStream jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long FileStreamDataStream_readLine__SWIG_1(long jarg1, FileStreamDataStream jarg1_, String jarg2, long jarg3);
  public final static native void FileStreamDataStream_skip(long jarg1, FileStreamDataStream jarg1_, int jarg2);
  public final static native void FileStreamDataStream_seek(long jarg1, FileStreamDataStream jarg1_, long jarg2);
  public final static native long FileStreamDataStream_tell(long jarg1, FileStreamDataStream jarg1_);
  public final static native boolean FileStreamDataStream_eof(long jarg1, FileStreamDataStream jarg1_);
  public final static native void FileStreamDataStream_close(long jarg1, FileStreamDataStream jarg1_);
  public final static native long new_FileHandleDataStream__SWIG_0(long jarg1, int jarg2);
  public final static native long new_FileHandleDataStream__SWIG_1(long jarg1);
  public final static native long new_FileHandleDataStream__SWIG_2(String jarg1, long jarg2, int jarg3);
  public final static native long new_FileHandleDataStream__SWIG_3(String jarg1, long jarg2);
  public final static native void delete_FileHandleDataStream(long jarg1);
  public final static native long FileHandleDataStream_read(long jarg1, FileHandleDataStream jarg1_, long jarg2, long jarg3);
  public final static native long FileHandleDataStream_write(long jarg1, FileHandleDataStream jarg1_, long jarg2, long jarg3);
  public final static native void FileHandleDataStream_skip(long jarg1, FileHandleDataStream jarg1_, int jarg2);
  public final static native void FileHandleDataStream_seek(long jarg1, FileHandleDataStream jarg1_, long jarg2);
  public final static native long FileHandleDataStream_tell(long jarg1, FileHandleDataStream jarg1_);
  public final static native boolean FileHandleDataStream_eof(long jarg1, FileHandleDataStream jarg1_);
  public final static native void FileHandleDataStream_close(long jarg1, FileHandleDataStream jarg1_);
  public final static native void FileInfo_archive_set(long jarg1, FileInfo jarg1_, long jarg2, Archive jarg2_);
  public final static native long FileInfo_archive_get(long jarg1, FileInfo jarg1_);
  public final static native void FileInfo_filename_set(long jarg1, FileInfo jarg1_, String jarg2);
  public final static native String FileInfo_filename_get(long jarg1, FileInfo jarg1_);
  public final static native void FileInfo_path_set(long jarg1, FileInfo jarg1_, String jarg2);
  public final static native String FileInfo_path_get(long jarg1, FileInfo jarg1_);
  public final static native void FileInfo_basename_set(long jarg1, FileInfo jarg1_, String jarg2);
  public final static native String FileInfo_basename_get(long jarg1, FileInfo jarg1_);
  public final static native void FileInfo_compressedSize_set(long jarg1, FileInfo jarg1_, long jarg2);
  public final static native long FileInfo_compressedSize_get(long jarg1, FileInfo jarg1_);
  public final static native void FileInfo_uncompressedSize_set(long jarg1, FileInfo jarg1_, long jarg2);
  public final static native long FileInfo_uncompressedSize_get(long jarg1, FileInfo jarg1_);
  public final static native long new_FileInfo();
  public final static native void delete_FileInfo(long jarg1);
  public final static native void delete_Archive(long jarg1);
  public final static native String Archive_getName(long jarg1, Archive jarg1_);
  public final static native boolean Archive_isCaseSensitive(long jarg1, Archive jarg1_);
  public final static native void Archive_load(long jarg1, Archive jarg1_);
  public final static native void Archive_unload(long jarg1, Archive jarg1_);
  public final static native boolean Archive_isReadOnly(long jarg1, Archive jarg1_);
  public final static native long Archive_open__SWIG_0(long jarg1, Archive jarg1_, String jarg2, boolean jarg3);
  public final static native long Archive_open__SWIG_1(long jarg1, Archive jarg1_, String jarg2);
  public final static native long Archive_create(long jarg1, Archive jarg1_, String jarg2);
  public final static native void Archive_remove(long jarg1, Archive jarg1_, String jarg2);
  public final static native long Archive_list__SWIG_0(long jarg1, Archive jarg1_, boolean jarg2, boolean jarg3);
  public final static native long Archive_list__SWIG_1(long jarg1, Archive jarg1_, boolean jarg2);
  public final static native long Archive_list__SWIG_2(long jarg1, Archive jarg1_);
  public final static native long Archive_listFileInfo__SWIG_0(long jarg1, Archive jarg1_, boolean jarg2, boolean jarg3);
  public final static native long Archive_listFileInfo__SWIG_1(long jarg1, Archive jarg1_, boolean jarg2);
  public final static native long Archive_listFileInfo__SWIG_2(long jarg1, Archive jarg1_);
  public final static native long Archive_find__SWIG_0(long jarg1, Archive jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long Archive_find__SWIG_1(long jarg1, Archive jarg1_, String jarg2, boolean jarg3);
  public final static native long Archive_find__SWIG_2(long jarg1, Archive jarg1_, String jarg2);
  public final static native boolean Archive_exists(long jarg1, Archive jarg1_, String jarg2);
  public final static native long Archive_getModifiedTime(long jarg1, Archive jarg1_, String jarg2);
  public final static native long Archive_findFileInfo__SWIG_0(long jarg1, Archive jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long Archive_findFileInfo__SWIG_1(long jarg1, Archive jarg1_, String jarg2, boolean jarg3);
  public final static native long Archive_findFileInfo__SWIG_2(long jarg1, Archive jarg1_, String jarg2);
  public final static native void delete_ArchiveFactory(long jarg1);
  public final static native long ArchiveFactory_createInstance__SWIG_0(long jarg1, ArchiveFactory jarg1_, String jarg2, boolean jarg3);
  public final static native long ArchiveFactory_createInstance__SWIG_1(long jarg1, ArchiveFactory jarg1_, String jarg2);
  public final static native long new_ZipArchive__SWIG_0(String jarg1, String jarg2, long jarg3);
  public final static native long new_ZipArchive__SWIG_1(String jarg1, String jarg2);
  public final static native void delete_ZipArchive(long jarg1);
  public final static native boolean ZipArchive_isCaseSensitive(long jarg1, ZipArchive jarg1_);
  public final static native void ZipArchive_load(long jarg1, ZipArchive jarg1_);
  public final static native void ZipArchive_unload(long jarg1, ZipArchive jarg1_);
  public final static native long ZipArchive_open__SWIG_0(long jarg1, ZipArchive jarg1_, String jarg2, boolean jarg3);
  public final static native long ZipArchive_open__SWIG_1(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native long ZipArchive_create(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native void ZipArchive_remove(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native long ZipArchive_list__SWIG_0(long jarg1, ZipArchive jarg1_, boolean jarg2, boolean jarg3);
  public final static native long ZipArchive_list__SWIG_1(long jarg1, ZipArchive jarg1_, boolean jarg2);
  public final static native long ZipArchive_list__SWIG_2(long jarg1, ZipArchive jarg1_);
  public final static native long ZipArchive_listFileInfo__SWIG_0(long jarg1, ZipArchive jarg1_, boolean jarg2, boolean jarg3);
  public final static native long ZipArchive_listFileInfo__SWIG_1(long jarg1, ZipArchive jarg1_, boolean jarg2);
  public final static native long ZipArchive_listFileInfo__SWIG_2(long jarg1, ZipArchive jarg1_);
  public final static native long ZipArchive_find__SWIG_0(long jarg1, ZipArchive jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long ZipArchive_find__SWIG_1(long jarg1, ZipArchive jarg1_, String jarg2, boolean jarg3);
  public final static native long ZipArchive_find__SWIG_2(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native long ZipArchive_findFileInfo__SWIG_0(long jarg1, ZipArchive jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long ZipArchive_findFileInfo__SWIG_1(long jarg1, ZipArchive jarg1_, String jarg2, boolean jarg3);
  public final static native long ZipArchive_findFileInfo__SWIG_2(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native boolean ZipArchive_exists(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native long ZipArchive_getModifiedTime(long jarg1, ZipArchive jarg1_, String jarg2);
  public final static native long new_EmbeddedZipArchiveFactory();
  public final static native void delete_EmbeddedZipArchiveFactory(long jarg1);
  public final static native long EmbeddedZipArchiveFactory_createInstance(long jarg1, EmbeddedZipArchiveFactory jarg1_, String jarg2, boolean jarg3);
  public final static native void EmbeddedZipArchiveFactory_addEmbbeddedFile(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void EmbeddedZipArchiveFactory_removeEmbbeddedFile(String jarg1);
  public final static native long new_ArchiveManager();
  public final static native void delete_ArchiveManager(long jarg1);
  public final static native long ArchiveManager_load(long jarg1, ArchiveManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ArchiveManager_unload__SWIG_0(long jarg1, ArchiveManager jarg1_, long jarg2, Archive jarg2_);
  public final static native void ArchiveManager_unload__SWIG_1(long jarg1, ArchiveManager jarg1_, String jarg2);
  public final static native long ArchiveManager_getArchiveIterator(long jarg1, ArchiveManager jarg1_);
  public final static native void ArchiveManager_addArchiveFactory(long jarg1, ArchiveManager jarg1_, long jarg2, ArchiveFactory jarg2_);
  public final static native long ArchiveManager_getSingleton();
  public final static native void delete_Codec_CodecData(long jarg1);
  public final static native String Codec_CodecData_dataType(long jarg1, Codec.CodecData jarg1_);
  public final static native long new_Codec_CodecData();
  public final static native void delete_Codec(long jarg1);
  public final static native void Codec_registerCodec(long jarg1, Codec jarg1_);
  public final static native boolean Codec_isCodecRegistered(String jarg1);
  public final static native void Codec_unregisterCodec(long jarg1, Codec jarg1_);
  public final static native long Codec_getCodecIterator();
  public final static native long Codec_getExtensions();
  public final static native long Codec_getCodec__SWIG_0(String jarg1);
  public final static native long Codec_getCodec__SWIG_1(String jarg1, long jarg2);
  public final static native long Codec_encode(long jarg1, Codec jarg1_, long jarg2, long jarg3);
  public final static native void Codec_encodeToFile(long jarg1, Codec jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native long Codec_decode(long jarg1, Codec jarg1_, long jarg2);
  public final static native String Codec_getDataType(long jarg1, Codec jarg1_);
  public final static native boolean Codec_magicNumberMatch(long jarg1, Codec jarg1_, String jarg2, long jarg3);
  public final static native String Codec_magicNumberToFileExt(long jarg1, Codec jarg1_, String jarg2, long jarg3);
  public final static native int OGRE_SERIALIZER_VALIDATE_CHUNKSIZE_get();
  public final static native long new_Serializer();
  public final static native void delete_Serializer(long jarg1);
  public final static native void delete_ScriptLoader(long jarg1);
  public final static native long ScriptLoader_getScriptPatterns(long jarg1, ScriptLoader jarg1_);
  public final static native void ScriptLoader_parseScript(long jarg1, ScriptLoader jarg1_, long jarg2, String jarg3);
  public final static native float ScriptLoader_getLoadingOrder(long jarg1, ScriptLoader jarg1_);
  public final static native void FrameEvent_timeSinceLastEvent_set(long jarg1, FrameEvent jarg1_, float jarg2);
  public final static native float FrameEvent_timeSinceLastEvent_get(long jarg1, FrameEvent jarg1_);
  public final static native void FrameEvent_timeSinceLastFrame_set(long jarg1, FrameEvent jarg1_, float jarg2);
  public final static native float FrameEvent_timeSinceLastFrame_get(long jarg1, FrameEvent jarg1_);
  public final static native long new_FrameEvent();
  public final static native void delete_FrameEvent(long jarg1);
  public final static native boolean FrameListener_frameStarted(long jarg1, FrameListener jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean FrameListener_frameRenderingQueued(long jarg1, FrameListener jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean FrameListener_frameEnded(long jarg1, FrameListener jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native void delete_FrameListener(long jarg1);
  public final static native long new_FrameListener();
  public final static native void MovableObjectLodChangedEvent_movableObject_set(long jarg1, MovableObjectLodChangedEvent jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long MovableObjectLodChangedEvent_movableObject_get(long jarg1, MovableObjectLodChangedEvent jarg1_);
  public final static native void MovableObjectLodChangedEvent_camera_set(long jarg1, MovableObjectLodChangedEvent jarg1_, long jarg2, Camera jarg2_);
  public final static native long MovableObjectLodChangedEvent_camera_get(long jarg1, MovableObjectLodChangedEvent jarg1_);
  public final static native long new_MovableObjectLodChangedEvent();
  public final static native void delete_MovableObjectLodChangedEvent(long jarg1);
  public final static native void EntityMeshLodChangedEvent_entity_set(long jarg1, EntityMeshLodChangedEvent jarg1_, long jarg2, Entity jarg2_);
  public final static native long EntityMeshLodChangedEvent_entity_get(long jarg1, EntityMeshLodChangedEvent jarg1_);
  public final static native void EntityMeshLodChangedEvent_camera_set(long jarg1, EntityMeshLodChangedEvent jarg1_, long jarg2, Camera jarg2_);
  public final static native long EntityMeshLodChangedEvent_camera_get(long jarg1, EntityMeshLodChangedEvent jarg1_);
  public final static native void EntityMeshLodChangedEvent_lodValue_set(long jarg1, EntityMeshLodChangedEvent jarg1_, float jarg2);
  public final static native float EntityMeshLodChangedEvent_lodValue_get(long jarg1, EntityMeshLodChangedEvent jarg1_);
  public final static native void EntityMeshLodChangedEvent_previousLodIndex_set(long jarg1, EntityMeshLodChangedEvent jarg1_, int jarg2);
  public final static native int EntityMeshLodChangedEvent_previousLodIndex_get(long jarg1, EntityMeshLodChangedEvent jarg1_);
  public final static native void EntityMeshLodChangedEvent_newLodIndex_set(long jarg1, EntityMeshLodChangedEvent jarg1_, int jarg2);
  public final static native int EntityMeshLodChangedEvent_newLodIndex_get(long jarg1, EntityMeshLodChangedEvent jarg1_);
  public final static native long new_EntityMeshLodChangedEvent();
  public final static native void delete_EntityMeshLodChangedEvent(long jarg1);
  public final static native void EntityMaterialLodChangedEvent_subEntity_set(long jarg1, EntityMaterialLodChangedEvent jarg1_, long jarg2, SubEntity jarg2_);
  public final static native long EntityMaterialLodChangedEvent_subEntity_get(long jarg1, EntityMaterialLodChangedEvent jarg1_);
  public final static native void EntityMaterialLodChangedEvent_camera_set(long jarg1, EntityMaterialLodChangedEvent jarg1_, long jarg2, Camera jarg2_);
  public final static native long EntityMaterialLodChangedEvent_camera_get(long jarg1, EntityMaterialLodChangedEvent jarg1_);
  public final static native void EntityMaterialLodChangedEvent_lodValue_set(long jarg1, EntityMaterialLodChangedEvent jarg1_, float jarg2);
  public final static native float EntityMaterialLodChangedEvent_lodValue_get(long jarg1, EntityMaterialLodChangedEvent jarg1_);
  public final static native void EntityMaterialLodChangedEvent_previousLodIndex_set(long jarg1, EntityMaterialLodChangedEvent jarg1_, int jarg2);
  public final static native int EntityMaterialLodChangedEvent_previousLodIndex_get(long jarg1, EntityMaterialLodChangedEvent jarg1_);
  public final static native void EntityMaterialLodChangedEvent_newLodIndex_set(long jarg1, EntityMaterialLodChangedEvent jarg1_, int jarg2);
  public final static native int EntityMaterialLodChangedEvent_newLodIndex_get(long jarg1, EntityMaterialLodChangedEvent jarg1_);
  public final static native long new_EntityMaterialLodChangedEvent();
  public final static native void delete_EntityMaterialLodChangedEvent(long jarg1);
  public final static native void delete_LodListener(long jarg1);
  public final static native boolean LodListener_prequeueMovableObjectLodChanged(long jarg1, LodListener jarg1_, long jarg2, MovableObjectLodChangedEvent jarg2_);
  public final static native void LodListener_postqueueMovableObjectLodChanged(long jarg1, LodListener jarg1_, long jarg2, MovableObjectLodChangedEvent jarg2_);
  public final static native boolean LodListener_prequeueEntityMeshLodChanged(long jarg1, LodListener jarg1_, long jarg2, EntityMeshLodChangedEvent jarg2_);
  public final static native void LodListener_postqueueEntityMeshLodChanged(long jarg1, LodListener jarg1_, long jarg2, EntityMeshLodChangedEvent jarg2_);
  public final static native boolean LodListener_prequeueEntityMaterialLodChanged(long jarg1, LodListener jarg1_, long jarg2, EntityMaterialLodChangedEvent jarg2_);
  public final static native void LodListener_postqueueEntityMaterialLodChanged(long jarg1, LodListener jarg1_, long jarg2, EntityMaterialLodChangedEvent jarg2_);
  public final static native long new_LodListener();
  public final static native void delete_RenderObjectListener(long jarg1);
  public final static native void RenderObjectListener_notifyRenderSingleObject(long jarg1, RenderObjectListener jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, long jarg5, boolean jarg6);
  public final static native void delete_RenderQueueListener(long jarg1);
  public final static native void RenderQueueListener_preRenderQueues(long jarg1, RenderQueueListener jarg1_);
  public final static native void RenderQueueListener_postRenderQueues(long jarg1, RenderQueueListener jarg1_);
  public final static native void RenderQueueListener_renderQueueStarted(long jarg1, RenderQueueListener jarg1_, short jarg2, String jarg3, long jarg4);
  public final static native void RenderQueueListener_renderQueueEnded(long jarg1, RenderQueueListener jarg1_, short jarg2, String jarg3, long jarg4);
  public final static native long new_RenderQueueListener();
  public final static native void RenderTargetEvent_source_set(long jarg1, RenderTargetEvent jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native long RenderTargetEvent_source_get(long jarg1, RenderTargetEvent jarg1_);
  public final static native long new_RenderTargetEvent();
  public final static native void delete_RenderTargetEvent(long jarg1);
  public final static native void RenderTargetViewportEvent_source_set(long jarg1, RenderTargetViewportEvent jarg1_, long jarg2, Viewport jarg2_);
  public final static native long RenderTargetViewportEvent_source_get(long jarg1, RenderTargetViewportEvent jarg1_);
  public final static native long new_RenderTargetViewportEvent();
  public final static native void delete_RenderTargetViewportEvent(long jarg1);
  public final static native void delete_RenderTargetListener(long jarg1);
  public final static native void RenderTargetListener_preRenderTargetUpdate(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetEvent jarg2_);
  public final static native void RenderTargetListener_postRenderTargetUpdate(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetEvent jarg2_);
  public final static native void RenderTargetListener_preViewportUpdate(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native void RenderTargetListener_postViewportUpdate(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native void RenderTargetListener_viewportAdded(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native void RenderTargetListener_viewportRemoved(long jarg1, RenderTargetListener jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native long new_RenderTargetListener();
  public final static native long ColourValue_ZERO_get();
  public final static native long ColourValue_Black_get();
  public final static native long ColourValue_White_get();
  public final static native long ColourValue_Red_get();
  public final static native long ColourValue_Green_get();
  public final static native long ColourValue_Blue_get();
  public final static native long new_ColourValue__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_ColourValue__SWIG_1(float jarg1, float jarg2, float jarg3);
  public final static native long new_ColourValue__SWIG_2(float jarg1, float jarg2);
  public final static native long new_ColourValue__SWIG_3(float jarg1);
  public final static native long new_ColourValue__SWIG_4();
  public final static native void ColourValue_r_set(long jarg1, ColourValue jarg1_, float jarg2);
  public final static native float ColourValue_r_get(long jarg1, ColourValue jarg1_);
  public final static native void ColourValue_g_set(long jarg1, ColourValue jarg1_, float jarg2);
  public final static native float ColourValue_g_get(long jarg1, ColourValue jarg1_);
  public final static native void ColourValue_b_set(long jarg1, ColourValue jarg1_, float jarg2);
  public final static native float ColourValue_b_get(long jarg1, ColourValue jarg1_);
  public final static native void ColourValue_a_set(long jarg1, ColourValue jarg1_, float jarg2);
  public final static native float ColourValue_a_get(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_getAsRGBA(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_getAsARGB(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_getAsBGRA(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_getAsABGR(long jarg1, ColourValue jarg1_);
  public final static native void ColourValue_setAsRGBA(long jarg1, ColourValue jarg1_, long jarg2);
  public final static native void ColourValue_setAsARGB(long jarg1, ColourValue jarg1_, long jarg2);
  public final static native void ColourValue_setAsBGRA(long jarg1, ColourValue jarg1_, long jarg2);
  public final static native void ColourValue_setAsABGR(long jarg1, ColourValue jarg1_, long jarg2);
  public final static native void ColourValue_saturate(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_saturateCopy(long jarg1, ColourValue jarg1_);
  public final static native long ColourValue_ptr__SWIG_0(long jarg1, ColourValue jarg1_);
  public final static native void ColourValue_setHSB(long jarg1, ColourValue jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ColourValue_getHSB(long jarg1, ColourValue jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native String ColourValue_toString(long jarg1, ColourValue jarg1_);
  public final static native void delete_ColourValue(long jarg1);
  public final static native int PF_UNKNOWN_get();
  public final static native int PF_L8_get();
  public final static native int PF_BYTE_L_get();
  public final static native int PF_L16_get();
  public final static native int PF_SHORT_L_get();
  public final static native int PF_A8_get();
  public final static native int PF_BYTE_A_get();
  public final static native int PF_A4L4_get();
  public final static native int PF_BYTE_LA_get();
  public final static native int PF_R5G6B5_get();
  public final static native int PF_B5G6R5_get();
  public final static native int PF_R3G3B2_get();
  public final static native int PF_A4R4G4B4_get();
  public final static native int PF_A1R5G5B5_get();
  public final static native int PF_R8G8B8_get();
  public final static native int PF_B8G8R8_get();
  public final static native int PF_A8R8G8B8_get();
  public final static native int PF_A8B8G8R8_get();
  public final static native int PF_B8G8R8A8_get();
  public final static native int PF_R8G8B8A8_get();
  public final static native int PF_X8R8G8B8_get();
  public final static native int PF_X8B8G8R8_get();
  public final static native int PF_BYTE_RGB_get();
  public final static native int PF_BYTE_BGR_get();
  public final static native int PF_BYTE_BGRA_get();
  public final static native int PF_BYTE_RGBA_get();
  public final static native int PF_A2R10G10B10_get();
  public final static native int PF_A2B10G10R10_get();
  public final static native int PF_DXT1_get();
  public final static native int PF_DXT2_get();
  public final static native int PF_DXT3_get();
  public final static native int PF_DXT4_get();
  public final static native int PF_DXT5_get();
  public final static native int PF_FLOAT16_R_get();
  public final static native int PF_FLOAT16_RGB_get();
  public final static native int PF_FLOAT16_RGBA_get();
  public final static native int PF_FLOAT32_R_get();
  public final static native int PF_FLOAT32_RGB_get();
  public final static native int PF_FLOAT32_RGBA_get();
  public final static native int PF_FLOAT16_GR_get();
  public final static native int PF_FLOAT32_GR_get();
  public final static native int PF_DEPTH_get();
  public final static native int PF_SHORT_RGBA_get();
  public final static native int PF_SHORT_GR_get();
  public final static native int PF_SHORT_RGB_get();
  public final static native int PF_PVRTC_RGB2_get();
  public final static native int PF_PVRTC_RGBA2_get();
  public final static native int PF_PVRTC_RGB4_get();
  public final static native int PF_PVRTC_RGBA4_get();
  public final static native int PF_PVRTC2_2BPP_get();
  public final static native int PF_PVRTC2_4BPP_get();
  public final static native int PF_R11G11B10_FLOAT_get();
  public final static native int PF_R8_UINT_get();
  public final static native int PF_R8G8_UINT_get();
  public final static native int PF_R8G8B8_UINT_get();
  public final static native int PF_R8G8B8A8_UINT_get();
  public final static native int PF_R16_UINT_get();
  public final static native int PF_R16G16_UINT_get();
  public final static native int PF_R16G16B16_UINT_get();
  public final static native int PF_R16G16B16A16_UINT_get();
  public final static native int PF_R32_UINT_get();
  public final static native int PF_R32G32_UINT_get();
  public final static native int PF_R32G32B32_UINT_get();
  public final static native int PF_R32G32B32A32_UINT_get();
  public final static native int PF_R8_SINT_get();
  public final static native int PF_R8G8_SINT_get();
  public final static native int PF_R8G8B8_SINT_get();
  public final static native int PF_R8G8B8A8_SINT_get();
  public final static native int PF_R16_SINT_get();
  public final static native int PF_R16G16_SINT_get();
  public final static native int PF_R16G16B16_SINT_get();
  public final static native int PF_R16G16B16A16_SINT_get();
  public final static native int PF_R32_SINT_get();
  public final static native int PF_R32G32_SINT_get();
  public final static native int PF_R32G32B32_SINT_get();
  public final static native int PF_R32G32B32A32_SINT_get();
  public final static native int PF_R9G9B9E5_SHAREDEXP_get();
  public final static native int PF_BC4_UNORM_get();
  public final static native int PF_BC4_SNORM_get();
  public final static native int PF_BC5_UNORM_get();
  public final static native int PF_BC5_SNORM_get();
  public final static native int PF_BC6H_UF16_get();
  public final static native int PF_BC6H_SF16_get();
  public final static native int PF_BC7_UNORM_get();
  public final static native int PF_BC7_UNORM_SRGB_get();
  public final static native int PF_R8_get();
  public final static native int PF_RG8_get();
  public final static native int PF_R8_SNORM_get();
  public final static native int PF_R8G8_SNORM_get();
  public final static native int PF_R8G8B8_SNORM_get();
  public final static native int PF_R8G8B8A8_SNORM_get();
  public final static native int PF_R16_SNORM_get();
  public final static native int PF_R16G16_SNORM_get();
  public final static native int PF_R16G16B16_SNORM_get();
  public final static native int PF_R16G16B16A16_SNORM_get();
  public final static native int PF_ETC1_RGB8_get();
  public final static native int PF_ETC2_RGB8_get();
  public final static native int PF_ETC2_RGBA8_get();
  public final static native int PF_ETC2_RGB8A1_get();
  public final static native int PF_ATC_RGB_get();
  public final static native int PF_ATC_RGBA_EXPLICIT_ALPHA_get();
  public final static native int PF_ATC_RGBA_INTERPOLATED_ALPHA_get();
  public final static native int PF_ASTC_RGBA_4X4_LDR_get();
  public final static native int PF_ASTC_RGBA_5X4_LDR_get();
  public final static native int PF_ASTC_RGBA_5X5_LDR_get();
  public final static native int PF_ASTC_RGBA_6X5_LDR_get();
  public final static native int PF_ASTC_RGBA_6X6_LDR_get();
  public final static native int PF_ASTC_RGBA_8X5_LDR_get();
  public final static native int PF_ASTC_RGBA_8X6_LDR_get();
  public final static native int PF_ASTC_RGBA_8X8_LDR_get();
  public final static native int PF_ASTC_RGBA_10X5_LDR_get();
  public final static native int PF_ASTC_RGBA_10X6_LDR_get();
  public final static native int PF_ASTC_RGBA_10X8_LDR_get();
  public final static native int PF_ASTC_RGBA_10X10_LDR_get();
  public final static native int PF_ASTC_RGBA_12X10_LDR_get();
  public final static native int PF_ASTC_RGBA_12X12_LDR_get();
  public final static native int PF_COUNT_get();
  public final static native int PFF_HASALPHA_get();
  public final static native int PFF_COMPRESSED_get();
  public final static native int PFF_FLOAT_get();
  public final static native int PFF_DEPTH_get();
  public final static native int PFF_NATIVEENDIAN_get();
  public final static native int PFF_LUMINANCE_get();
  public final static native int PFF_INTEGER_get();
  public final static native int PCT_BYTE_get();
  public final static native int PCT_SHORT_get();
  public final static native int PCT_FLOAT16_get();
  public final static native int PCT_FLOAT32_get();
  public final static native int PCT_SINT_get();
  public final static native int PCT_UINT_get();
  public final static native int PCT_COUNT_get();
  public final static native long new_PixelBox__SWIG_0();
  public final static native void delete_PixelBox(long jarg1);
  public final static native long new_PixelBox__SWIG_1(long jarg1, Box jarg1_, int jarg2, long jarg3);
  public final static native long new_PixelBox__SWIG_2(long jarg1, Box jarg1_, int jarg2);
  public final static native long new_PixelBox__SWIG_3(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native long new_PixelBox__SWIG_4(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void PixelBox_data_set(long jarg1, PixelBox jarg1_, long jarg2);
  public final static native long PixelBox_data_get(long jarg1, PixelBox jarg1_);
  public final static native void PixelBox_format_set(long jarg1, PixelBox jarg1_, int jarg2);
  public final static native int PixelBox_format_get(long jarg1, PixelBox jarg1_);
  public final static native void PixelBox_rowPitch_set(long jarg1, PixelBox jarg1_, long jarg2);
  public final static native long PixelBox_rowPitch_get(long jarg1, PixelBox jarg1_);
  public final static native void PixelBox_slicePitch_set(long jarg1, PixelBox jarg1_, long jarg2);
  public final static native long PixelBox_slicePitch_get(long jarg1, PixelBox jarg1_);
  public final static native void PixelBox_setConsecutive(long jarg1, PixelBox jarg1_);
  public final static native long PixelBox_getRowSkip(long jarg1, PixelBox jarg1_);
  public final static native long PixelBox_getSliceSkip(long jarg1, PixelBox jarg1_);
  public final static native boolean PixelBox_isConsecutive(long jarg1, PixelBox jarg1_);
  public final static native long PixelBox_getConsecutiveSize(long jarg1, PixelBox jarg1_);
  public final static native long PixelBox_getSubVolume__SWIG_0(long jarg1, PixelBox jarg1_, long jarg2, Box jarg2_, boolean jarg3);
  public final static native long PixelBox_getSubVolume__SWIG_1(long jarg1, PixelBox jarg1_, long jarg2, Box jarg2_);
  public final static native long PixelBox_getTopLeftFrontPixelPtr(long jarg1, PixelBox jarg1_);
  public final static native long PixelBox_getColourAt(long jarg1, PixelBox jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void PixelBox_setColourAt(long jarg1, PixelBox jarg1_, long jarg2, ColourValue jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native long PixelUtil_getNumElemBytes(int jarg1);
  public final static native long PixelUtil_getNumElemBits(int jarg1);
  public final static native long PixelUtil_getMemorySize(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long PixelUtil_getFlags(int jarg1);
  public final static native boolean PixelUtil_hasAlpha(int jarg1);
  public final static native boolean PixelUtil_isFloatingPoint(int jarg1);
  public final static native boolean PixelUtil_isInteger(int jarg1);
  public final static native boolean PixelUtil_isCompressed(int jarg1);
  public final static native boolean PixelUtil_isDepth(int jarg1);
  public final static native boolean PixelUtil_isNativeEndian(int jarg1);
  public final static native boolean PixelUtil_isLuminance(int jarg1);
  public final static native void PixelUtil_getBitDepths(int jarg1, long jarg2);
  public final static native void PixelUtil_getBitMasks(int jarg1, long jarg2);
  public final static native void PixelUtil_getBitShifts(int jarg1, long jarg2);
  public final static native String PixelUtil_getFormatName(int jarg1);
  public final static native boolean PixelUtil_isAccessible(int jarg1);
  public final static native int PixelUtil_getComponentType(int jarg1);
  public final static native long PixelUtil_getComponentCount(int jarg1);
  public final static native int PixelUtil_getFormatFromName__SWIG_0(String jarg1, boolean jarg2, boolean jarg3);
  public final static native int PixelUtil_getFormatFromName__SWIG_1(String jarg1, boolean jarg2);
  public final static native int PixelUtil_getFormatFromName__SWIG_2(String jarg1);
  public final static native String PixelUtil_getBNFExpressionOfPixelFormats__SWIG_0(boolean jarg1);
  public final static native String PixelUtil_getBNFExpressionOfPixelFormats__SWIG_1();
  public final static native int PixelUtil_getFormatForBitDepths(int jarg1, int jarg2, int jarg3);
  public final static native void PixelUtil_packColour__SWIG_0(long jarg1, ColourValue jarg1_, int jarg2, long jarg3);
  public final static native void PixelUtil_packColour__SWIG_1(short jarg1, short jarg2, short jarg3, short jarg4, int jarg5, long jarg6);
  public final static native void PixelUtil_packColour__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, int jarg5, long jarg6);
  public final static native void PixelUtil_unpackColour__SWIG_0(long jarg1, ColourValue jarg1_, int jarg2, long jarg3);
  public final static native void PixelUtil_unpackColour__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void PixelUtil_unpackColour__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void PixelUtil_bulkPixelConversion__SWIG_0(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void PixelUtil_bulkPixelConversion__SWIG_1(long jarg1, PixelBox jarg1_, long jarg2, PixelBox jarg2_);
  public final static native void PixelUtil_bulkPixelVerticalFlip(long jarg1, PixelBox jarg1_);
  public final static native long new_PixelUtil();
  public final static native void delete_PixelUtil(long jarg1);
  public final static native void LayerBlendModeEx_blendType_set(long jarg1, LayerBlendModeEx jarg1_, int jarg2);
  public final static native int LayerBlendModeEx_blendType_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_operation_set(long jarg1, LayerBlendModeEx jarg1_, int jarg2);
  public final static native int LayerBlendModeEx_operation_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_source1_set(long jarg1, LayerBlendModeEx jarg1_, int jarg2);
  public final static native int LayerBlendModeEx_source1_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_source2_set(long jarg1, LayerBlendModeEx jarg1_, int jarg2);
  public final static native int LayerBlendModeEx_source2_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_colourArg1_set(long jarg1, LayerBlendModeEx jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long LayerBlendModeEx_colourArg1_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_colourArg2_set(long jarg1, LayerBlendModeEx jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long LayerBlendModeEx_colourArg2_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_alphaArg1_set(long jarg1, LayerBlendModeEx jarg1_, float jarg2);
  public final static native float LayerBlendModeEx_alphaArg1_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_alphaArg2_set(long jarg1, LayerBlendModeEx jarg1_, float jarg2);
  public final static native float LayerBlendModeEx_alphaArg2_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native void LayerBlendModeEx_factor_set(long jarg1, LayerBlendModeEx jarg1_, float jarg2);
  public final static native float LayerBlendModeEx_factor_get(long jarg1, LayerBlendModeEx jarg1_);
  public final static native long new_LayerBlendModeEx();
  public final static native void delete_LayerBlendModeEx(long jarg1);
  public final static native long new_Ray__SWIG_0();
  public final static native long new_Ray__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Ray_setOrigin(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Ray_getOrigin(long jarg1, Ray jarg1_);
  public final static native void Ray_setDirection(long jarg1, Ray jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Ray_getDirection(long jarg1, Ray jarg1_);
  public final static native long Ray_getPoint(long jarg1, Ray jarg1_, float jarg2);
  public final static native long Ray_intersects__SWIG_0(long jarg1, Ray jarg1_, long jarg2, Plane jarg2_);
  public final static native long Ray_intersects__SWIG_1(long jarg1, Ray jarg1_, long jarg2, PlaneBoundedVolume jarg2_);
  public final static native long Ray_intersects__SWIG_2(long jarg1, Ray jarg1_, long jarg2, Sphere jarg2_);
  public final static native long Ray_intersects__SWIG_3(long jarg1, Ray jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void delete_Ray(long jarg1);
  public final static native void SceneQuery_WorldFragment_fragmentType_set(long jarg1, SceneQuery.WorldFragment jarg1_, int jarg2);
  public final static native int SceneQuery_WorldFragment_fragmentType_get(long jarg1, SceneQuery.WorldFragment jarg1_);
  public final static native void SceneQuery_WorldFragment_singleIntersection_set(long jarg1, SceneQuery.WorldFragment jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long SceneQuery_WorldFragment_singleIntersection_get(long jarg1, SceneQuery.WorldFragment jarg1_);
  public final static native void SceneQuery_WorldFragment_planes_set(long jarg1, SceneQuery.WorldFragment jarg1_, long jarg2);
  public final static native long SceneQuery_WorldFragment_planes_get(long jarg1, SceneQuery.WorldFragment jarg1_);
  public final static native void SceneQuery_WorldFragment_geometry_set(long jarg1, SceneQuery.WorldFragment jarg1_, long jarg2);
  public final static native long SceneQuery_WorldFragment_geometry_get(long jarg1, SceneQuery.WorldFragment jarg1_);
  public final static native void SceneQuery_WorldFragment_renderOp_set(long jarg1, SceneQuery.WorldFragment jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native long SceneQuery_WorldFragment_renderOp_get(long jarg1, SceneQuery.WorldFragment jarg1_);
  public final static native long new_SceneQuery_WorldFragment();
  public final static native void delete_SceneQuery_WorldFragment(long jarg1);
  public final static native long new_SceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_SceneQuery(long jarg1);
  public final static native void SceneQuery_setQueryMask(long jarg1, SceneQuery jarg1_, long jarg2);
  public final static native long SceneQuery_getQueryMask(long jarg1, SceneQuery jarg1_);
  public final static native void SceneQuery_setQueryTypeMask(long jarg1, SceneQuery jarg1_, long jarg2);
  public final static native long SceneQuery_getQueryTypeMask(long jarg1, SceneQuery jarg1_);
  public final static native void SceneQuery_setWorldFragmentType(long jarg1, SceneQuery jarg1_, int jarg2);
  public final static native int SceneQuery_getWorldFragmentType(long jarg1, SceneQuery jarg1_);
  public final static native long SceneQuery_getSupportedWorldFragmentTypes(long jarg1, SceneQuery jarg1_);
  public final static native void delete_SceneQueryListener(long jarg1);
  public final static native boolean SceneQueryListener_queryResult__SWIG_0(long jarg1, SceneQueryListener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native boolean SceneQueryListener_queryResult__SWIG_1(long jarg1, SceneQueryListener jarg1_, long jarg2, SceneQuery.WorldFragment jarg2_);
  public final static native void SceneQueryResult_movables_set(long jarg1, SceneQueryResult jarg1_, long jarg2);
  public final static native long SceneQueryResult_movables_get(long jarg1, SceneQueryResult jarg1_);
  public final static native void SceneQueryResult_worldFragments_set(long jarg1, SceneQueryResult jarg1_, long jarg2);
  public final static native long SceneQueryResult_worldFragments_get(long jarg1, SceneQueryResult jarg1_);
  public final static native long new_SceneQueryResult();
  public final static native void delete_SceneQueryResult(long jarg1);
  public final static native void delete_RegionSceneQuery(long jarg1);
  public final static native long RegionSceneQuery_execute__SWIG_0(long jarg1, RegionSceneQuery jarg1_);
  public final static native void RegionSceneQuery_execute__SWIG_1(long jarg1, RegionSceneQuery jarg1_, long jarg2, SceneQueryListener jarg2_);
  public final static native long RegionSceneQuery_getLastResults(long jarg1, RegionSceneQuery jarg1_);
  public final static native void RegionSceneQuery_clearResults(long jarg1, RegionSceneQuery jarg1_);
  public final static native boolean RegionSceneQuery_queryResult__SWIG_0(long jarg1, RegionSceneQuery jarg1_, long jarg2, MovableObject jarg2_);
  public final static native boolean RegionSceneQuery_queryResult__SWIG_1(long jarg1, RegionSceneQuery jarg1_, long jarg2, SceneQuery.WorldFragment jarg2_);
  public final static native void delete_AxisAlignedBoxSceneQuery(long jarg1);
  public final static native void AxisAlignedBoxSceneQuery_setBox(long jarg1, AxisAlignedBoxSceneQuery jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long AxisAlignedBoxSceneQuery_getBox(long jarg1, AxisAlignedBoxSceneQuery jarg1_);
  public final static native void delete_SphereSceneQuery(long jarg1);
  public final static native void SphereSceneQuery_setSphere(long jarg1, SphereSceneQuery jarg1_, long jarg2, Sphere jarg2_);
  public final static native long SphereSceneQuery_getSphere(long jarg1, SphereSceneQuery jarg1_);
  public final static native void delete_PlaneBoundedVolumeListSceneQuery(long jarg1);
  public final static native void PlaneBoundedVolumeListSceneQuery_setVolumes(long jarg1, PlaneBoundedVolumeListSceneQuery jarg1_, long jarg2);
  public final static native long PlaneBoundedVolumeListSceneQuery_getVolumes(long jarg1, PlaneBoundedVolumeListSceneQuery jarg1_);
  public final static native void delete_RaySceneQueryListener(long jarg1);
  public final static native boolean RaySceneQueryListener_queryResult__SWIG_0(long jarg1, RaySceneQueryListener jarg1_, long jarg2, MovableObject jarg2_, float jarg3);
  public final static native boolean RaySceneQueryListener_queryResult__SWIG_1(long jarg1, RaySceneQueryListener jarg1_, long jarg2, SceneQuery.WorldFragment jarg2_, float jarg3);
  public final static native void RaySceneQueryResultEntry_distance_set(long jarg1, RaySceneQueryResultEntry jarg1_, float jarg2);
  public final static native float RaySceneQueryResultEntry_distance_get(long jarg1, RaySceneQueryResultEntry jarg1_);
  public final static native void RaySceneQueryResultEntry_movable_set(long jarg1, RaySceneQueryResultEntry jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long RaySceneQueryResultEntry_movable_get(long jarg1, RaySceneQueryResultEntry jarg1_);
  public final static native void RaySceneQueryResultEntry_worldFragment_set(long jarg1, RaySceneQueryResultEntry jarg1_, long jarg2, SceneQuery.WorldFragment jarg2_);
  public final static native long RaySceneQueryResultEntry_worldFragment_get(long jarg1, RaySceneQueryResultEntry jarg1_);
  public final static native long new_RaySceneQueryResultEntry();
  public final static native void delete_RaySceneQueryResultEntry(long jarg1);
  public final static native void delete_RaySceneQuery(long jarg1);
  public final static native void RaySceneQuery_setRay(long jarg1, RaySceneQuery jarg1_, long jarg2, Ray jarg2_);
  public final static native long RaySceneQuery_getRay(long jarg1, RaySceneQuery jarg1_);
  public final static native void RaySceneQuery_setSortByDistance__SWIG_0(long jarg1, RaySceneQuery jarg1_, boolean jarg2, int jarg3);
  public final static native void RaySceneQuery_setSortByDistance__SWIG_1(long jarg1, RaySceneQuery jarg1_, boolean jarg2);
  public final static native boolean RaySceneQuery_getSortByDistance(long jarg1, RaySceneQuery jarg1_);
  public final static native int RaySceneQuery_getMaxResults(long jarg1, RaySceneQuery jarg1_);
  public final static native long RaySceneQuery_execute__SWIG_0(long jarg1, RaySceneQuery jarg1_);
  public final static native void RaySceneQuery_execute__SWIG_1(long jarg1, RaySceneQuery jarg1_, long jarg2, RaySceneQueryListener jarg2_);
  public final static native long RaySceneQuery_getLastResults(long jarg1, RaySceneQuery jarg1_);
  public final static native void RaySceneQuery_clearResults(long jarg1, RaySceneQuery jarg1_);
  public final static native boolean RaySceneQuery_queryResult__SWIG_0(long jarg1, RaySceneQuery jarg1_, long jarg2, MovableObject jarg2_, float jarg3);
  public final static native boolean RaySceneQuery_queryResult__SWIG_1(long jarg1, RaySceneQuery jarg1_, long jarg2, SceneQuery.WorldFragment jarg2_, float jarg3);
  public final static native void delete_IntersectionSceneQueryListener(long jarg1);
  public final static native boolean IntersectionSceneQueryListener_queryResult__SWIG_0(long jarg1, IntersectionSceneQueryListener jarg1_, long jarg2, MovableObject jarg2_, long jarg3, MovableObject jarg3_);
  public final static native boolean IntersectionSceneQueryListener_queryResult__SWIG_1(long jarg1, IntersectionSceneQueryListener jarg1_, long jarg2, MovableObject jarg2_, long jarg3, SceneQuery.WorldFragment jarg3_);
  public final static native void IntersectionSceneQueryResult_movables2movables_set(long jarg1, IntersectionSceneQueryResult jarg1_, long jarg2);
  public final static native long IntersectionSceneQueryResult_movables2movables_get(long jarg1, IntersectionSceneQueryResult jarg1_);
  public final static native void IntersectionSceneQueryResult_movables2world_set(long jarg1, IntersectionSceneQueryResult jarg1_, long jarg2);
  public final static native long IntersectionSceneQueryResult_movables2world_get(long jarg1, IntersectionSceneQueryResult jarg1_);
  public final static native long new_IntersectionSceneQueryResult();
  public final static native void delete_IntersectionSceneQueryResult(long jarg1);
  public final static native void delete_IntersectionSceneQuery(long jarg1);
  public final static native long IntersectionSceneQuery_execute__SWIG_0(long jarg1, IntersectionSceneQuery jarg1_);
  public final static native void IntersectionSceneQuery_execute__SWIG_1(long jarg1, IntersectionSceneQuery jarg1_, long jarg2, IntersectionSceneQueryListener jarg2_);
  public final static native long IntersectionSceneQuery_getLastResults(long jarg1, IntersectionSceneQuery jarg1_);
  public final static native void IntersectionSceneQuery_clearResults(long jarg1, IntersectionSceneQuery jarg1_);
  public final static native boolean IntersectionSceneQuery_queryResult__SWIG_0(long jarg1, IntersectionSceneQuery jarg1_, long jarg2, MovableObject jarg2_, long jarg3, MovableObject jarg3_);
  public final static native boolean IntersectionSceneQuery_queryResult__SWIG_1(long jarg1, IntersectionSceneQuery jarg1_, long jarg2, MovableObject jarg2_, long jarg3, SceneQuery.WorldFragment jarg3_);
  public final static native long new_NameGenerator__SWIG_0(long jarg1, NameGenerator jarg1_);
  public final static native long new_NameGenerator__SWIG_1(String jarg1);
  public final static native String NameGenerator_generate(long jarg1, NameGenerator jarg1_);
  public final static native void NameGenerator_reset(long jarg1, NameGenerator jarg1_);
  public final static native void NameGenerator_setNext(long jarg1, NameGenerator jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger NameGenerator_getNext(long jarg1, NameGenerator jarg1_);
  public final static native void delete_NameGenerator(long jarg1);
  public final static native int CAPS_CATEGORY_SIZE_get();
  public final static native int OGRE_CAPS_BITSHIFT_get();
  public final static native int CAPS_CATEGORY_MASK_get();
  public final static native int CAPS_CATEGORY_COMMON_get();
  public final static native int CAPS_CATEGORY_COMMON_2_get();
  public final static native int CAPS_CATEGORY_D3D9_get();
  public final static native int CAPS_CATEGORY_GL_get();
  public final static native int CAPS_CATEGORY_COMMON_3_get();
  public final static native int CAPS_CATEGORY_COUNT_get();
  public final static native int RSC_AUTOMIPMAP_get();
  public final static native int RSC_BLENDING_get();
  public final static native int RSC_ANISOTROPY_get();
  public final static native int RSC_DOT3_get();
  public final static native int RSC_CUBEMAPPING_get();
  public final static native int RSC_HWSTENCIL_get();
  public final static native int RSC_VBO_get();
  public final static native int RSC_32BIT_INDEX_get();
  public final static native int RSC_VERTEX_PROGRAM_get();
  public final static native int RSC_FRAGMENT_PROGRAM_get();
  public final static native int RSC_SCISSOR_TEST_get();
  public final static native int RSC_TWO_SIDED_STENCIL_get();
  public final static native int RSC_STENCIL_WRAP_get();
  public final static native int RSC_HWOCCLUSION_get();
  public final static native int RSC_USER_CLIP_PLANES_get();
  public final static native int RSC_VERTEX_FORMAT_UBYTE4_get();
  public final static native int RSC_INFINITE_FAR_PLANE_get();
  public final static native int RSC_HWRENDER_TO_TEXTURE_get();
  public final static native int RSC_TEXTURE_FLOAT_get();
  public final static native int RSC_NON_POWER_OF_2_TEXTURES_get();
  public final static native int RSC_TEXTURE_3D_get();
  public final static native int RSC_POINT_SPRITES_get();
  public final static native int RSC_POINT_EXTENDED_PARAMETERS_get();
  public final static native int RSC_VERTEX_TEXTURE_FETCH_get();
  public final static native int RSC_MIPMAP_LOD_BIAS_get();
  public final static native int RSC_GEOMETRY_PROGRAM_get();
  public final static native int RSC_HWRENDER_TO_VERTEX_BUFFER_get();
  public final static native int RSC_TEXTURE_COMPRESSION_get();
  public final static native int RSC_TEXTURE_COMPRESSION_DXT_get();
  public final static native int RSC_TEXTURE_COMPRESSION_VTC_get();
  public final static native int RSC_TEXTURE_COMPRESSION_PVRTC_get();
  public final static native int RSC_TEXTURE_COMPRESSION_ATC_get();
  public final static native int RSC_TEXTURE_COMPRESSION_ETC1_get();
  public final static native int RSC_TEXTURE_COMPRESSION_ETC2_get();
  public final static native int RSC_TEXTURE_COMPRESSION_BC4_BC5_get();
  public final static native int RSC_TEXTURE_COMPRESSION_BC6H_BC7_get();
  public final static native int RSC_FIXED_FUNCTION_get();
  public final static native int RSC_MRT_DIFFERENT_BIT_DEPTHS_get();
  public final static native int RSC_ALPHA_TO_COVERAGE_get();
  public final static native int RSC_ADVANCED_BLEND_OPERATIONS_get();
  public final static native int RSC_RTT_SEPARATE_DEPTHBUFFER_get();
  public final static native int RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE_get();
  public final static native int RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL_get();
  public final static native int RSC_VERTEX_BUFFER_INSTANCE_DATA_get();
  public final static native int RSC_CAN_GET_COMPILED_SHADER_BUFFER_get();
  public final static native int RSC_SHADER_SUBROUTINE_get();
  public final static native int RSC_HWRENDER_TO_TEXTURE_3D_get();
  public final static native int RSC_TEXTURE_1D_get();
  public final static native int RSC_TESSELLATION_HULL_PROGRAM_get();
  public final static native int RSC_TESSELLATION_DOMAIN_PROGRAM_get();
  public final static native int RSC_COMPUTE_PROGRAM_get();
  public final static native int RSC_HWOCCLUSION_ASYNCHRONOUS_get();
  public final static native int RSC_ATOMIC_COUNTERS_get();
  public final static native int RSC_READ_BACK_AS_TEXTURE_get();
  public final static native int RSC_HW_GAMMA_get();
  public final static native int RSC_AUTOMIPMAP_COMPRESSED_get();
  public final static native int RSC_COMPLETE_TEXTURE_BINDING_get();
  public final static native int RSC_TEXTURE_COMPRESSION_ASTC_get();
  public final static native int RSC_PERSTAGECONSTANT_get();
  public final static native int RSC_GL1_5_NOVBO_get();
  public final static native int RSC_FBO_get();
  public final static native int RSC_FBO_ARB_get();
  public final static native int RSC_FBO_ATI_get();
  public final static native int RSC_PBUFFER_get();
  public final static native int RSC_GL1_5_NOHWOCCLUSION_get();
  public final static native int RSC_POINT_EXTENDED_PARAMETERS_ARB_get();
  public final static native int RSC_POINT_EXTENDED_PARAMETERS_EXT_get();
  public final static native int RSC_SEPARATE_SHADER_OBJECTS_get();
  public final static native int RSC_VAO_get();
  public final static native int RSC_GLSL_SSO_REDECLARE_get();
  public final static native int RSC_DEBUG_get();
  public final static native int RSC_MAPBUFFER_get();
  public final static native void DriverVersion_major_set(long jarg1, DriverVersion jarg1_, int jarg2);
  public final static native int DriverVersion_major_get(long jarg1, DriverVersion jarg1_);
  public final static native void DriverVersion_minor_set(long jarg1, DriverVersion jarg1_, int jarg2);
  public final static native int DriverVersion_minor_get(long jarg1, DriverVersion jarg1_);
  public final static native void DriverVersion_release_set(long jarg1, DriverVersion jarg1_, int jarg2);
  public final static native int DriverVersion_release_get(long jarg1, DriverVersion jarg1_);
  public final static native void DriverVersion_build_set(long jarg1, DriverVersion jarg1_, int jarg2);
  public final static native int DriverVersion_build_get(long jarg1, DriverVersion jarg1_);
  public final static native long new_DriverVersion();
  public final static native String DriverVersion_toString(long jarg1, DriverVersion jarg1_);
  public final static native void DriverVersion_fromString(long jarg1, DriverVersion jarg1_, String jarg2);
  public final static native void delete_DriverVersion(long jarg1);
  public final static native int GPU_UNKNOWN_get();
  public final static native int GPU_NVIDIA_get();
  public final static native int GPU_AMD_get();
  public final static native int GPU_INTEL_get();
  public final static native int GPU_S3_get();
  public final static native int GPU_MATROX_get();
  public final static native int GPU_3DLABS_get();
  public final static native int GPU_SIS_get();
  public final static native int GPU_IMAGINATION_TECHNOLOGIES_get();
  public final static native int GPU_APPLE_get();
  public final static native int GPU_NOKIA_get();
  public final static native int GPU_MS_SOFTWARE_get();
  public final static native int GPU_MS_WARP_get();
  public final static native int GPU_ARM_get();
  public final static native int GPU_QUALCOMM_get();
  public final static native int GPU_MOZILLA_get();
  public final static native int GPU_WEBKIT_get();
  public final static native int GPU_VENDOR_COUNT_get();
  public final static native long new_RenderSystemCapabilities();
  public final static native void RenderSystemCapabilities_setDriverVersion(long jarg1, RenderSystemCapabilities jarg1_, long jarg2, DriverVersion jarg2_);
  public final static native void RenderSystemCapabilities_parseDriverVersionFromString(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native long RenderSystemCapabilities_getDriverVersion(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getVendor(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setVendor(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_parseVendorFromString(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native int RenderSystemCapabilities_vendorFromString(String jarg1);
  public final static native String RenderSystemCapabilities_vendorToString(int jarg1);
  public final static native boolean RenderSystemCapabilities_isDriverOlderThanVersion(long jarg1, RenderSystemCapabilities jarg1_, long jarg2, DriverVersion jarg2_);
  public final static native void RenderSystemCapabilities_setNumWorldMatrices(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setNumTextureUnits(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setStencilBufferBitDepth(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setNumVertexBlendMatrices(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setNumMultiRenderTargets(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getNumWorldMatrices(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setNumVertexAttributes(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getNumVertexAttributes(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getNumTextureUnits(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getStencilBufferBitDepth(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getNumVertexBlendMatrices(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getNumMultiRenderTargets(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native boolean RenderSystemCapabilities_isCapabilityRenderSystemSpecific(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setCapability(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_unsetCapability(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native boolean RenderSystemCapabilities_hasCapability(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_addShaderProfile(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native void RenderSystemCapabilities_removeShaderProfile(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native boolean RenderSystemCapabilities_isShaderProfileSupported(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native long RenderSystemCapabilities_getSupportedShaderProfiles(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getVertexProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getVertexProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getVertexProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getGeometryProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getGeometryProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getGeometryProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getFragmentProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getFragmentProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getFragmentProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setDeviceName(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native String RenderSystemCapabilities_getDeviceName(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setVertexProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setVertexProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setVertexProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setGeometryProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setGeometryProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setGeometryProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setFragmentProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setFragmentProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setFragmentProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setMaxPointSize(long jarg1, RenderSystemCapabilities jarg1_, float jarg2);
  public final static native float RenderSystemCapabilities_getMaxPointSize(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setNonPOW2TexturesLimited(long jarg1, RenderSystemCapabilities jarg1_, boolean jarg2);
  public final static native boolean RenderSystemCapabilities_getNonPOW2TexturesLimited(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setMaxSupportedAnisotropy(long jarg1, RenderSystemCapabilities jarg1_, float jarg2);
  public final static native float RenderSystemCapabilities_getMaxSupportedAnisotropy(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setNumVertexTextureUnits(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getNumVertexTextureUnits(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setVertexTextureUnitsShared(long jarg1, RenderSystemCapabilities jarg1_, boolean jarg2);
  public final static native boolean RenderSystemCapabilities_getVertexTextureUnitsShared(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setGeometryProgramNumOutputVertices(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getGeometryProgramNumOutputVertices(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native String RenderSystemCapabilities_getRenderSystemName(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setRenderSystemName(long jarg1, RenderSystemCapabilities jarg1_, String jarg2);
  public final static native void RenderSystemCapabilities_setCategoryRelevant(long jarg1, RenderSystemCapabilities jarg1_, int jarg2, boolean jarg3);
  public final static native boolean RenderSystemCapabilities_isCategoryRelevant(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_log(long jarg1, RenderSystemCapabilities jarg1_, long jarg2, Log jarg2_);
  public final static native void RenderSystemCapabilities_setTessellationHullProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setTessellationHullProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setTessellationHullProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getTessellationHullProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getTessellationHullProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getTessellationHullProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setTessellationDomainProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setTessellationDomainProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setTessellationDomainProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getTessellationDomainProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getTessellationDomainProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getTessellationDomainProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void RenderSystemCapabilities_setComputeProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setComputeProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native void RenderSystemCapabilities_setComputeProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_, int jarg2);
  public final static native int RenderSystemCapabilities_getComputeProgramConstantFloatCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getComputeProgramConstantIntCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native int RenderSystemCapabilities_getComputeProgramConstantBoolCount(long jarg1, RenderSystemCapabilities jarg1_);
  public final static native void delete_RenderSystemCapabilities(long jarg1);
  public final static native int BCT_FLOAT_get();
  public final static native int BCT_INT_get();
  public final static native int BCT_DOUBLE_get();
  public final static native int BCT_UINT_get();
  public final static native int BCT_BOOL_get();
  public final static native int BCT_SAMPLER_get();
  public final static native int BCT_SUBROUTINE_get();
  public final static native int BCT_UNKNOWN_get();
  public final static native int GCT_FLOAT1_get();
  public final static native int GCT_FLOAT2_get();
  public final static native int GCT_FLOAT3_get();
  public final static native int GCT_FLOAT4_get();
  public final static native int GCT_SAMPLER1D_get();
  public final static native int GCT_SAMPLER2D_get();
  public final static native int GCT_SAMPLER3D_get();
  public final static native int GCT_SAMPLERCUBE_get();
  public final static native int GCT_SAMPLERRECT_get();
  public final static native int GCT_SAMPLER1DSHADOW_get();
  public final static native int GCT_SAMPLER2DSHADOW_get();
  public final static native int GCT_SAMPLER2DARRAY_get();
  public final static native int GCT_MATRIX_2X2_get();
  public final static native int GCT_MATRIX_2X3_get();
  public final static native int GCT_MATRIX_2X4_get();
  public final static native int GCT_MATRIX_3X2_get();
  public final static native int GCT_MATRIX_3X3_get();
  public final static native int GCT_MATRIX_3X4_get();
  public final static native int GCT_MATRIX_4X2_get();
  public final static native int GCT_MATRIX_4X3_get();
  public final static native int GCT_MATRIX_4X4_get();
  public final static native int GCT_INT1_get();
  public final static native int GCT_INT2_get();
  public final static native int GCT_INT3_get();
  public final static native int GCT_INT4_get();
  public final static native int GCT_SUBROUTINE_get();
  public final static native int GCT_DOUBLE1_get();
  public final static native int GCT_DOUBLE2_get();
  public final static native int GCT_DOUBLE3_get();
  public final static native int GCT_DOUBLE4_get();
  public final static native int GCT_MATRIX_DOUBLE_2X2_get();
  public final static native int GCT_MATRIX_DOUBLE_2X3_get();
  public final static native int GCT_MATRIX_DOUBLE_2X4_get();
  public final static native int GCT_MATRIX_DOUBLE_3X2_get();
  public final static native int GCT_MATRIX_DOUBLE_3X3_get();
  public final static native int GCT_MATRIX_DOUBLE_3X4_get();
  public final static native int GCT_MATRIX_DOUBLE_4X2_get();
  public final static native int GCT_MATRIX_DOUBLE_4X3_get();
  public final static native int GCT_MATRIX_DOUBLE_4X4_get();
  public final static native int GCT_UINT1_get();
  public final static native int GCT_UINT2_get();
  public final static native int GCT_UINT3_get();
  public final static native int GCT_UINT4_get();
  public final static native int GCT_BOOL1_get();
  public final static native int GCT_BOOL2_get();
  public final static native int GCT_BOOL3_get();
  public final static native int GCT_BOOL4_get();
  public final static native int GCT_SAMPLER_WRAPPER1D_get();
  public final static native int GCT_SAMPLER_WRAPPER2D_get();
  public final static native int GCT_SAMPLER_WRAPPER3D_get();
  public final static native int GCT_SAMPLER_WRAPPERCUBE_get();
  public final static native int GCT_SAMPLER_STATE_get();
  public final static native int GCT_UNKNOWN_get();
  public final static native int GPV_GLOBAL_get();
  public final static native int GPV_PER_OBJECT_get();
  public final static native int GPV_LIGHTS_get();
  public final static native int GPV_PASS_ITERATION_NUMBER_get();
  public final static native int GPV_ALL_get();
  public final static native void GpuConstantDefinition_constType_set(long jarg1, GpuConstantDefinition jarg1_, int jarg2);
  public final static native int GpuConstantDefinition_constType_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native void GpuConstantDefinition_physicalIndex_set(long jarg1, GpuConstantDefinition jarg1_, long jarg2);
  public final static native long GpuConstantDefinition_physicalIndex_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native void GpuConstantDefinition_logicalIndex_set(long jarg1, GpuConstantDefinition jarg1_, long jarg2);
  public final static native long GpuConstantDefinition_logicalIndex_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native void GpuConstantDefinition_elementSize_set(long jarg1, GpuConstantDefinition jarg1_, long jarg2);
  public final static native long GpuConstantDefinition_elementSize_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native void GpuConstantDefinition_arraySize_set(long jarg1, GpuConstantDefinition jarg1_, long jarg2);
  public final static native long GpuConstantDefinition_arraySize_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native void GpuConstantDefinition_variability_set(long jarg1, GpuConstantDefinition jarg1_, int jarg2);
  public final static native int GpuConstantDefinition_variability_get(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isFloat__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isFloat__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isDouble__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isDouble__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isInt__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isInt__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isUnsignedInt__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isUnsignedInt__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isBool__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isBool__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isSampler__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isSampler__SWIG_1(int jarg1);
  public final static native boolean GpuConstantDefinition_isSubroutine__SWIG_0(long jarg1, GpuConstantDefinition jarg1_);
  public final static native boolean GpuConstantDefinition_isSubroutine__SWIG_1(int jarg1);
  public final static native int GpuConstantDefinition_getBaseType(int jarg1);
  public final static native long GpuConstantDefinition_getElementSize(int jarg1, boolean jarg2);
  public final static native long new_GpuConstantDefinition();
  public final static native void delete_GpuConstantDefinition(long jarg1);
  public final static native void GpuNamedConstants_floatBufferSize_set(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_floatBufferSize_get(long jarg1, GpuNamedConstants jarg1_);
  public final static native void GpuNamedConstants_doubleBufferSize_set(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_doubleBufferSize_get(long jarg1, GpuNamedConstants jarg1_);
  public final static native void GpuNamedConstants_intBufferSize_set(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_intBufferSize_get(long jarg1, GpuNamedConstants jarg1_);
  public final static native void GpuNamedConstants_uintBufferSize_set(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_uintBufferSize_get(long jarg1, GpuNamedConstants jarg1_);
  public final static native void GpuNamedConstants_map_set(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_map_get(long jarg1, GpuNamedConstants jarg1_);
  public final static native long new_GpuNamedConstants();
  public final static native void GpuNamedConstants_generateConstantDefinitionArrayEntries(long jarg1, GpuNamedConstants jarg1_, String jarg2, long jarg3, GpuConstantDefinition jarg3_);
  public final static native boolean GpuNamedConstants_getGenerateAllConstantDefinitionArrayEntries();
  public final static native void GpuNamedConstants_setGenerateAllConstantDefinitionArrayEntries(boolean jarg1);
  public final static native void GpuNamedConstants_save(long jarg1, GpuNamedConstants jarg1_, String jarg2);
  public final static native void GpuNamedConstants_load(long jarg1, GpuNamedConstants jarg1_, long jarg2);
  public final static native long GpuNamedConstants_calculateSize(long jarg1, GpuNamedConstants jarg1_);
  public final static native void delete_GpuNamedConstants(long jarg1);
  public final static native long new_GpuNamedConstantsSerializer();
  public final static native void delete_GpuNamedConstantsSerializer(long jarg1);
  public final static native void GpuNamedConstantsSerializer_exportNamedConstants__SWIG_0(long jarg1, GpuNamedConstantsSerializer jarg1_, long jarg2, GpuNamedConstants jarg2_, String jarg3, int jarg4);
  public final static native void GpuNamedConstantsSerializer_exportNamedConstants__SWIG_1(long jarg1, GpuNamedConstantsSerializer jarg1_, long jarg2, GpuNamedConstants jarg2_, String jarg3);
  public final static native void GpuNamedConstantsSerializer_exportNamedConstants__SWIG_2(long jarg1, GpuNamedConstantsSerializer jarg1_, long jarg2, GpuNamedConstants jarg2_, long jarg3, int jarg4);
  public final static native void GpuNamedConstantsSerializer_exportNamedConstants__SWIG_3(long jarg1, GpuNamedConstantsSerializer jarg1_, long jarg2, GpuNamedConstants jarg2_, long jarg3);
  public final static native void GpuNamedConstantsSerializer_importNamedConstants(long jarg1, GpuNamedConstantsSerializer jarg1_, long jarg2, long jarg3, GpuNamedConstants jarg3_);
  public final static native void GpuLogicalIndexUse_physicalIndex_set(long jarg1, GpuLogicalIndexUse jarg1_, long jarg2);
  public final static native long GpuLogicalIndexUse_physicalIndex_get(long jarg1, GpuLogicalIndexUse jarg1_);
  public final static native void GpuLogicalIndexUse_currentSize_set(long jarg1, GpuLogicalIndexUse jarg1_, long jarg2);
  public final static native long GpuLogicalIndexUse_currentSize_get(long jarg1, GpuLogicalIndexUse jarg1_);
  public final static native void GpuLogicalIndexUse_variability_set(long jarg1, GpuLogicalIndexUse jarg1_, int jarg2);
  public final static native int GpuLogicalIndexUse_variability_get(long jarg1, GpuLogicalIndexUse jarg1_);
  public final static native long new_GpuLogicalIndexUse__SWIG_0();
  public final static native long new_GpuLogicalIndexUse__SWIG_1(long jarg1, long jarg2, int jarg3);
  public final static native void delete_GpuLogicalIndexUse(long jarg1);
  public final static native void GpuLogicalBufferStruct_map_set(long jarg1, GpuLogicalBufferStruct jarg1_, long jarg2);
  public final static native long GpuLogicalBufferStruct_map_get(long jarg1, GpuLogicalBufferStruct jarg1_);
  public final static native void GpuLogicalBufferStruct_bufferSize_set(long jarg1, GpuLogicalBufferStruct jarg1_, long jarg2);
  public final static native long GpuLogicalBufferStruct_bufferSize_get(long jarg1, GpuLogicalBufferStruct jarg1_);
  public final static native long new_GpuLogicalBufferStruct();
  public final static native void delete_GpuLogicalBufferStruct(long jarg1);
  public final static native long new_GpuSharedParameters(String jarg1);
  public final static native String GpuSharedParameters_getName(long jarg1, GpuSharedParameters jarg1_);
  public final static native void GpuSharedParameters_addConstantDefinition__SWIG_0(long jarg1, GpuSharedParameters jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void GpuSharedParameters_addConstantDefinition__SWIG_1(long jarg1, GpuSharedParameters jarg1_, String jarg2, int jarg3);
  public final static native void GpuSharedParameters_removeConstantDefinition(long jarg1, GpuSharedParameters jarg1_, String jarg2);
  public final static native void GpuSharedParameters_removeAllConstantDefinitions(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getVersion(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_calculateSize(long jarg1, GpuSharedParameters jarg1_);
  public final static native boolean GpuSharedParameters_isDirty(long jarg1, GpuSharedParameters jarg1_);
  public final static native void GpuSharedParameters__markClean(long jarg1, GpuSharedParameters jarg1_);
  public final static native void GpuSharedParameters__markDirty(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getFrameLastUpdated(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getConstantDefinitionIterator(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getConstantDefinition(long jarg1, GpuSharedParameters jarg1_, String jarg2);
  public final static native long GpuSharedParameters_getConstantDefinitions(long jarg1, GpuSharedParameters jarg1_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_0(long jarg1, GpuSharedParameters jarg1_, String jarg2, float jarg3);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_1(long jarg1, GpuSharedParameters jarg1_, String jarg2, int jarg3);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_2(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_3(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, Vector4 jarg3_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_4(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, Vector3 jarg3_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_5(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, Vector2 jarg3_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_6(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_7(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, Matrix4 jarg3_, long jarg4);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_8(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_9(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_10(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, ColourValue jarg3_);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_11(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuSharedParameters_setNamedConstant__SWIG_12(long jarg1, GpuSharedParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long GpuSharedParameters_getFloatPointer__SWIG_0(long jarg1, GpuSharedParameters jarg1_, long jarg2);
  public final static native long GpuSharedParameters_getDoublePointer__SWIG_0(long jarg1, GpuSharedParameters jarg1_, long jarg2);
  public final static native long GpuSharedParameters_getIntPointer__SWIG_0(long jarg1, GpuSharedParameters jarg1_, long jarg2);
  public final static native long GpuSharedParameters_getUnsignedIntPointer__SWIG_0(long jarg1, GpuSharedParameters jarg1_, long jarg2);
  public final static native long GpuSharedParameters_getFloatConstantList(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getDoubleConstantList(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getIntConstantList(long jarg1, GpuSharedParameters jarg1_);
  public final static native long GpuSharedParameters_getUnsignedIntConstantList(long jarg1, GpuSharedParameters jarg1_);
  public final static native void GpuSharedParameters__setRenderSystemData(long jarg1, GpuSharedParameters jarg1_, long jarg2, Any jarg2_);
  public final static native long GpuSharedParameters__getRenderSystemData(long jarg1, GpuSharedParameters jarg1_);
  public final static native void delete_GpuSharedParameters(long jarg1);
  public final static native long new_GpuSharedParametersUsage(long jarg1, long jarg2, GpuProgramParameters jarg2_);
  public final static native void GpuSharedParametersUsage__copySharedParamsToTargetParams(long jarg1, GpuSharedParametersUsage jarg1_);
  public final static native String GpuSharedParametersUsage_getName(long jarg1, GpuSharedParametersUsage jarg1_);
  public final static native long GpuSharedParametersUsage_getSharedParams(long jarg1, GpuSharedParametersUsage jarg1_);
  public final static native long GpuSharedParametersUsage_getTargetParams(long jarg1, GpuSharedParametersUsage jarg1_);
  public final static native void GpuSharedParametersUsage__setRenderSystemData(long jarg1, GpuSharedParametersUsage jarg1_, long jarg2, Any jarg2_);
  public final static native long GpuSharedParametersUsage__getRenderSystemData(long jarg1, GpuSharedParametersUsage jarg1_);
  public final static native void delete_GpuSharedParametersUsage(long jarg1);
  public final static native int GpuProgramParameters_ACT_UNKNOWN_get();
  public final static native void GpuProgramParameters_AutoConstantDefinition_acType_set(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_, int jarg2);
  public final static native int GpuProgramParameters_AutoConstantDefinition_acType_get(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_);
  public final static native void GpuProgramParameters_AutoConstantDefinition_name_set(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_, String jarg2);
  public final static native String GpuProgramParameters_AutoConstantDefinition_name_get(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_);
  public final static native void GpuProgramParameters_AutoConstantDefinition_elementCount_set(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_, long jarg2);
  public final static native long GpuProgramParameters_AutoConstantDefinition_elementCount_get(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_);
  public final static native void GpuProgramParameters_AutoConstantDefinition_elementType_set(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_, int jarg2);
  public final static native int GpuProgramParameters_AutoConstantDefinition_elementType_get(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_);
  public final static native void GpuProgramParameters_AutoConstantDefinition_dataType_set(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_, int jarg2);
  public final static native int GpuProgramParameters_AutoConstantDefinition_dataType_get(long jarg1, GpuProgramParameters.AutoConstantDefinition jarg1_);
  public final static native long new_GpuProgramParameters_AutoConstantDefinition(int jarg1, String jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void delete_GpuProgramParameters_AutoConstantDefinition(long jarg1);
  public final static native void GpuProgramParameters_AutoConstantEntry_paramType_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, int jarg2);
  public final static native int GpuProgramParameters_AutoConstantEntry_paramType_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native void GpuProgramParameters_AutoConstantEntry_physicalIndex_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, long jarg2);
  public final static native long GpuProgramParameters_AutoConstantEntry_physicalIndex_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native void GpuProgramParameters_AutoConstantEntry_elementCount_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, long jarg2);
  public final static native long GpuProgramParameters_AutoConstantEntry_elementCount_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native void GpuProgramParameters_AutoConstantEntry_data_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, long jarg2);
  public final static native long GpuProgramParameters_AutoConstantEntry_data_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native void GpuProgramParameters_AutoConstantEntry_fData_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, float jarg2);
  public final static native float GpuProgramParameters_AutoConstantEntry_fData_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native void GpuProgramParameters_AutoConstantEntry_variability_set(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_, int jarg2);
  public final static native int GpuProgramParameters_AutoConstantEntry_variability_get(long jarg1, GpuProgramParameters.AutoConstantEntry jarg1_);
  public final static native long new_GpuProgramParameters_AutoConstantEntry__SWIG_0(int jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native long new_GpuProgramParameters_AutoConstantEntry__SWIG_1(int jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long new_GpuProgramParameters_AutoConstantEntry__SWIG_2(int jarg1, long jarg2, float jarg3, int jarg4, long jarg5);
  public final static native long new_GpuProgramParameters_AutoConstantEntry__SWIG_3(int jarg1, long jarg2, float jarg3, int jarg4);
  public final static native void delete_GpuProgramParameters_AutoConstantEntry(long jarg1);
  public final static native long new_GpuProgramParameters__SWIG_0();
  public final static native void delete_GpuProgramParameters(long jarg1);
  public final static native long new_GpuProgramParameters__SWIG_1(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters__setNamedConstants(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native void GpuProgramParameters__setLogicalIndexes(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native boolean GpuProgramParameters_hasNamedParameters(long jarg1, GpuProgramParameters jarg1_);
  public final static native boolean GpuProgramParameters_hasLogicalIndexedParameters(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters_setConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector4 jarg3_);
  public final static native void GpuProgramParameters_setConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, float jarg3);
  public final static native void GpuProgramParameters_setConstant__SWIG_2(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector3 jarg3_);
  public final static native void GpuProgramParameters_setConstant__SWIG_3(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector2 jarg3_);
  public final static native void GpuProgramParameters_setConstant__SWIG_4(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void GpuProgramParameters_setConstant__SWIG_5(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Matrix4 jarg3_, long jarg4);
  public final static native void GpuProgramParameters_setConstant__SWIG_6(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void GpuProgramParameters_setConstant__SWIG_7(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setConstant__SWIG_8(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setConstant__SWIG_9(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setConstant__SWIG_10(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstants__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstants__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstants__SWIG_2(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstants__SWIG_3(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__readRawConstants__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__readRawConstants__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector4 jarg3_, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector4 jarg3_);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_2(long jarg1, GpuProgramParameters jarg1_, long jarg2, float jarg3);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_3(long jarg1, GpuProgramParameters jarg1_, long jarg2, float jarg3, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_4(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_5(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_6(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector3 jarg3_);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_7(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Vector2 jarg3_);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_8(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, Matrix4 jarg3_, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_10(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, ColourValue jarg3_, long jarg4);
  public final static native void GpuProgramParameters__writeRawConstant__SWIG_11(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native long GpuProgramParameters_getConstantDefinitionIterator(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getConstantDefinition(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native long GpuProgramParameters_getConstantDefinitions(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getFloatLogicalBufferStruct(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getDoubleLogicalBufferStruct(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getIntLogicalBufferStruct(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getUnsignedIntLogicalBufferStruct(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getBoolLogicalBufferStruct(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getFloatLogicalIndexForPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getDoubleLogicalIndexForPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getIntLogicalIndexForPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getUnsignedIntLogicalIndexForPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getBoolLogicalIndexForPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getFloatConstantList(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getFloatPointer__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getDoubleConstantList(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getDoublePointer__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getIntConstantList(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getIntPointer__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getUnsignedIntConstantList(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getUnsignedIntPointer__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_getAutoConstantList(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters_setAutoConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native void GpuProgramParameters_setAutoConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3);
  public final static native void GpuProgramParameters_setAutoConstantReal(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, float jarg4);
  public final static native void GpuProgramParameters_setAutoConstant__SWIG_2(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void GpuProgramParameters__setRawAutoConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void GpuProgramParameters__setRawAutoConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void GpuProgramParameters__setRawAutoConstantReal__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, float jarg4, int jarg5, long jarg6);
  public final static native void GpuProgramParameters__setRawAutoConstantReal__SWIG_1(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3, float jarg4, int jarg5);
  public final static native void GpuProgramParameters_clearAutoConstant(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native void GpuProgramParameters_setConstantFromTime(long jarg1, GpuProgramParameters jarg1_, long jarg2, float jarg3);
  public final static native void GpuProgramParameters_clearAutoConstants(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getAutoConstants(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getAutoConstantCount(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native boolean GpuProgramParameters_hasAutoConstants(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_findFloatAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_findDoubleAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_findIntAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_findUnsignedIntAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters_findAutoConstantEntry(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native long GpuProgramParameters__findRawAutoConstantEntryFloat(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters__findRawAutoConstantEntryDouble(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters__findRawAutoConstantEntryInt(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters__findRawAutoConstantEntryUnsignedInt(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native long GpuProgramParameters__findRawAutoConstantEntryBool(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native void GpuProgramParameters__updateAutoParams(long jarg1, GpuProgramParameters jarg1_, long jarg2, int jarg3);
  public final static native void GpuProgramParameters_setIgnoreMissingParams(long jarg1, GpuProgramParameters jarg1_, boolean jarg2);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, String jarg2, float jarg3);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, String jarg2, int jarg3);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_2(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_3(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, Vector4 jarg3_);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_4(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, Vector3 jarg3_);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_5(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, Vector2 jarg3_);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_6(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_7(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, Matrix4 jarg3_, long jarg4);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_8(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, ColourValue jarg3_);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_9(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_10(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_11(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_12(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_13(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_14(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_15(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void GpuProgramParameters_setNamedConstant__SWIG_16(long jarg1, GpuProgramParameters jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void GpuProgramParameters_setNamedAutoConstant__SWIG_0(long jarg1, GpuProgramParameters jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void GpuProgramParameters_setNamedAutoConstant__SWIG_1(long jarg1, GpuProgramParameters jarg1_, String jarg2, int jarg3);
  public final static native void GpuProgramParameters_setNamedAutoConstantReal(long jarg1, GpuProgramParameters jarg1_, String jarg2, int jarg3, float jarg4);
  public final static native void GpuProgramParameters_setNamedAutoConstant__SWIG_2(long jarg1, GpuProgramParameters jarg1_, String jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void GpuProgramParameters_setNamedConstantFromTime(long jarg1, GpuProgramParameters jarg1_, String jarg2, float jarg3);
  public final static native void GpuProgramParameters_clearNamedAutoConstant(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native long GpuProgramParameters__findNamedConstantDefinition__SWIG_0(long jarg1, GpuProgramParameters jarg1_, String jarg2, boolean jarg3);
  public final static native long GpuProgramParameters__findNamedConstantDefinition__SWIG_1(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native long GpuProgramParameters__getFloatConstantPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long GpuProgramParameters__getDoubleConstantPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long GpuProgramParameters__getIntConstantPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long GpuProgramParameters__getUnsignedIntConstantPhysicalIndex(long jarg1, GpuProgramParameters jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void GpuProgramParameters_setTransposeMatrices(long jarg1, GpuProgramParameters jarg1_, boolean jarg2);
  public final static native boolean GpuProgramParameters_getTransposeMatrices(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters_copyConstantsFrom(long jarg1, GpuProgramParameters jarg1_, long jarg2, GpuProgramParameters jarg2_);
  public final static native void GpuProgramParameters_copyMatchingNamedConstantsFrom(long jarg1, GpuProgramParameters jarg1_, long jarg2, GpuProgramParameters jarg2_);
  public final static native long GpuProgramParameters_getAutoConstantDefinition__SWIG_0(String jarg1);
  public final static native long GpuProgramParameters_getAutoConstantDefinition__SWIG_1(long jarg1);
  public final static native long GpuProgramParameters_getNumAutoConstantDefinitions();
  public final static native void GpuProgramParameters_incPassIterationNumber(long jarg1, GpuProgramParameters jarg1_);
  public final static native boolean GpuProgramParameters_hasPassIterationNumber(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getPassIterationNumberIndex(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters_addSharedParameters__SWIG_0(long jarg1, GpuProgramParameters jarg1_, long jarg2);
  public final static native void GpuProgramParameters_addSharedParameters__SWIG_1(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native boolean GpuProgramParameters_isUsingSharedParameters(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native void GpuProgramParameters_removeSharedParameters(long jarg1, GpuProgramParameters jarg1_, String jarg2);
  public final static native void GpuProgramParameters_removeAllSharedParameters(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_getSharedParameters(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters__setRenderSystemData(long jarg1, GpuProgramParameters jarg1_, long jarg2, Any jarg2_);
  public final static native long GpuProgramParameters__getRenderSystemData(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters__copySharedParams(long jarg1, GpuProgramParameters jarg1_);
  public final static native long GpuProgramParameters_calculateSize(long jarg1, GpuProgramParameters jarg1_);
  public final static native void GpuProgramParameters_setNamedSubroutine(long jarg1, GpuProgramParameters jarg1_, String jarg2, String jarg3);
  public final static native void GpuProgramParameters_setSubroutine(long jarg1, GpuProgramParameters jarg1_, long jarg2, String jarg3);
  public final static native long GpuProgramParameters_getSubroutineMap(long jarg1, GpuProgramParameters jarg1_);
  public final static native int IF_COMPRESSED_get();
  public final static native int IF_CUBEMAP_get();
  public final static native int IF_3D_TEXTURE_get();
  public final static native long new_Image__SWIG_0();
  public final static native long new_Image__SWIG_1(long jarg1, Image jarg1_);
  public final static native void delete_Image(long jarg1);
  public final static native long Image_flipAroundY(long jarg1, Image jarg1_);
  public final static native long Image_flipAroundX(long jarg1, Image jarg1_);
  public final static native long Image_loadDynamicImage__SWIG_0(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, boolean jarg7, long jarg8, long jarg9);
  public final static native long Image_loadDynamicImage__SWIG_1(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, boolean jarg7, long jarg8);
  public final static native long Image_loadDynamicImage__SWIG_2(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, boolean jarg7);
  public final static native long Image_loadDynamicImage__SWIG_3(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native long Image_loadRawData__SWIG_0(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8);
  public final static native long Image_loadRawData__SWIG_1(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native long Image_loadRawData__SWIG_2(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native long Image_load__SWIG_0(long jarg1, Image jarg1_, String jarg2, String jarg3);
  public final static native long Image_load__SWIG_1(long jarg1, Image jarg1_, long jarg2, String jarg3);
  public final static native long Image_load__SWIG_2(long jarg1, Image jarg1_, long jarg2);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_0(long jarg1, Image jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_1(long jarg1, Image jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_2(long jarg1, Image jarg1_, long jarg2, long jarg3, int jarg4, String jarg5, String jarg6);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_3(long jarg1, Image jarg1_, long jarg2, long jarg3, int jarg4, String jarg5);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_4(long jarg1, Image jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long Image_loadTwoImagesAsRGBA__SWIG_5(long jarg1, Image jarg1_, long jarg2, long jarg3);
  public final static native long Image_combineTwoImagesAsRGBA__SWIG_0(long jarg1, Image jarg1_, long jarg2, Image jarg2_, long jarg3, Image jarg3_, int jarg4);
  public final static native long Image_combineTwoImagesAsRGBA__SWIG_1(long jarg1, Image jarg1_, long jarg2, Image jarg2_, long jarg3, Image jarg3_);
  public final static native void Image_save(long jarg1, Image jarg1_, String jarg2);
  public final static native long Image_encode(long jarg1, Image jarg1_, String jarg2);
  public final static native long Image_getData__SWIG_0(long jarg1, Image jarg1_);
  public final static native long Image_getSize(long jarg1, Image jarg1_);
  public final static native long Image_getNumMipmaps(long jarg1, Image jarg1_);
  public final static native boolean Image_hasFlag(long jarg1, Image jarg1_, int jarg2);
  public final static native long Image_getWidth(long jarg1, Image jarg1_);
  public final static native long Image_getHeight(long jarg1, Image jarg1_);
  public final static native long Image_getDepth(long jarg1, Image jarg1_);
  public final static native long Image_getNumFaces(long jarg1, Image jarg1_);
  public final static native long Image_getRowSpan(long jarg1, Image jarg1_);
  public final static native int Image_getFormat(long jarg1, Image jarg1_);
  public final static native short Image_getBPP(long jarg1, Image jarg1_);
  public final static native boolean Image_getHasAlpha(long jarg1, Image jarg1_);
  public final static native void Image_applyGamma(long jarg1, float jarg2, long jarg3, short jarg4);
  public final static native long Image_getColourAt(long jarg1, Image jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void Image_setColourAt(long jarg1, Image jarg1_, long jarg2, ColourValue jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native long Image_getPixelBox__SWIG_0(long jarg1, Image jarg1_, long jarg2, long jarg3);
  public final static native long Image_getPixelBox__SWIG_1(long jarg1, Image jarg1_, long jarg2);
  public final static native long Image_getPixelBox__SWIG_2(long jarg1, Image jarg1_);
  public final static native void Image_freeMemory(long jarg1, Image jarg1_);
  public final static native void Image_scale__SWIG_0(long jarg1, PixelBox jarg1_, long jarg2, PixelBox jarg2_, int jarg3);
  public final static native void Image_scale__SWIG_1(long jarg1, PixelBox jarg1_, long jarg2, PixelBox jarg2_);
  public final static native void Image_resize__SWIG_0(long jarg1, Image jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void Image_resize__SWIG_1(long jarg1, Image jarg1_, int jarg2, int jarg3);
  public final static native long Image_calculateSize(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native String Image_getFileExtFromMagic(long jarg1);
  public final static native void Billboard_mPosition_set(long jarg1, Billboard jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Billboard_mPosition_get(long jarg1, Billboard jarg1_);
  public final static native void Billboard_mDirection_set(long jarg1, Billboard jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Billboard_mDirection_get(long jarg1, Billboard jarg1_);
  public final static native void Billboard_mParentSet_set(long jarg1, Billboard jarg1_, long jarg2, BillboardSet jarg2_);
  public final static native long Billboard_mParentSet_get(long jarg1, Billboard jarg1_);
  public final static native void Billboard_mColour_set(long jarg1, Billboard jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Billboard_mColour_get(long jarg1, Billboard jarg1_);
  public final static native void Billboard_mRotation_set(long jarg1, Billboard jarg1_, long jarg2, Radian jarg2_);
  public final static native long Billboard_mRotation_get(long jarg1, Billboard jarg1_);
  public final static native long new_Billboard__SWIG_0();
  public final static native void delete_Billboard(long jarg1);
  public final static native long new_Billboard__SWIG_1(long jarg1, Vector3 jarg1_, long jarg2, BillboardSet jarg2_, long jarg3, ColourValue jarg3_);
  public final static native long new_Billboard__SWIG_2(long jarg1, Vector3 jarg1_, long jarg2, BillboardSet jarg2_);
  public final static native long Billboard_getRotation(long jarg1, Billboard jarg1_);
  public final static native void Billboard_setRotation(long jarg1, Billboard jarg1_, long jarg2, Radian jarg2_);
  public final static native void Billboard_setPosition__SWIG_0(long jarg1, Billboard jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Billboard_setPosition__SWIG_1(long jarg1, Billboard jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long Billboard_getPosition(long jarg1, Billboard jarg1_);
  public final static native void Billboard_setDimensions(long jarg1, Billboard jarg1_, float jarg2, float jarg3);
  public final static native void Billboard_resetDimensions(long jarg1, Billboard jarg1_);
  public final static native void Billboard_setColour(long jarg1, Billboard jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Billboard_getColour(long jarg1, Billboard jarg1_);
  public final static native boolean Billboard_hasOwnDimensions(long jarg1, Billboard jarg1_);
  public final static native float Billboard_getOwnWidth(long jarg1, Billboard jarg1_);
  public final static native float Billboard_getOwnHeight(long jarg1, Billboard jarg1_);
  public final static native void Billboard__notifyOwner(long jarg1, Billboard jarg1_, long jarg2, BillboardSet jarg2_);
  public final static native boolean Billboard_isUseTexcoordRect(long jarg1, Billboard jarg1_);
  public final static native void Billboard_setTexcoordIndex(long jarg1, Billboard jarg1_, int jarg2);
  public final static native int Billboard_getTexcoordIndex(long jarg1, Billboard jarg1_);
  public final static native void Billboard_setTexcoordRect__SWIG_0(long jarg1, Billboard jarg1_, long jarg2);
  public final static native void Billboard_setTexcoordRect__SWIG_1(long jarg1, Billboard jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long Billboard_getTexcoordRect(long jarg1, Billboard jarg1_);
  public final static native long new_ParticleVisualData();
  public final static native void delete_ParticleVisualData(long jarg1);
  public final static native void Particle_mOwnDimensions_set(long jarg1, Particle jarg1_, boolean jarg2);
  public final static native boolean Particle_mOwnDimensions_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mWidth_set(long jarg1, Particle jarg1_, float jarg2);
  public final static native float Particle_mWidth_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mHeight_set(long jarg1, Particle jarg1_, float jarg2);
  public final static native float Particle_mHeight_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mRotation_set(long jarg1, Particle jarg1_, long jarg2, Radian jarg2_);
  public final static native long Particle_mRotation_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mPosition_set(long jarg1, Particle jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Particle_mPosition_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mDirection_set(long jarg1, Particle jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Particle_mDirection_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mColour_set(long jarg1, Particle jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Particle_mColour_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mTimeToLive_set(long jarg1, Particle jarg1_, float jarg2);
  public final static native float Particle_mTimeToLive_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mTotalTimeToLive_set(long jarg1, Particle jarg1_, float jarg2);
  public final static native float Particle_mTotalTimeToLive_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mRotationSpeed_set(long jarg1, Particle jarg1_, long jarg2, Radian jarg2_);
  public final static native long Particle_mRotationSpeed_get(long jarg1, Particle jarg1_);
  public final static native void Particle_mParticleType_set(long jarg1, Particle jarg1_, int jarg2);
  public final static native int Particle_mParticleType_get(long jarg1, Particle jarg1_);
  public final static native long new_Particle();
  public final static native void Particle_setDimensions(long jarg1, Particle jarg1_, float jarg2, float jarg3);
  public final static native boolean Particle_hasOwnDimensions(long jarg1, Particle jarg1_);
  public final static native float Particle_getOwnWidth(long jarg1, Particle jarg1_);
  public final static native float Particle_getOwnHeight(long jarg1, Particle jarg1_);
  public final static native void Particle_setRotation(long jarg1, Particle jarg1_, long jarg2, Radian jarg2_);
  public final static native long Particle_getRotation(long jarg1, Particle jarg1_);
  public final static native void Particle__notifyOwner(long jarg1, Particle jarg1_, long jarg2, ParticleSystem jarg2_);
  public final static native void Particle__notifyVisualData(long jarg1, Particle jarg1_, long jarg2, ParticleVisualData jarg2_);
  public final static native long Particle_getVisualData(long jarg1, Particle jarg1_);
  public final static native void Particle_resetDimensions(long jarg1, Particle jarg1_);
  public final static native void delete_Particle(long jarg1);
  public final static native void delete_HardwareOcclusionQuery(long jarg1);
  public final static native void HardwareOcclusionQuery_beginOcclusionQuery(long jarg1, HardwareOcclusionQuery jarg1_);
  public final static native void HardwareOcclusionQuery_endOcclusionQuery(long jarg1, HardwareOcclusionQuery jarg1_);
  public final static native boolean HardwareOcclusionQuery_pullOcclusionQuery(long jarg1, HardwareOcclusionQuery jarg1_, long jarg2);
  public final static native long HardwareOcclusionQuery_getLastQuerysPixelcount(long jarg1, HardwareOcclusionQuery jarg1_);
  public final static native boolean HardwareOcclusionQuery_isStillOutstanding(long jarg1, HardwareOcclusionQuery jarg1_);
  public final static native int HardwareBuffer_HBU_STATIC_get();
  public final static native int HardwareBuffer_HBU_DYNAMIC_get();
  public final static native int HardwareBuffer_HBU_WRITE_ONLY_get();
  public final static native int HardwareBuffer_HBU_DISCARDABLE_get();
  public final static native int HardwareBuffer_HBU_STATIC_WRITE_ONLY_get();
  public final static native int HardwareBuffer_HBU_DYNAMIC_WRITE_ONLY_get();
  public final static native int HardwareBuffer_HBU_DYNAMIC_WRITE_ONLY_DISCARDABLE_get();
  public final static native int HardwareBuffer_HBU_DEFAULT_get();
  public final static native int HardwareBuffer_HBU_ON_DEMAND_get();
  public final static native void delete_HardwareBuffer(long jarg1);
  public final static native long HardwareBuffer_lock__SWIG_0(long jarg1, HardwareBuffer jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwareBuffer_lock__SWIG_1(long jarg1, HardwareBuffer jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareBuffer_lock__SWIG_2(long jarg1, HardwareBuffer jarg1_, int jarg2, int jarg3);
  public final static native long HardwareBuffer_lock__SWIG_3(long jarg1, HardwareBuffer jarg1_, int jarg2);
  public final static native void HardwareBuffer_unlock(long jarg1, HardwareBuffer jarg1_);
  public final static native void HardwareBuffer_readData(long jarg1, HardwareBuffer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareBuffer_writeData__SWIG_0(long jarg1, HardwareBuffer jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwareBuffer_writeData__SWIG_1(long jarg1, HardwareBuffer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareBuffer_copyData__SWIG_0(long jarg1, HardwareBuffer jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwareBuffer_copyData__SWIG_1(long jarg1, HardwareBuffer jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwareBuffer_copyData__SWIG_2(long jarg1, HardwareBuffer jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwareBuffer__updateFromShadow(long jarg1, HardwareBuffer jarg1_);
  public final static native long HardwareBuffer_getSizeInBytes(long jarg1, HardwareBuffer jarg1_);
  public final static native int HardwareBuffer_getUsage(long jarg1, HardwareBuffer jarg1_);
  public final static native boolean HardwareBuffer_isSystemMemory(long jarg1, HardwareBuffer jarg1_);
  public final static native boolean HardwareBuffer_hasShadowBuffer(long jarg1, HardwareBuffer jarg1_);
  public final static native boolean HardwareBuffer_isLocked(long jarg1, HardwareBuffer jarg1_);
  public final static native void HardwareBuffer_suppressHardwareUpdate(long jarg1, HardwareBuffer jarg1_, boolean jarg2);
  public final static native boolean ParticleIterator_end(long jarg1, ParticleIterator jarg1_);
  public final static native long ParticleIterator_getNext(long jarg1, ParticleIterator jarg1_);
  public final static native void delete_ParticleIterator(long jarg1);
  public final static native void ParameterDef_name_set(long jarg1, ParameterDef jarg1_, String jarg2);
  public final static native String ParameterDef_name_get(long jarg1, ParameterDef jarg1_);
  public final static native void ParameterDef_description_set(long jarg1, ParameterDef jarg1_, String jarg2);
  public final static native String ParameterDef_description_get(long jarg1, ParameterDef jarg1_);
  public final static native void ParameterDef_paramType_set(long jarg1, ParameterDef jarg1_, int jarg2);
  public final static native int ParameterDef_paramType_get(long jarg1, ParameterDef jarg1_);
  public final static native long new_ParameterDef(String jarg1, String jarg2, int jarg3);
  public final static native void delete_ParameterDef(long jarg1);
  public final static native String ParamCommand_doGet(long jarg1, ParamCommand jarg1_, long jarg2);
  public final static native void ParamCommand_doSet(long jarg1, ParamCommand jarg1_, long jarg2, String jarg3);
  public final static native void delete_ParamCommand(long jarg1);
  public final static native long new_ParamDictionary();
  public final static native void ParamDictionary_addParameter(long jarg1, ParamDictionary jarg1_, long jarg2, ParameterDef jarg2_, long jarg3, ParamCommand jarg3_);
  public final static native long ParamDictionary_getParameters(long jarg1, ParamDictionary jarg1_);
  public final static native void delete_ParamDictionary(long jarg1);
  public final static native long new_StringInterface();
  public final static native void delete_StringInterface(long jarg1);
  public final static native long StringInterface_getParamDictionary__SWIG_0(long jarg1, StringInterface jarg1_);
  public final static native long StringInterface_getParameters(long jarg1, StringInterface jarg1_);
  public final static native boolean StringInterface_setParameter(long jarg1, StringInterface jarg1_, String jarg2, String jarg3);
  public final static native void StringInterface_setParameterList(long jarg1, StringInterface jarg1_, long jarg2);
  public final static native String StringInterface_getParameter(long jarg1, StringInterface jarg1_, String jarg2);
  public final static native void StringInterface_copyParametersTo(long jarg1, StringInterface jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void StringInterface_cleanupDictionary();
  public final static native void delete_ParticleAffector(long jarg1);
  public final static native void ParticleAffector__initParticle(long jarg1, ParticleAffector jarg1_, long jarg2, Particle jarg2_);
  public final static native void ParticleAffector__affectParticles(long jarg1, ParticleAffector jarg1_, long jarg2, ParticleSystem jarg2_, float jarg3);
  public final static native void delete_ParticleAffectorFactory(long jarg1);
  public final static native String ParticleAffectorFactory_getName(long jarg1, ParticleAffectorFactory jarg1_);
  public final static native long ParticleAffectorFactory_createAffector(long jarg1, ParticleAffectorFactory jarg1_, long jarg2, ParticleSystem jarg2_);
  public final static native void ParticleAffectorFactory_destroyAffector(long jarg1, ParticleAffectorFactory jarg1_, long jarg2, ParticleAffector jarg2_);
  public final static native void delete_ParticleEmitter(long jarg1);
  public final static native void ParticleEmitter_setPosition(long jarg1, ParticleEmitter jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long ParticleEmitter_getPosition(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setDirection(long jarg1, ParticleEmitter jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long ParticleEmitter_getDirection(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setUp(long jarg1, ParticleEmitter jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long ParticleEmitter_getUp(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setDirPositionReference(long jarg1, ParticleEmitter jarg1_, long jarg2, Vector3 jarg2_, boolean jarg3);
  public final static native long ParticleEmitter_getDirPositionReference(long jarg1, ParticleEmitter jarg1_);
  public final static native boolean ParticleEmitter_getDirPositionReferenceEnabled(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setAngle(long jarg1, ParticleEmitter jarg1_, long jarg2, Radian jarg2_);
  public final static native long ParticleEmitter_getAngle(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setParticleVelocity__SWIG_0(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setParticleVelocity__SWIG_1(long jarg1, ParticleEmitter jarg1_, float jarg2, float jarg3);
  public final static native void ParticleEmitter_setMinParticleVelocity(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setMaxParticleVelocity(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getParticleVelocity(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMinParticleVelocity(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMaxParticleVelocity(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setEmissionRate(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getEmissionRate(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setTimeToLive__SWIG_0(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setTimeToLive__SWIG_1(long jarg1, ParticleEmitter jarg1_, float jarg2, float jarg3);
  public final static native void ParticleEmitter_setMinTimeToLive(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setMaxTimeToLive(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getTimeToLive(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMinTimeToLive(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMaxTimeToLive(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setColour__SWIG_0(long jarg1, ParticleEmitter jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void ParticleEmitter_setColour__SWIG_1(long jarg1, ParticleEmitter jarg1_, long jarg2, ColourValue jarg2_, long jarg3, ColourValue jarg3_);
  public final static native void ParticleEmitter_setColourRangeStart(long jarg1, ParticleEmitter jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void ParticleEmitter_setColourRangeEnd(long jarg1, ParticleEmitter jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long ParticleEmitter_getColour(long jarg1, ParticleEmitter jarg1_);
  public final static native long ParticleEmitter_getColourRangeStart(long jarg1, ParticleEmitter jarg1_);
  public final static native long ParticleEmitter_getColourRangeEnd(long jarg1, ParticleEmitter jarg1_);
  public final static native int ParticleEmitter__getEmissionCount(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter__initParticle(long jarg1, ParticleEmitter jarg1_, long jarg2, Particle jarg2_);
  public final static native void ParticleEmitter_setEnabled(long jarg1, ParticleEmitter jarg1_, boolean jarg2);
  public final static native boolean ParticleEmitter_getEnabled(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setStartTime(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getStartTime(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setDuration__SWIG_0(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getDuration(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setDuration__SWIG_1(long jarg1, ParticleEmitter jarg1_, float jarg2, float jarg3);
  public final static native void ParticleEmitter_setMinDuration(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setMaxDuration(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getMinDuration(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMaxDuration(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setRepeatDelay__SWIG_0(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getRepeatDelay(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setRepeatDelay__SWIG_1(long jarg1, ParticleEmitter jarg1_, float jarg2, float jarg3);
  public final static native void ParticleEmitter_setMinRepeatDelay(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native void ParticleEmitter_setMaxRepeatDelay(long jarg1, ParticleEmitter jarg1_, float jarg2);
  public final static native float ParticleEmitter_getMinRepeatDelay(long jarg1, ParticleEmitter jarg1_);
  public final static native float ParticleEmitter_getMaxRepeatDelay(long jarg1, ParticleEmitter jarg1_);
  public final static native String ParticleEmitter_getName(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setName(long jarg1, ParticleEmitter jarg1_, String jarg2);
  public final static native String ParticleEmitter_getEmittedEmitter(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setEmittedEmitter(long jarg1, ParticleEmitter jarg1_, String jarg2);
  public final static native boolean ParticleEmitter_isEmitted(long jarg1, ParticleEmitter jarg1_);
  public final static native void ParticleEmitter_setEmitted(long jarg1, ParticleEmitter jarg1_, boolean jarg2);
  public final static native void delete_ParticleEmitterFactory(long jarg1);
  public final static native String ParticleEmitterFactory_getName(long jarg1, ParticleEmitterFactory jarg1_);
  public final static native long ParticleEmitterFactory_createEmitter(long jarg1, ParticleEmitterFactory jarg1_, long jarg2, ParticleSystem jarg2_);
  public final static native void ParticleEmitterFactory_destroyEmitter(long jarg1, ParticleEmitterFactory jarg1_, long jarg2, ParticleEmitter jarg2_);
  public final static native long new_ResourcePtr__SWIG_1();
  public final static native long new_ResourcePtr__SWIG_2(long jarg1, ResourcePtr jarg1_);
  public final static native void delete_ResourcePtr(long jarg1);
  public final static native long ResourcePtr___ref__(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr___deref__(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr_get(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_unique(long jarg1, ResourcePtr jarg1_);
  public final static native int ResourcePtr_use_count(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_reset__SWIG_0(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_reset__SWIG_1(long jarg1, ResourcePtr jarg1_, long jarg2, Resource jarg2_);
  public final static native void ResourcePtr_prepare__SWIG_0(long jarg1, ResourcePtr jarg1_, boolean jarg2);
  public final static native void ResourcePtr_prepare__SWIG_1(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_load__SWIG_0(long jarg1, ResourcePtr jarg1_, boolean jarg2);
  public final static native void ResourcePtr_load__SWIG_1(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_reload__SWIG_0(long jarg1, ResourcePtr jarg1_, int jarg2);
  public final static native void ResourcePtr_reload__SWIG_1(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isReloadable(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isManuallyLoaded(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_unload(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr_getSize(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_touch(long jarg1, ResourcePtr jarg1_);
  public final static native String ResourcePtr_getName(long jarg1, ResourcePtr jarg1_);
  public final static native java.math.BigInteger ResourcePtr_getHandle(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isPrepared(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isLoaded(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isLoading(long jarg1, ResourcePtr jarg1_);
  public final static native int ResourcePtr_getLoadingState(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_isBackgroundLoaded(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_setBackgroundLoaded(long jarg1, ResourcePtr jarg1_, boolean jarg2);
  public final static native void ResourcePtr_escalateLoading(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_addListener(long jarg1, ResourcePtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void ResourcePtr_removeListener(long jarg1, ResourcePtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String ResourcePtr_getGroup(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr_changeGroupOwnership(long jarg1, ResourcePtr jarg1_, String jarg2);
  public final static native long ResourcePtr_getCreator(long jarg1, ResourcePtr jarg1_);
  public final static native String ResourcePtr_getOrigin(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr__notifyOrigin(long jarg1, ResourcePtr jarg1_, String jarg2);
  public final static native long ResourcePtr_getStateCount(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr__dirtyState(long jarg1, ResourcePtr jarg1_);
  public final static native void ResourcePtr__fireLoadingComplete(long jarg1, ResourcePtr jarg1_, boolean jarg2);
  public final static native void ResourcePtr__firePreparingComplete(long jarg1, ResourcePtr jarg1_, boolean jarg2);
  public final static native void ResourcePtr__fireUnloadingComplete(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr_calculateSize(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr_getParamDictionary__SWIG_0(long jarg1, ResourcePtr jarg1_);
  public final static native long ResourcePtr_getParameters(long jarg1, ResourcePtr jarg1_);
  public final static native boolean ResourcePtr_setParameter(long jarg1, ResourcePtr jarg1_, String jarg2, String jarg3);
  public final static native void ResourcePtr_setParameterList(long jarg1, ResourcePtr jarg1_, long jarg2);
  public final static native String ResourcePtr_getParameter(long jarg1, ResourcePtr jarg1_, String jarg2);
  public final static native void ResourcePtr_copyParametersTo(long jarg1, ResourcePtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void ResourcePtr_cleanupDictionary(long jarg1, ResourcePtr jarg1_);
  public final static native long new_Resource_Listener();
  public final static native void delete_Resource_Listener(long jarg1);
  public final static native void Resource_Listener_backgroundLoadingComplete(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_backgroundLoadingCompleteSwigExplicitListener(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_backgroundPreparingComplete(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_backgroundPreparingCompleteSwigExplicitListener(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_loadingComplete(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_loadingCompleteSwigExplicitListener(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_preparingComplete(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_preparingCompleteSwigExplicitListener(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_unloadingComplete(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_unloadingCompleteSwigExplicitListener(long jarg1, Resource.Listener jarg1_, long jarg2, Resource jarg2_);
  public final static native void Resource_Listener_director_connect(Resource.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Resource_Listener_change_ownership(Resource.Listener obj, long cptr, boolean take_or_release);
  public final static native int Resource_LF_DEFAULT_get();
  public final static native int Resource_LF_INCLUDE_NON_RELOADABLE_get();
  public final static native int Resource_LF_ONLY_UNREFERENCED_get();
  public final static native int Resource_LF_ONLY_UNREFERENCED_INCLUDE_NON_RELOADABLE_get();
  public final static native int Resource_LF_PRESERVE_STATE_get();
  public final static native void delete_Resource(long jarg1);
  public final static native void Resource_prepare__SWIG_0(long jarg1, Resource jarg1_, boolean jarg2);
  public final static native void Resource_prepare__SWIG_1(long jarg1, Resource jarg1_);
  public final static native void Resource_load__SWIG_0(long jarg1, Resource jarg1_, boolean jarg2);
  public final static native void Resource_load__SWIG_1(long jarg1, Resource jarg1_);
  public final static native void Resource_reload__SWIG_0(long jarg1, Resource jarg1_, int jarg2);
  public final static native void Resource_reload__SWIG_1(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isReloadable(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isManuallyLoaded(long jarg1, Resource jarg1_);
  public final static native void Resource_unload(long jarg1, Resource jarg1_);
  public final static native long Resource_getSize(long jarg1, Resource jarg1_);
  public final static native void Resource_touch(long jarg1, Resource jarg1_);
  public final static native String Resource_getName(long jarg1, Resource jarg1_);
  public final static native java.math.BigInteger Resource_getHandle(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isPrepared(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isLoaded(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isLoading(long jarg1, Resource jarg1_);
  public final static native int Resource_getLoadingState(long jarg1, Resource jarg1_);
  public final static native boolean Resource_isBackgroundLoaded(long jarg1, Resource jarg1_);
  public final static native void Resource_setBackgroundLoaded(long jarg1, Resource jarg1_, boolean jarg2);
  public final static native void Resource_escalateLoading(long jarg1, Resource jarg1_);
  public final static native void Resource_addListener(long jarg1, Resource jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void Resource_removeListener(long jarg1, Resource jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String Resource_getGroup(long jarg1, Resource jarg1_);
  public final static native void Resource_changeGroupOwnership(long jarg1, Resource jarg1_, String jarg2);
  public final static native long Resource_getCreator(long jarg1, Resource jarg1_);
  public final static native String Resource_getOrigin(long jarg1, Resource jarg1_);
  public final static native void Resource__notifyOrigin(long jarg1, Resource jarg1_, String jarg2);
  public final static native long Resource_getStateCount(long jarg1, Resource jarg1_);
  public final static native void Resource__dirtyState(long jarg1, Resource jarg1_);
  public final static native void Resource__fireLoadingComplete(long jarg1, Resource jarg1_, boolean jarg2);
  public final static native void Resource__firePreparingComplete(long jarg1, Resource jarg1_, boolean jarg2);
  public final static native void Resource__fireUnloadingComplete(long jarg1, Resource jarg1_);
  public final static native long Resource_calculateSize(long jarg1, Resource jarg1_);
  public final static native void delete_ManualResourceLoader(long jarg1);
  public final static native void ManualResourceLoader_prepareResource(long jarg1, ManualResourceLoader jarg1_, long jarg2, Resource jarg2_);
  public final static native void ManualResourceLoader_loadResource(long jarg1, ManualResourceLoader jarg1_, long jarg2, Resource jarg2_);
  public final static native long new_TexturePtr__SWIG_1();
  public final static native long new_TexturePtr__SWIG_2(long jarg1, TexturePtr jarg1_);
  public final static native void delete_TexturePtr(long jarg1);
  public final static native long TexturePtr___ref__(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr___deref__(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_get(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_unique(long jarg1, TexturePtr jarg1_);
  public final static native int TexturePtr_use_count(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_reset__SWIG_0(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_reset__SWIG_1(long jarg1, TexturePtr jarg1_, long jarg2, Texture jarg2_);
  public final static native void TexturePtr_setTextureType(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native int TexturePtr_getTextureType(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getNumMipmaps(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setNumMipmaps(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native boolean TexturePtr_getMipmapsHardwareGenerated(long jarg1, TexturePtr jarg1_);
  public final static native float TexturePtr_getGamma(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setGamma(long jarg1, TexturePtr jarg1_, float jarg2);
  public final static native void TexturePtr_setHardwareGammaEnabled(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native boolean TexturePtr_isHardwareGammaEnabled(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setFSAA(long jarg1, TexturePtr jarg1_, long jarg2, String jarg3);
  public final static native long TexturePtr_getFSAA(long jarg1, TexturePtr jarg1_);
  public final static native String TexturePtr_getFSAAHint(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getHeight(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getWidth(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getDepth(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getSrcHeight(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getSrcWidth(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getSrcDepth(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setHeight(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native void TexturePtr_setWidth(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native void TexturePtr_setDepth(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native int TexturePtr_getUsage(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setUsage(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native void TexturePtr_createInternalResources(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_freeInternalResources(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_copyToTexture(long jarg1, TexturePtr jarg1_, long jarg2, TexturePtr jarg2_);
  public final static native void TexturePtr_loadImage(long jarg1, TexturePtr jarg1_, long jarg2, Image jarg2_);
  public final static native void TexturePtr_loadRawData(long jarg1, TexturePtr jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void TexturePtr__loadImages(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native int TexturePtr_getFormat(long jarg1, TexturePtr jarg1_);
  public final static native int TexturePtr_getDesiredFormat(long jarg1, TexturePtr jarg1_);
  public final static native int TexturePtr_getSrcFormat(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setFormat(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native boolean TexturePtr_hasAlpha(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setDesiredIntegerBitDepth(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native int TexturePtr_getDesiredIntegerBitDepth(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setDesiredFloatBitDepth(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native int TexturePtr_getDesiredFloatBitDepth(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setDesiredBitDepths(long jarg1, TexturePtr jarg1_, int jarg2, int jarg3);
  public final static native void TexturePtr_setTreatLuminanceAsAlpha(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native boolean TexturePtr_getTreatLuminanceAsAlpha(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getNumFaces(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getBuffer__SWIG_0(long jarg1, TexturePtr jarg1_, long jarg2, long jarg3);
  public final static native long TexturePtr_getBuffer__SWIG_1(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native long TexturePtr_getBuffer__SWIG_2(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_convertToImage__SWIG_0(long jarg1, TexturePtr jarg1_, long jarg2, Image jarg2_, boolean jarg3);
  public final static native void TexturePtr_convertToImage__SWIG_1(long jarg1, TexturePtr jarg1_, long jarg2, Image jarg2_);
  public final static native void TexturePtr_getCustomAttribute(long jarg1, TexturePtr jarg1_, String jarg2, long jarg3);
  public final static native void TexturePtr_createShaderAccessPoint__SWIG_0(long jarg1, TexturePtr jarg1_, long jarg2, int jarg3, int jarg4, int jarg5, long jarg6);
  public final static native void TexturePtr_createShaderAccessPoint__SWIG_1(long jarg1, TexturePtr jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void TexturePtr_createShaderAccessPoint__SWIG_2(long jarg1, TexturePtr jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void TexturePtr_createShaderAccessPoint__SWIG_3(long jarg1, TexturePtr jarg1_, long jarg2, int jarg3);
  public final static native void TexturePtr_createShaderAccessPoint__SWIG_4(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native void TexturePtr_prepare__SWIG_0(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native void TexturePtr_prepare__SWIG_1(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_load__SWIG_0(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native void TexturePtr_load__SWIG_1(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_reload__SWIG_0(long jarg1, TexturePtr jarg1_, int jarg2);
  public final static native void TexturePtr_reload__SWIG_1(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isReloadable(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isManuallyLoaded(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_unload(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getSize(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_touch(long jarg1, TexturePtr jarg1_);
  public final static native String TexturePtr_getName(long jarg1, TexturePtr jarg1_);
  public final static native java.math.BigInteger TexturePtr_getHandle(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isPrepared(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isLoaded(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isLoading(long jarg1, TexturePtr jarg1_);
  public final static native int TexturePtr_getLoadingState(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_isBackgroundLoaded(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_setBackgroundLoaded(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native void TexturePtr_escalateLoading(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_addListener(long jarg1, TexturePtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void TexturePtr_removeListener(long jarg1, TexturePtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String TexturePtr_getGroup(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr_changeGroupOwnership(long jarg1, TexturePtr jarg1_, String jarg2);
  public final static native long TexturePtr_getCreator(long jarg1, TexturePtr jarg1_);
  public final static native String TexturePtr_getOrigin(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr__notifyOrigin(long jarg1, TexturePtr jarg1_, String jarg2);
  public final static native long TexturePtr_getStateCount(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr__dirtyState(long jarg1, TexturePtr jarg1_);
  public final static native void TexturePtr__fireLoadingComplete(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native void TexturePtr__firePreparingComplete(long jarg1, TexturePtr jarg1_, boolean jarg2);
  public final static native void TexturePtr__fireUnloadingComplete(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getParamDictionary__SWIG_0(long jarg1, TexturePtr jarg1_);
  public final static native long TexturePtr_getParameters(long jarg1, TexturePtr jarg1_);
  public final static native boolean TexturePtr_setParameter(long jarg1, TexturePtr jarg1_, String jarg2, String jarg3);
  public final static native void TexturePtr_setParameterList(long jarg1, TexturePtr jarg1_, long jarg2);
  public final static native String TexturePtr_getParameter(long jarg1, TexturePtr jarg1_, String jarg2);
  public final static native void TexturePtr_copyParametersTo(long jarg1, TexturePtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void TexturePtr_cleanupDictionary(long jarg1, TexturePtr jarg1_);
  public final static native int TU_STATIC_get();
  public final static native int TU_DYNAMIC_get();
  public final static native int TU_WRITE_ONLY_get();
  public final static native int TU_STATIC_WRITE_ONLY_get();
  public final static native int TU_DYNAMIC_WRITE_ONLY_get();
  public final static native int TU_DYNAMIC_WRITE_ONLY_DISCARDABLE_get();
  public final static native int TU_AUTOMIPMAP_get();
  public final static native int TU_RENDERTARGET_get();
  public final static native int TU_NOTSHADERRESOURCE_get();
  public final static native int TU_DEFAULT_get();
  public final static native int TA_READ_get();
  public final static native int TA_WRITE_get();
  public final static native int TA_READ_WRITE_get();
  public final static native int TEX_TYPE_1D_get();
  public final static native int TEX_TYPE_2D_get();
  public final static native int TEX_TYPE_3D_get();
  public final static native int TEX_TYPE_CUBE_MAP_get();
  public final static native int TEX_TYPE_2D_ARRAY_get();
  public final static native int TEX_TYPE_2D_RECT_get();
  public final static native int MIP_UNLIMITED_get();
  public final static native int MIP_DEFAULT_get();
  public final static native void delete_Texture(long jarg1);
  public final static native void Texture_setTextureType(long jarg1, Texture jarg1_, int jarg2);
  public final static native int Texture_getTextureType(long jarg1, Texture jarg1_);
  public final static native long Texture_getNumMipmaps(long jarg1, Texture jarg1_);
  public final static native void Texture_setNumMipmaps(long jarg1, Texture jarg1_, long jarg2);
  public final static native boolean Texture_getMipmapsHardwareGenerated(long jarg1, Texture jarg1_);
  public final static native float Texture_getGamma(long jarg1, Texture jarg1_);
  public final static native void Texture_setGamma(long jarg1, Texture jarg1_, float jarg2);
  public final static native void Texture_setHardwareGammaEnabled(long jarg1, Texture jarg1_, boolean jarg2);
  public final static native boolean Texture_isHardwareGammaEnabled(long jarg1, Texture jarg1_);
  public final static native void Texture_setFSAA(long jarg1, Texture jarg1_, long jarg2, String jarg3);
  public final static native long Texture_getFSAA(long jarg1, Texture jarg1_);
  public final static native String Texture_getFSAAHint(long jarg1, Texture jarg1_);
  public final static native long Texture_getHeight(long jarg1, Texture jarg1_);
  public final static native long Texture_getWidth(long jarg1, Texture jarg1_);
  public final static native long Texture_getDepth(long jarg1, Texture jarg1_);
  public final static native long Texture_getSrcHeight(long jarg1, Texture jarg1_);
  public final static native long Texture_getSrcWidth(long jarg1, Texture jarg1_);
  public final static native long Texture_getSrcDepth(long jarg1, Texture jarg1_);
  public final static native void Texture_setHeight(long jarg1, Texture jarg1_, long jarg2);
  public final static native void Texture_setWidth(long jarg1, Texture jarg1_, long jarg2);
  public final static native void Texture_setDepth(long jarg1, Texture jarg1_, long jarg2);
  public final static native int Texture_getUsage(long jarg1, Texture jarg1_);
  public final static native void Texture_setUsage(long jarg1, Texture jarg1_, int jarg2);
  public final static native void Texture_createInternalResources(long jarg1, Texture jarg1_);
  public final static native void Texture_freeInternalResources(long jarg1, Texture jarg1_);
  public final static native void Texture_copyToTexture(long jarg1, Texture jarg1_, long jarg2, TexturePtr jarg2_);
  public final static native void Texture_loadImage(long jarg1, Texture jarg1_, long jarg2, Image jarg2_);
  public final static native void Texture_loadRawData(long jarg1, Texture jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Texture__loadImages(long jarg1, Texture jarg1_, long jarg2);
  public final static native int Texture_getFormat(long jarg1, Texture jarg1_);
  public final static native int Texture_getDesiredFormat(long jarg1, Texture jarg1_);
  public final static native int Texture_getSrcFormat(long jarg1, Texture jarg1_);
  public final static native void Texture_setFormat(long jarg1, Texture jarg1_, int jarg2);
  public final static native boolean Texture_hasAlpha(long jarg1, Texture jarg1_);
  public final static native void Texture_setDesiredIntegerBitDepth(long jarg1, Texture jarg1_, int jarg2);
  public final static native int Texture_getDesiredIntegerBitDepth(long jarg1, Texture jarg1_);
  public final static native void Texture_setDesiredFloatBitDepth(long jarg1, Texture jarg1_, int jarg2);
  public final static native int Texture_getDesiredFloatBitDepth(long jarg1, Texture jarg1_);
  public final static native void Texture_setDesiredBitDepths(long jarg1, Texture jarg1_, int jarg2, int jarg3);
  public final static native void Texture_setTreatLuminanceAsAlpha(long jarg1, Texture jarg1_, boolean jarg2);
  public final static native boolean Texture_getTreatLuminanceAsAlpha(long jarg1, Texture jarg1_);
  public final static native long Texture_getNumFaces(long jarg1, Texture jarg1_);
  public final static native long Texture_getBuffer__SWIG_0(long jarg1, Texture jarg1_, long jarg2, long jarg3);
  public final static native long Texture_getBuffer__SWIG_1(long jarg1, Texture jarg1_, long jarg2);
  public final static native long Texture_getBuffer__SWIG_2(long jarg1, Texture jarg1_);
  public final static native void Texture_convertToImage__SWIG_0(long jarg1, Texture jarg1_, long jarg2, Image jarg2_, boolean jarg3);
  public final static native void Texture_convertToImage__SWIG_1(long jarg1, Texture jarg1_, long jarg2, Image jarg2_);
  public final static native void Texture_getCustomAttribute(long jarg1, Texture jarg1_, String jarg2, long jarg3);
  public final static native void Texture_createShaderAccessPoint__SWIG_0(long jarg1, Texture jarg1_, long jarg2, int jarg3, int jarg4, int jarg5, long jarg6);
  public final static native void Texture_createShaderAccessPoint__SWIG_1(long jarg1, Texture jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Texture_createShaderAccessPoint__SWIG_2(long jarg1, Texture jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void Texture_createShaderAccessPoint__SWIG_3(long jarg1, Texture jarg1_, long jarg2, int jarg3);
  public final static native void Texture_createShaderAccessPoint__SWIG_4(long jarg1, Texture jarg1_, long jarg2);
  public final static native long new_GpuProgramPtr__SWIG_1();
  public final static native long new_GpuProgramPtr__SWIG_2(long jarg1, GpuProgramPtr jarg1_);
  public final static native void delete_GpuProgramPtr(long jarg1);
  public final static native long GpuProgramPtr___ref__(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr___deref__(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_get(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_unique(long jarg1, GpuProgramPtr jarg1_);
  public final static native int GpuProgramPtr_use_count(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_reset__SWIG_0(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_reset__SWIG_1(long jarg1, GpuProgramPtr jarg1_, long jarg2, GpuProgram jarg2_);
  public final static native String GpuProgramPtr_getProgramTypeName(long jarg1, GpuProgramPtr jarg1_, int jarg2);
  public final static native void GpuProgramPtr_setSourceFile(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native void GpuProgramPtr_setSource(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native String GpuProgramPtr_getSyntaxCode(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setSyntaxCode(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native String GpuProgramPtr_getSourceFile(long jarg1, GpuProgramPtr jarg1_);
  public final static native String GpuProgramPtr_getSource(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setType(long jarg1, GpuProgramPtr jarg1_, int jarg2);
  public final static native long GpuProgramPtr__getBindingDelegate(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isSupported(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_createParameters(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setSkeletalAnimationIncluded(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean GpuProgramPtr_isSkeletalAnimationIncluded(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setMorphAnimationIncluded(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr_setPoseAnimationIncluded(long jarg1, GpuProgramPtr jarg1_, int jarg2);
  public final static native boolean GpuProgramPtr_isMorphAnimationIncluded(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isPoseAnimationIncluded(long jarg1, GpuProgramPtr jarg1_);
  public final static native int GpuProgramPtr_getNumberOfPosesIncluded(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setVertexTextureFetchRequired(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean GpuProgramPtr_isVertexTextureFetchRequired(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setAdjacencyInfoRequired(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean GpuProgramPtr_isAdjacencyInfoRequired(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setComputeGroupDimensions(long jarg1, GpuProgramPtr jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long GpuProgramPtr_getComputeGroupDimensions(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_getDefaultParameters(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_hasDefaultParameters(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_getPassSurfaceAndLightStates(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_getPassFogStates(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_getPassTransformStates(long jarg1, GpuProgramPtr jarg1_);
  public final static native String GpuProgramPtr_getLanguage(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_hasCompileError(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_resetCompileError(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setManualNamedConstants(long jarg1, GpuProgramPtr jarg1_, long jarg2, GpuNamedConstants jarg2_);
  public final static native void GpuProgramPtr_setManualNamedConstantsFile(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native String GpuProgramPtr_getManualNamedConstantsFile(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_getConstantDefinitions(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_calculateSize(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_prepare__SWIG_0(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr_prepare__SWIG_1(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_load__SWIG_0(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr_load__SWIG_1(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_reload__SWIG_0(long jarg1, GpuProgramPtr jarg1_, int jarg2);
  public final static native void GpuProgramPtr_reload__SWIG_1(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isReloadable(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isManuallyLoaded(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_unload(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_getSize(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_touch(long jarg1, GpuProgramPtr jarg1_);
  public final static native String GpuProgramPtr_getName(long jarg1, GpuProgramPtr jarg1_);
  public final static native java.math.BigInteger GpuProgramPtr_getHandle(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isPrepared(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isLoaded(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isLoading(long jarg1, GpuProgramPtr jarg1_);
  public final static native int GpuProgramPtr_getLoadingState(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_isBackgroundLoaded(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_setBackgroundLoaded(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr_escalateLoading(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_addListener(long jarg1, GpuProgramPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void GpuProgramPtr_removeListener(long jarg1, GpuProgramPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String GpuProgramPtr_getGroup(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr_changeGroupOwnership(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native long GpuProgramPtr_getCreator(long jarg1, GpuProgramPtr jarg1_);
  public final static native String GpuProgramPtr_getOrigin(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr__notifyOrigin(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native long GpuProgramPtr_getStateCount(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr__dirtyState(long jarg1, GpuProgramPtr jarg1_);
  public final static native void GpuProgramPtr__fireLoadingComplete(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr__firePreparingComplete(long jarg1, GpuProgramPtr jarg1_, boolean jarg2);
  public final static native void GpuProgramPtr__fireUnloadingComplete(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_getParamDictionary__SWIG_0(long jarg1, GpuProgramPtr jarg1_);
  public final static native long GpuProgramPtr_getParameters(long jarg1, GpuProgramPtr jarg1_);
  public final static native boolean GpuProgramPtr_setParameter(long jarg1, GpuProgramPtr jarg1_, String jarg2, String jarg3);
  public final static native void GpuProgramPtr_setParameterList(long jarg1, GpuProgramPtr jarg1_, long jarg2);
  public final static native String GpuProgramPtr_getParameter(long jarg1, GpuProgramPtr jarg1_, String jarg2);
  public final static native void GpuProgramPtr_copyParametersTo(long jarg1, GpuProgramPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void GpuProgramPtr_cleanupDictionary(long jarg1, GpuProgramPtr jarg1_);
  public final static native int GPT_VERTEX_PROGRAM_get();
  public final static native String GpuProgram_getProgramTypeName(int jarg1);
  public final static native void delete_GpuProgram(long jarg1);
  public final static native void GpuProgram_setSourceFile(long jarg1, GpuProgram jarg1_, String jarg2);
  public final static native void GpuProgram_setSource(long jarg1, GpuProgram jarg1_, String jarg2);
  public final static native String GpuProgram_getSyntaxCode(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setSyntaxCode(long jarg1, GpuProgram jarg1_, String jarg2);
  public final static native String GpuProgram_getSourceFile(long jarg1, GpuProgram jarg1_);
  public final static native String GpuProgram_getSource(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setType(long jarg1, GpuProgram jarg1_, int jarg2);
  public final static native long GpuProgram__getBindingDelegate(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_isSupported(long jarg1, GpuProgram jarg1_);
  public final static native long GpuProgram_createParameters(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setSkeletalAnimationIncluded(long jarg1, GpuProgram jarg1_, boolean jarg2);
  public final static native boolean GpuProgram_isSkeletalAnimationIncluded(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setMorphAnimationIncluded(long jarg1, GpuProgram jarg1_, boolean jarg2);
  public final static native void GpuProgram_setPoseAnimationIncluded(long jarg1, GpuProgram jarg1_, int jarg2);
  public final static native boolean GpuProgram_isMorphAnimationIncluded(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_isPoseAnimationIncluded(long jarg1, GpuProgram jarg1_);
  public final static native int GpuProgram_getNumberOfPosesIncluded(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setVertexTextureFetchRequired(long jarg1, GpuProgram jarg1_, boolean jarg2);
  public final static native boolean GpuProgram_isVertexTextureFetchRequired(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setAdjacencyInfoRequired(long jarg1, GpuProgram jarg1_, boolean jarg2);
  public final static native boolean GpuProgram_isAdjacencyInfoRequired(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setComputeGroupDimensions(long jarg1, GpuProgram jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long GpuProgram_getComputeGroupDimensions(long jarg1, GpuProgram jarg1_);
  public final static native long GpuProgram_getDefaultParameters(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_hasDefaultParameters(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_getPassSurfaceAndLightStates(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_getPassFogStates(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_getPassTransformStates(long jarg1, GpuProgram jarg1_);
  public final static native String GpuProgram_getLanguage(long jarg1, GpuProgram jarg1_);
  public final static native boolean GpuProgram_hasCompileError(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_resetCompileError(long jarg1, GpuProgram jarg1_);
  public final static native void GpuProgram_setManualNamedConstants(long jarg1, GpuProgram jarg1_, long jarg2, GpuNamedConstants jarg2_);
  public final static native void GpuProgram_setManualNamedConstantsFile(long jarg1, GpuProgram jarg1_, String jarg2);
  public final static native String GpuProgram_getManualNamedConstantsFile(long jarg1, GpuProgram jarg1_);
  public final static native long GpuProgram_getConstantDefinitions(long jarg1, GpuProgram jarg1_);
  public final static native long GpuProgram_calculateSize(long jarg1, GpuProgram jarg1_);
  public final static native long new_HighLevelGpuProgramPtr__SWIG_1();
  public final static native long new_HighLevelGpuProgramPtr__SWIG_2(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void delete_HighLevelGpuProgramPtr(long jarg1);
  public final static native long HighLevelGpuProgramPtr___ref__(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr___deref__(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_get(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_unique(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native int HighLevelGpuProgramPtr_use_count(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_reset__SWIG_0(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_reset__SWIG_1(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, HighLevelGpuProgram jarg2_);
  public final static native long HighLevelGpuProgramPtr_createParameters(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr__getBindingDelegate(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_getConstantDefinitions(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_calculateSize(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setPreprocessorDefines(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native String HighLevelGpuProgramPtr_getPreprocessorDefines(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native String HighLevelGpuProgramPtr_getProgramTypeName(long jarg1, HighLevelGpuProgramPtr jarg1_, int jarg2);
  public final static native void HighLevelGpuProgramPtr_setSourceFile(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native void HighLevelGpuProgramPtr_setSource(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native String HighLevelGpuProgramPtr_getSyntaxCode(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setSyntaxCode(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native String HighLevelGpuProgramPtr_getSourceFile(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native String HighLevelGpuProgramPtr_getSource(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setType(long jarg1, HighLevelGpuProgramPtr jarg1_, int jarg2);
  public final static native boolean HighLevelGpuProgramPtr_isSupported(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setSkeletalAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean HighLevelGpuProgramPtr_isSkeletalAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setMorphAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr_setPoseAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_, int jarg2);
  public final static native boolean HighLevelGpuProgramPtr_isMorphAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isPoseAnimationIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native int HighLevelGpuProgramPtr_getNumberOfPosesIncluded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setVertexTextureFetchRequired(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean HighLevelGpuProgramPtr_isVertexTextureFetchRequired(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setAdjacencyInfoRequired(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native boolean HighLevelGpuProgramPtr_isAdjacencyInfoRequired(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setComputeGroupDimensions(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long HighLevelGpuProgramPtr_getComputeGroupDimensions(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_getDefaultParameters(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_hasDefaultParameters(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_getPassSurfaceAndLightStates(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_getPassFogStates(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_getPassTransformStates(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native String HighLevelGpuProgramPtr_getLanguage(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_hasCompileError(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_resetCompileError(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setManualNamedConstants(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, GpuNamedConstants jarg2_);
  public final static native void HighLevelGpuProgramPtr_setManualNamedConstantsFile(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native String HighLevelGpuProgramPtr_getManualNamedConstantsFile(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_prepare__SWIG_0(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr_prepare__SWIG_1(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_load__SWIG_0(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr_load__SWIG_1(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_reload__SWIG_0(long jarg1, HighLevelGpuProgramPtr jarg1_, int jarg2);
  public final static native void HighLevelGpuProgramPtr_reload__SWIG_1(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isReloadable(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isManuallyLoaded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_unload(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_getSize(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_touch(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native String HighLevelGpuProgramPtr_getName(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native java.math.BigInteger HighLevelGpuProgramPtr_getHandle(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isPrepared(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isLoaded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isLoading(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native int HighLevelGpuProgramPtr_getLoadingState(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_isBackgroundLoaded(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_setBackgroundLoaded(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr_escalateLoading(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_addListener(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void HighLevelGpuProgramPtr_removeListener(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String HighLevelGpuProgramPtr_getGroup(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr_changeGroupOwnership(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native long HighLevelGpuProgramPtr_getCreator(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native String HighLevelGpuProgramPtr_getOrigin(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr__notifyOrigin(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native long HighLevelGpuProgramPtr_getStateCount(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr__dirtyState(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void HighLevelGpuProgramPtr__fireLoadingComplete(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr__firePreparingComplete(long jarg1, HighLevelGpuProgramPtr jarg1_, boolean jarg2);
  public final static native void HighLevelGpuProgramPtr__fireUnloadingComplete(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_getParamDictionary__SWIG_0(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native long HighLevelGpuProgramPtr_getParameters(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native boolean HighLevelGpuProgramPtr_setParameter(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2, String jarg3);
  public final static native void HighLevelGpuProgramPtr_setParameterList(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2);
  public final static native String HighLevelGpuProgramPtr_getParameter(long jarg1, HighLevelGpuProgramPtr jarg1_, String jarg2);
  public final static native void HighLevelGpuProgramPtr_copyParametersTo(long jarg1, HighLevelGpuProgramPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void HighLevelGpuProgramPtr_cleanupDictionary(long jarg1, HighLevelGpuProgramPtr jarg1_);
  public final static native void delete_HighLevelGpuProgram(long jarg1);
  public final static native long HighLevelGpuProgram_createParameters(long jarg1, HighLevelGpuProgram jarg1_);
  public final static native long HighLevelGpuProgram__getBindingDelegate(long jarg1, HighLevelGpuProgram jarg1_);
  public final static native long HighLevelGpuProgram_getConstantDefinitions(long jarg1, HighLevelGpuProgram jarg1_);
  public final static native long HighLevelGpuProgram_calculateSize(long jarg1, HighLevelGpuProgram jarg1_);
  public final static native void HighLevelGpuProgram_setPreprocessorDefines(long jarg1, HighLevelGpuProgram jarg1_, String jarg2);
  public final static native String HighLevelGpuProgram_getPreprocessorDefines(long jarg1, HighLevelGpuProgram jarg1_);
  public final static native void ConcreteNode_token_set(long jarg1, ConcreteNode jarg1_, String jarg2);
  public final static native String ConcreteNode_token_get(long jarg1, ConcreteNode jarg1_);
  public final static native void ConcreteNode_file_set(long jarg1, ConcreteNode jarg1_, String jarg2);
  public final static native String ConcreteNode_file_get(long jarg1, ConcreteNode jarg1_);
  public final static native void ConcreteNode_line_set(long jarg1, ConcreteNode jarg1_, long jarg2);
  public final static native long ConcreteNode_line_get(long jarg1, ConcreteNode jarg1_);
  public final static native void ConcreteNode_type_set(long jarg1, ConcreteNode jarg1_, int jarg2);
  public final static native int ConcreteNode_type_get(long jarg1, ConcreteNode jarg1_);
  public final static native void ConcreteNode_children_set(long jarg1, ConcreteNode jarg1_, long jarg2);
  public final static native long ConcreteNode_children_get(long jarg1, ConcreteNode jarg1_);
  public final static native void ConcreteNode_parent_set(long jarg1, ConcreteNode jarg1_, long jarg2, ConcreteNode jarg2_);
  public final static native long ConcreteNode_parent_get(long jarg1, ConcreteNode jarg1_);
  public final static native long new_ConcreteNode();
  public final static native void delete_ConcreteNode(long jarg1);
  public final static native void AbstractNode_file_set(long jarg1, AbstractNode jarg1_, String jarg2);
  public final static native String AbstractNode_file_get(long jarg1, AbstractNode jarg1_);
  public final static native void AbstractNode_line_set(long jarg1, AbstractNode jarg1_, long jarg2);
  public final static native long AbstractNode_line_get(long jarg1, AbstractNode jarg1_);
  public final static native void AbstractNode_type_set(long jarg1, AbstractNode jarg1_, int jarg2);
  public final static native int AbstractNode_type_get(long jarg1, AbstractNode jarg1_);
  public final static native void AbstractNode_parent_set(long jarg1, AbstractNode jarg1_, long jarg2, AbstractNode jarg2_);
  public final static native long AbstractNode_parent_get(long jarg1, AbstractNode jarg1_);
  public final static native void AbstractNode_context_set(long jarg1, AbstractNode jarg1_, long jarg2, Any jarg2_);
  public final static native long AbstractNode_context_get(long jarg1, AbstractNode jarg1_);
  public final static native void delete_AbstractNode(long jarg1);
  public final static native long AbstractNode_clone(long jarg1, AbstractNode jarg1_);
  public final static native String AbstractNode_getValue(long jarg1, AbstractNode jarg1_);
  public final static native void AtomAbstractNode_value_set(long jarg1, AtomAbstractNode jarg1_, String jarg2);
  public final static native String AtomAbstractNode_value_get(long jarg1, AtomAbstractNode jarg1_);
  public final static native void AtomAbstractNode_id_set(long jarg1, AtomAbstractNode jarg1_, long jarg2);
  public final static native long AtomAbstractNode_id_get(long jarg1, AtomAbstractNode jarg1_);
  public final static native long new_AtomAbstractNode(long jarg1, AbstractNode jarg1_);
  public final static native long AtomAbstractNode_clone(long jarg1, AtomAbstractNode jarg1_);
  public final static native void delete_AtomAbstractNode(long jarg1);
  public final static native void ObjectAbstractNode_name_set(long jarg1, ObjectAbstractNode jarg1_, String jarg2);
  public final static native String ObjectAbstractNode_name_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_cls_set(long jarg1, ObjectAbstractNode jarg1_, String jarg2);
  public final static native String ObjectAbstractNode_cls_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_bases_set(long jarg1, ObjectAbstractNode jarg1_, long jarg2, StringVector jarg2_);
  public final static native long ObjectAbstractNode_bases_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_id_set(long jarg1, ObjectAbstractNode jarg1_, long jarg2);
  public final static native long ObjectAbstractNode_id_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode__abstract_set(long jarg1, ObjectAbstractNode jarg1_, boolean jarg2);
  public final static native boolean ObjectAbstractNode__abstract_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_children_set(long jarg1, ObjectAbstractNode jarg1_, long jarg2);
  public final static native long ObjectAbstractNode_children_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_values_set(long jarg1, ObjectAbstractNode jarg1_, long jarg2);
  public final static native long ObjectAbstractNode_values_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_overrides_set(long jarg1, ObjectAbstractNode jarg1_, long jarg2);
  public final static native long ObjectAbstractNode_overrides_get(long jarg1, ObjectAbstractNode jarg1_);
  public final static native long new_ObjectAbstractNode(long jarg1, AbstractNode jarg1_);
  public final static native long ObjectAbstractNode_clone(long jarg1, ObjectAbstractNode jarg1_);
  public final static native String ObjectAbstractNode_getValue(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void ObjectAbstractNode_addVariable(long jarg1, ObjectAbstractNode jarg1_, String jarg2);
  public final static native void ObjectAbstractNode_setVariable(long jarg1, ObjectAbstractNode jarg1_, String jarg2, String jarg3);
  public final static native long ObjectAbstractNode_getVariable(long jarg1, ObjectAbstractNode jarg1_, String jarg2);
  public final static native long ObjectAbstractNode_getVariables(long jarg1, ObjectAbstractNode jarg1_);
  public final static native void delete_ObjectAbstractNode(long jarg1);
  public final static native void PropertyAbstractNode_name_set(long jarg1, PropertyAbstractNode jarg1_, String jarg2);
  public final static native String PropertyAbstractNode_name_get(long jarg1, PropertyAbstractNode jarg1_);
  public final static native void PropertyAbstractNode_id_set(long jarg1, PropertyAbstractNode jarg1_, long jarg2);
  public final static native long PropertyAbstractNode_id_get(long jarg1, PropertyAbstractNode jarg1_);
  public final static native void PropertyAbstractNode_values_set(long jarg1, PropertyAbstractNode jarg1_, long jarg2);
  public final static native long PropertyAbstractNode_values_get(long jarg1, PropertyAbstractNode jarg1_);
  public final static native long new_PropertyAbstractNode(long jarg1, AbstractNode jarg1_);
  public final static native long PropertyAbstractNode_clone(long jarg1, PropertyAbstractNode jarg1_);
  public final static native String PropertyAbstractNode_getValue(long jarg1, PropertyAbstractNode jarg1_);
  public final static native void delete_PropertyAbstractNode(long jarg1);
  public final static native void ImportAbstractNode_target_set(long jarg1, ImportAbstractNode jarg1_, String jarg2);
  public final static native String ImportAbstractNode_target_get(long jarg1, ImportAbstractNode jarg1_);
  public final static native void ImportAbstractNode_source_set(long jarg1, ImportAbstractNode jarg1_, String jarg2);
  public final static native String ImportAbstractNode_source_get(long jarg1, ImportAbstractNode jarg1_);
  public final static native long new_ImportAbstractNode();
  public final static native long ImportAbstractNode_clone(long jarg1, ImportAbstractNode jarg1_);
  public final static native String ImportAbstractNode_getValue(long jarg1, ImportAbstractNode jarg1_);
  public final static native void delete_ImportAbstractNode(long jarg1);
  public final static native void VariableAccessAbstractNode_name_set(long jarg1, VariableAccessAbstractNode jarg1_, String jarg2);
  public final static native String VariableAccessAbstractNode_name_get(long jarg1, VariableAccessAbstractNode jarg1_);
  public final static native long new_VariableAccessAbstractNode(long jarg1, AbstractNode jarg1_);
  public final static native long VariableAccessAbstractNode_clone(long jarg1, VariableAccessAbstractNode jarg1_);
  public final static native String VariableAccessAbstractNode_getValue(long jarg1, VariableAccessAbstractNode jarg1_);
  public final static native void delete_VariableAccessAbstractNode(long jarg1);
  public final static native void ScriptCompiler_Error_file_set(long jarg1, ScriptCompiler.Error jarg1_, String jarg2);
  public final static native String ScriptCompiler_Error_file_get(long jarg1, ScriptCompiler.Error jarg1_);
  public final static native void ScriptCompiler_Error_message_set(long jarg1, ScriptCompiler.Error jarg1_, String jarg2);
  public final static native String ScriptCompiler_Error_message_get(long jarg1, ScriptCompiler.Error jarg1_);
  public final static native void ScriptCompiler_Error_line_set(long jarg1, ScriptCompiler.Error jarg1_, int jarg2);
  public final static native int ScriptCompiler_Error_line_get(long jarg1, ScriptCompiler.Error jarg1_);
  public final static native void ScriptCompiler_Error_code_set(long jarg1, ScriptCompiler.Error jarg1_, long jarg2);
  public final static native long ScriptCompiler_Error_code_get(long jarg1, ScriptCompiler.Error jarg1_);
  public final static native long new_ScriptCompiler_Error();
  public final static native void delete_ScriptCompiler_Error(long jarg1);
  public final static native int ScriptCompiler_CE_STRINGEXPECTED_get();
  public final static native int ScriptCompiler_CE_NUMBEREXPECTED_get();
  public final static native int ScriptCompiler_CE_FEWERPARAMETERSEXPECTED_get();
  public final static native int ScriptCompiler_CE_VARIABLEEXPECTED_get();
  public final static native int ScriptCompiler_CE_UNDEFINEDVARIABLE_get();
  public final static native int ScriptCompiler_CE_OBJECTNAMEEXPECTED_get();
  public final static native int ScriptCompiler_CE_OBJECTALLOCATIONERROR_get();
  public final static native int ScriptCompiler_CE_INVALIDPARAMETERS_get();
  public final static native int ScriptCompiler_CE_DUPLICATEOVERRIDE_get();
  public final static native int ScriptCompiler_CE_UNEXPECTEDTOKEN_get();
  public final static native int ScriptCompiler_CE_OBJECTBASENOTFOUND_get();
  public final static native int ScriptCompiler_CE_UNSUPPORTEDBYRENDERSYSTEM_get();
  public final static native int ScriptCompiler_CE_REFERENCETOANONEXISTINGOBJECT_get();
  public final static native String ScriptCompiler_formatErrorCode(long jarg1);
  public final static native long new_ScriptCompiler();
  public final static native void delete_ScriptCompiler(long jarg1);
  public final static native boolean ScriptCompiler_compile__SWIG_0(long jarg1, ScriptCompiler jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean ScriptCompiler_compile__SWIG_1(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3);
  public final static native long ScriptCompiler__generateAST__SWIG_0(long jarg1, ScriptCompiler jarg1_, String jarg2, String jarg3, boolean jarg4, boolean jarg5, boolean jarg6);
  public final static native long ScriptCompiler__generateAST__SWIG_1(long jarg1, ScriptCompiler jarg1_, String jarg2, String jarg3, boolean jarg4, boolean jarg5);
  public final static native long ScriptCompiler__generateAST__SWIG_2(long jarg1, ScriptCompiler jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ScriptCompiler__generateAST__SWIG_3(long jarg1, ScriptCompiler jarg1_, String jarg2, String jarg3);
  public final static native boolean ScriptCompiler__compile__SWIG_0(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3, boolean jarg4, boolean jarg5, boolean jarg6);
  public final static native boolean ScriptCompiler__compile__SWIG_1(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3, boolean jarg4, boolean jarg5);
  public final static native boolean ScriptCompiler__compile__SWIG_2(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native boolean ScriptCompiler__compile__SWIG_3(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3);
  public final static native void ScriptCompiler_addError__SWIG_0(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void ScriptCompiler_addError__SWIG_1(long jarg1, ScriptCompiler jarg1_, long jarg2, String jarg3, int jarg4);
  public final static native void ScriptCompiler_setListener(long jarg1, ScriptCompiler jarg1_, long jarg2, ScriptCompilerListener jarg2_);
  public final static native long ScriptCompiler_getListener(long jarg1, ScriptCompiler jarg1_);
  public final static native String ScriptCompiler_getResourceGroup(long jarg1, ScriptCompiler jarg1_);
  public final static native boolean ScriptCompiler__fireEvent(long jarg1, ScriptCompiler jarg1_, long jarg2, ScriptCompilerEvent jarg2_, long jarg3);
  public final static native long ScriptCompiler_registerCustomWordId(long jarg1, ScriptCompiler jarg1_, String jarg2);
  public final static native int ScriptCompiler_ID_ON_get();
  public final static native int ScriptCompiler_ID_OFF_get();
  public final static native int ScriptCompiler_ID_TRUE_get();
  public final static native int ScriptCompiler_ID_FALSE_get();
  public final static native int ScriptCompiler_ID_YES_get();
  public final static native int ScriptCompiler_ID_NO_get();
  public final static native void ScriptCompilerEvent_mType_set(long jarg1, ScriptCompilerEvent jarg1_, String jarg2);
  public final static native String ScriptCompilerEvent_mType_get(long jarg1, ScriptCompilerEvent jarg1_);
  public final static native long new_ScriptCompilerEvent(String jarg1);
  public final static native void delete_ScriptCompilerEvent(long jarg1);
  public final static native long new_ScriptCompilerListener();
  public final static native void delete_ScriptCompilerListener(long jarg1);
  public final static native long ScriptCompilerListener_importFile(long jarg1, ScriptCompilerListener jarg1_, long jarg2, ScriptCompiler jarg2_, String jarg3);
  public final static native void ScriptCompilerListener_preConversion(long jarg1, ScriptCompilerListener jarg1_, long jarg2, ScriptCompiler jarg2_, long jarg3);
  public final static native boolean ScriptCompilerListener_postConversion(long jarg1, ScriptCompilerListener jarg1_, long jarg2, ScriptCompiler jarg2_, long jarg3);
  public final static native void ScriptCompilerListener_handleError(long jarg1, ScriptCompilerListener jarg1_, long jarg2, ScriptCompiler jarg2_, long jarg3, String jarg4, int jarg5, String jarg6);
  public final static native boolean ScriptCompilerListener_handleEvent(long jarg1, ScriptCompilerListener jarg1_, long jarg2, ScriptCompiler jarg2_, long jarg3, ScriptCompilerEvent jarg3_, long jarg4);
  public final static native long new_ScriptCompilerManager();
  public final static native void delete_ScriptCompilerManager(long jarg1);
  public final static native void ScriptCompilerManager_setListener(long jarg1, ScriptCompilerManager jarg1_, long jarg2, ScriptCompilerListener jarg2_);
  public final static native long ScriptCompilerManager_getListener(long jarg1, ScriptCompilerManager jarg1_);
  public final static native void ScriptCompilerManager_addTranslatorManager(long jarg1, ScriptCompilerManager jarg1_, long jarg2);
  public final static native void ScriptCompilerManager_removeTranslatorManager(long jarg1, ScriptCompilerManager jarg1_, long jarg2);
  public final static native void ScriptCompilerManager_clearTranslatorManagers(long jarg1, ScriptCompilerManager jarg1_);
  public final static native long ScriptCompilerManager_getTranslator(long jarg1, ScriptCompilerManager jarg1_, long jarg2);
  public final static native long ScriptCompilerManager_registerCustomWordId(long jarg1, ScriptCompilerManager jarg1_, String jarg2);
  public final static native void ScriptCompilerManager_addScriptPattern(long jarg1, ScriptCompilerManager jarg1_, String jarg2);
  public final static native long ScriptCompilerManager_getScriptPatterns(long jarg1, ScriptCompilerManager jarg1_);
  public final static native void ScriptCompilerManager_parseScript(long jarg1, ScriptCompilerManager jarg1_, long jarg2, String jarg3);
  public final static native float ScriptCompilerManager_getLoadingOrder(long jarg1, ScriptCompilerManager jarg1_);
  public final static native long ScriptCompilerManager_getSingleton();
  public final static native void PreApplyTextureAliasesScriptCompilerEvent_mMaterial_set(long jarg1, PreApplyTextureAliasesScriptCompilerEvent jarg1_, long jarg2, Material jarg2_);
  public final static native long PreApplyTextureAliasesScriptCompilerEvent_mMaterial_get(long jarg1, PreApplyTextureAliasesScriptCompilerEvent jarg1_);
  public final static native void PreApplyTextureAliasesScriptCompilerEvent_mAliases_set(long jarg1, PreApplyTextureAliasesScriptCompilerEvent jarg1_, long jarg2);
  public final static native long PreApplyTextureAliasesScriptCompilerEvent_mAliases_get(long jarg1, PreApplyTextureAliasesScriptCompilerEvent jarg1_);
  public final static native void PreApplyTextureAliasesScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String PreApplyTextureAliasesScriptCompilerEvent_eventType_get();
  public final static native long new_PreApplyTextureAliasesScriptCompilerEvent(long jarg1, Material jarg1_, long jarg2);
  public final static native void delete_PreApplyTextureAliasesScriptCompilerEvent(long jarg1);
  public final static native void ProcessResourceNameScriptCompilerEvent_mResourceType_set(long jarg1, ProcessResourceNameScriptCompilerEvent jarg1_, int jarg2);
  public final static native int ProcessResourceNameScriptCompilerEvent_mResourceType_get(long jarg1, ProcessResourceNameScriptCompilerEvent jarg1_);
  public final static native void ProcessResourceNameScriptCompilerEvent_mName_set(long jarg1, ProcessResourceNameScriptCompilerEvent jarg1_, String jarg2);
  public final static native String ProcessResourceNameScriptCompilerEvent_mName_get(long jarg1, ProcessResourceNameScriptCompilerEvent jarg1_);
  public final static native void ProcessResourceNameScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String ProcessResourceNameScriptCompilerEvent_eventType_get();
  public final static native long new_ProcessResourceNameScriptCompilerEvent(int jarg1, String jarg2);
  public final static native void delete_ProcessResourceNameScriptCompilerEvent(long jarg1);
  public final static native void ProcessNameExclusionScriptCompilerEvent_mClass_set(long jarg1, ProcessNameExclusionScriptCompilerEvent jarg1_, String jarg2);
  public final static native String ProcessNameExclusionScriptCompilerEvent_mClass_get(long jarg1, ProcessNameExclusionScriptCompilerEvent jarg1_);
  public final static native void ProcessNameExclusionScriptCompilerEvent_mParent_set(long jarg1, ProcessNameExclusionScriptCompilerEvent jarg1_, long jarg2, AbstractNode jarg2_);
  public final static native long ProcessNameExclusionScriptCompilerEvent_mParent_get(long jarg1, ProcessNameExclusionScriptCompilerEvent jarg1_);
  public final static native void ProcessNameExclusionScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String ProcessNameExclusionScriptCompilerEvent_eventType_get();
  public final static native long new_ProcessNameExclusionScriptCompilerEvent(String jarg1, long jarg2, AbstractNode jarg2_);
  public final static native void delete_ProcessNameExclusionScriptCompilerEvent(long jarg1);
  public final static native void CreateMaterialScriptCompilerEvent_mFile_set(long jarg1, CreateMaterialScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateMaterialScriptCompilerEvent_mFile_get(long jarg1, CreateMaterialScriptCompilerEvent jarg1_);
  public final static native void CreateMaterialScriptCompilerEvent_mName_set(long jarg1, CreateMaterialScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateMaterialScriptCompilerEvent_mName_get(long jarg1, CreateMaterialScriptCompilerEvent jarg1_);
  public final static native void CreateMaterialScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateMaterialScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateMaterialScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateMaterialScriptCompilerEvent jarg1_);
  public final static native void CreateMaterialScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateMaterialScriptCompilerEvent_eventType_get();
  public final static native long new_CreateMaterialScriptCompilerEvent(String jarg1, String jarg2, String jarg3);
  public final static native void delete_CreateMaterialScriptCompilerEvent(long jarg1);
  public final static native void CreateGpuProgramScriptCompilerEvent_mFile_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuProgramScriptCompilerEvent_mFile_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_mName_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuProgramScriptCompilerEvent_mName_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuProgramScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_mSource_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuProgramScriptCompilerEvent_mSource_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_mSyntax_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuProgramScriptCompilerEvent_mSyntax_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_mProgramType_set(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_, int jarg2);
  public final static native int CreateGpuProgramScriptCompilerEvent_mProgramType_get(long jarg1, CreateGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateGpuProgramScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateGpuProgramScriptCompilerEvent_eventType_get();
  public final static native long new_CreateGpuProgramScriptCompilerEvent(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native void delete_CreateGpuProgramScriptCompilerEvent(long jarg1);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mFile_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_mFile_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mName_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_mName_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mSource_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_mSource_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mLanguage_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_mLanguage_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_mProgramType_set(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_, int jarg2);
  public final static native int CreateHighLevelGpuProgramScriptCompilerEvent_mProgramType_get(long jarg1, CreateHighLevelGpuProgramScriptCompilerEvent jarg1_);
  public final static native void CreateHighLevelGpuProgramScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateHighLevelGpuProgramScriptCompilerEvent_eventType_get();
  public final static native long new_CreateHighLevelGpuProgramScriptCompilerEvent(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, int jarg6);
  public final static native void delete_CreateHighLevelGpuProgramScriptCompilerEvent(long jarg1);
  public final static native void CreateGpuSharedParametersScriptCompilerEvent_mFile_set(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuSharedParametersScriptCompilerEvent_mFile_get(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_);
  public final static native void CreateGpuSharedParametersScriptCompilerEvent_mName_set(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuSharedParametersScriptCompilerEvent_mName_get(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_);
  public final static native void CreateGpuSharedParametersScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateGpuSharedParametersScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateGpuSharedParametersScriptCompilerEvent jarg1_);
  public final static native void CreateGpuSharedParametersScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateGpuSharedParametersScriptCompilerEvent_eventType_get();
  public final static native long new_CreateGpuSharedParametersScriptCompilerEvent(String jarg1, String jarg2, String jarg3);
  public final static native void delete_CreateGpuSharedParametersScriptCompilerEvent(long jarg1);
  public final static native void CreateParticleSystemScriptCompilerEvent_mFile_set(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateParticleSystemScriptCompilerEvent_mFile_get(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_);
  public final static native void CreateParticleSystemScriptCompilerEvent_mName_set(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateParticleSystemScriptCompilerEvent_mName_get(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_);
  public final static native void CreateParticleSystemScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateParticleSystemScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateParticleSystemScriptCompilerEvent jarg1_);
  public final static native void CreateParticleSystemScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateParticleSystemScriptCompilerEvent_eventType_get();
  public final static native long new_CreateParticleSystemScriptCompilerEvent(String jarg1, String jarg2, String jarg3);
  public final static native void delete_CreateParticleSystemScriptCompilerEvent(long jarg1);
  public final static native void CreateCompositorScriptCompilerEvent_mFile_set(long jarg1, CreateCompositorScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateCompositorScriptCompilerEvent_mFile_get(long jarg1, CreateCompositorScriptCompilerEvent jarg1_);
  public final static native void CreateCompositorScriptCompilerEvent_mName_set(long jarg1, CreateCompositorScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateCompositorScriptCompilerEvent_mName_get(long jarg1, CreateCompositorScriptCompilerEvent jarg1_);
  public final static native void CreateCompositorScriptCompilerEvent_mResourceGroup_set(long jarg1, CreateCompositorScriptCompilerEvent jarg1_, String jarg2);
  public final static native String CreateCompositorScriptCompilerEvent_mResourceGroup_get(long jarg1, CreateCompositorScriptCompilerEvent jarg1_);
  public final static native void CreateCompositorScriptCompilerEvent_eventType_set(String jarg1);
  public final static native String CreateCompositorScriptCompilerEvent_eventType_get();
  public final static native long new_CreateCompositorScriptCompilerEvent(String jarg1, String jarg2, String jarg3);
  public final static native void delete_CreateCompositorScriptCompilerEvent(long jarg1);
  public final static native int ID_MATERIAL_get();
  public final static native int ID_VERTEX_PROGRAM_get();
  public final static native int ID_GEOMETRY_PROGRAM_get();
  public final static native int ID_FRAGMENT_PROGRAM_get();
  public final static native int ID_TECHNIQUE_get();
  public final static native int ID_PASS_get();
  public final static native int ID_TEXTURE_UNIT_get();
  public final static native int ID_VERTEX_PROGRAM_REF_get();
  public final static native int ID_GEOMETRY_PROGRAM_REF_get();
  public final static native int ID_FRAGMENT_PROGRAM_REF_get();
  public final static native int ID_SHADOW_CASTER_VERTEX_PROGRAM_REF_get();
  public final static native int ID_SHADOW_CASTER_FRAGMENT_PROGRAM_REF_get();
  public final static native int ID_SHADOW_RECEIVER_VERTEX_PROGRAM_REF_get();
  public final static native int ID_SHADOW_RECEIVER_FRAGMENT_PROGRAM_REF_get();
  public final static native int ID_SHADOW_CASTER_MATERIAL_get();
  public final static native int ID_SHADOW_RECEIVER_MATERIAL_get();
  public final static native int ID_LOD_VALUES_get();
  public final static native int ID_LOD_STRATEGY_get();
  public final static native int ID_LOD_DISTANCES_get();
  public final static native int ID_RECEIVE_SHADOWS_get();
  public final static native int ID_TRANSPARENCY_CASTS_SHADOWS_get();
  public final static native int ID_SET_TEXTURE_ALIAS_get();
  public final static native int ID_SOURCE_get();
  public final static native int ID_SYNTAX_get();
  public final static native int ID_DEFAULT_PARAMS_get();
  public final static native int ID_PARAM_INDEXED_get();
  public final static native int ID_PARAM_NAMED_get();
  public final static native int ID_PARAM_INDEXED_AUTO_get();
  public final static native int ID_PARAM_NAMED_AUTO_get();
  public final static native int ID_SCHEME_get();
  public final static native int ID_LOD_INDEX_get();
  public final static native int ID_GPU_VENDOR_RULE_get();
  public final static native int ID_GPU_DEVICE_RULE_get();
  public final static native int ID_INCLUDE_get();
  public final static native int ID_EXCLUDE_get();
  public final static native int ID_AMBIENT_get();
  public final static native int ID_DIFFUSE_get();
  public final static native int ID_SPECULAR_get();
  public final static native int ID_EMISSIVE_get();
  public final static native int ID_VERTEXCOLOUR_get();
  public final static native int ID_SCENE_BLEND_get();
  public final static native int ID_COLOUR_BLEND_get();
  public final static native int ID_ONE_get();
  public final static native int ID_ZERO_get();
  public final static native int ID_DEST_COLOUR_get();
  public final static native int ID_SRC_COLOUR_get();
  public final static native int ID_ONE_MINUS_DEST_COLOUR_get();
  public final static native int ID_ONE_MINUS_SRC_COLOUR_get();
  public final static native int ID_DEST_ALPHA_get();
  public final static native int ID_SRC_ALPHA_get();
  public final static native int ID_ONE_MINUS_DEST_ALPHA_get();
  public final static native int ID_ONE_MINUS_SRC_ALPHA_get();
  public final static native int ID_SEPARATE_SCENE_BLEND_get();
  public final static native int ID_SCENE_BLEND_OP_get();
  public final static native int ID_REVERSE_SUBTRACT_get();
  public final static native int ID_MIN_get();
  public final static native int ID_MAX_get();
  public final static native int ID_SEPARATE_SCENE_BLEND_OP_get();
  public final static native int ID_DEPTH_CHECK_get();
  public final static native int ID_DEPTH_WRITE_get();
  public final static native int ID_DEPTH_FUNC_get();
  public final static native int ID_DEPTH_BIAS_get();
  public final static native int ID_ITERATION_DEPTH_BIAS_get();
  public final static native int ID_ALWAYS_FAIL_get();
  public final static native int ID_ALWAYS_PASS_get();
  public final static native int ID_LESS_EQUAL_get();
  public final static native int ID_LESS_get();
  public final static native int ID_EQUAL_get();
  public final static native int ID_NOT_EQUAL_get();
  public final static native int ID_GREATER_EQUAL_get();
  public final static native int ID_GREATER_get();
  public final static native int ID_ALPHA_REJECTION_get();
  public final static native int ID_ALPHA_TO_COVERAGE_get();
  public final static native int ID_LIGHT_SCISSOR_get();
  public final static native int ID_LIGHT_CLIP_PLANES_get();
  public final static native int ID_TRANSPARENT_SORTING_get();
  public final static native int ID_ILLUMINATION_STAGE_get();
  public final static native int ID_DECAL_get();
  public final static native int ID_CULL_HARDWARE_get();
  public final static native int ID_CLOCKWISE_get();
  public final static native int ID_ANTICLOCKWISE_get();
  public final static native int ID_CULL_SOFTWARE_get();
  public final static native int ID_BACK_get();
  public final static native int ID_FRONT_get();
  public final static native int ID_NORMALISE_NORMALS_get();
  public final static native int ID_LIGHTING_get();
  public final static native int ID_SHADING_get();
  public final static native int ID_FLAT_get();
  public final static native int ID_GOURAUD_get();
  public final static native int ID_PHONG_get();
  public final static native int ID_POLYGON_MODE_get();
  public final static native int ID_SOLID_get();
  public final static native int ID_WIREFRAME_get();
  public final static native int ID_POINTS_get();
  public final static native int ID_POLYGON_MODE_OVERRIDEABLE_get();
  public final static native int ID_FOG_OVERRIDE_get();
  public final static native int ID_NONE_get();
  public final static native int ID_LINEAR_get();
  public final static native int ID_EXP_get();
  public final static native int ID_EXP2_get();
  public final static native int ID_COLOUR_WRITE_get();
  public final static native int ID_MAX_LIGHTS_get();
  public final static native int ID_START_LIGHT_get();
  public final static native int ID_ITERATION_get();
  public final static native int ID_ONCE_get();
  public final static native int ID_ONCE_PER_LIGHT_get();
  public final static native int ID_PER_LIGHT_get();
  public final static native int ID_PER_N_LIGHTS_get();
  public final static native int ID_POINT_get();
  public final static native int ID_SPOT_get();
  public final static native int ID_DIRECTIONAL_get();
  public final static native int ID_LIGHT_MASK_get();
  public final static native int ID_POINT_SIZE_get();
  public final static native int ID_POINT_SPRITES_get();
  public final static native int ID_POINT_SIZE_ATTENUATION_get();
  public final static native int ID_POINT_SIZE_MIN_get();
  public final static native int ID_POINT_SIZE_MAX_get();
  public final static native int ID_TEXTURE_ALIAS_get();
  public final static native int ID_TEXTURE_get();
  public final static native int ID_1D_get();
  public final static native int ID_2D_get();
  public final static native int ID_3D_get();
  public final static native int ID_CUBIC_get();
  public final static native int ID_2DARRAY_get();
  public final static native int ID_UNLIMITED_get();
  public final static native int ID_ALPHA_get();
  public final static native int ID_GAMMA_get();
  public final static native int ID_ANIM_TEXTURE_get();
  public final static native int ID_CUBIC_TEXTURE_get();
  public final static native int ID_SEPARATE_UV_get();
  public final static native int ID_COMBINED_UVW_get();
  public final static native int ID_TEX_COORD_SET_get();
  public final static native int ID_TEX_ADDRESS_MODE_get();
  public final static native int ID_WRAP_get();
  public final static native int ID_CLAMP_get();
  public final static native int ID_BORDER_get();
  public final static native int ID_MIRROR_get();
  public final static native int ID_TEX_BORDER_COLOUR_get();
  public final static native int ID_FILTERING_get();
  public final static native int ID_BILINEAR_get();
  public final static native int ID_TRILINEAR_get();
  public final static native int ID_ANISOTROPIC_get();
  public final static native int ID_CMPTEST_get();
  public final static native int ID_ON_get();
  public final static native int ID_OFF_get();
  public final static native int ID_CMPFUNC_get();
  public final static native int ID_MAX_ANISOTROPY_get();
  public final static native int ID_MIPMAP_BIAS_get();
  public final static native int ID_COLOUR_OP_get();
  public final static native int ID_REPLACE_get();
  public final static native int ID_ADD_get();
  public final static native int ID_MODULATE_get();
  public final static native int ID_ALPHA_BLEND_get();
  public final static native int ID_COLOUR_OP_EX_get();
  public final static native int ID_SOURCE1_get();
  public final static native int ID_SOURCE2_get();
  public final static native int ID_MODULATE_X2_get();
  public final static native int ID_MODULATE_X4_get();
  public final static native int ID_ADD_SIGNED_get();
  public final static native int ID_ADD_SMOOTH_get();
  public final static native int ID_SUBTRACT_get();
  public final static native int ID_BLEND_DIFFUSE_COLOUR_get();
  public final static native int ID_BLEND_DIFFUSE_ALPHA_get();
  public final static native int ID_BLEND_TEXTURE_ALPHA_get();
  public final static native int ID_BLEND_CURRENT_ALPHA_get();
  public final static native int ID_BLEND_MANUAL_get();
  public final static native int ID_DOT_PRODUCT_get();
  public final static native int ID_SRC_CURRENT_get();
  public final static native int ID_SRC_TEXTURE_get();
  public final static native int ID_SRC_DIFFUSE_get();
  public final static native int ID_SRC_SPECULAR_get();
  public final static native int ID_SRC_MANUAL_get();
  public final static native int ID_COLOUR_OP_MULTIPASS_FALLBACK_get();
  public final static native int ID_ALPHA_OP_EX_get();
  public final static native int ID_ENV_MAP_get();
  public final static native int ID_SPHERICAL_get();
  public final static native int ID_PLANAR_get();
  public final static native int ID_CUBIC_REFLECTION_get();
  public final static native int ID_CUBIC_NORMAL_get();
  public final static native int ID_SCROLL_get();
  public final static native int ID_SCROLL_ANIM_get();
  public final static native int ID_ROTATE_get();
  public final static native int ID_ROTATE_ANIM_get();
  public final static native int ID_SCALE_get();
  public final static native int ID_WAVE_XFORM_get();
  public final static native int ID_SCROLL_X_get();
  public final static native int ID_SCROLL_Y_get();
  public final static native int ID_SCALE_X_get();
  public final static native int ID_SCALE_Y_get();
  public final static native int ID_SINE_get();
  public final static native int ID_TRIANGLE_get();
  public final static native int ID_SQUARE_get();
  public final static native int ID_SAWTOOTH_get();
  public final static native int ID_INVERSE_SAWTOOTH_get();
  public final static native int ID_TRANSFORM_get();
  public final static native int ID_BINDING_TYPE_get();
  public final static native int ID_VERTEX_get();
  public final static native int ID_FRAGMENT_get();
  public final static native int ID_CONTENT_TYPE_get();
  public final static native int ID_NAMED_get();
  public final static native int ID_SHADOW_get();
  public final static native int ID_TEXTURE_SOURCE_get();
  public final static native int ID_SHARED_PARAMS_get();
  public final static native int ID_SHARED_PARAM_NAMED_get();
  public final static native int ID_SHARED_PARAMS_REF_get();
  public final static native int ID_PARTICLE_SYSTEM_get();
  public final static native int ID_EMITTER_get();
  public final static native int ID_AFFECTOR_get();
  public final static native int ID_COMPOSITOR_get();
  public final static native int ID_TARGET_get();
  public final static native int ID_TARGET_OUTPUT_get();
  public final static native int ID_INPUT_get();
  public final static native int ID_PREVIOUS_get();
  public final static native int ID_TARGET_WIDTH_get();
  public final static native int ID_TARGET_HEIGHT_get();
  public final static native int ID_TARGET_WIDTH_SCALED_get();
  public final static native int ID_TARGET_HEIGHT_SCALED_get();
  public final static native int ID_COMPOSITOR_LOGIC_get();
  public final static native int ID_TEXTURE_REF_get();
  public final static native int ID_SCOPE_LOCAL_get();
  public final static native int ID_SCOPE_CHAIN_get();
  public final static native int ID_SCOPE_GLOBAL_get();
  public final static native int ID_POOLED_get();
  public final static native int ID_NO_FSAA_get();
  public final static native int ID_DEPTH_POOL_get();
  public final static native int ID_ONLY_INITIAL_get();
  public final static native int ID_VISIBILITY_MASK_get();
  public final static native int ID_LOD_BIAS_get();
  public final static native int ID_MATERIAL_SCHEME_get();
  public final static native int ID_SHADOWS_ENABLED_get();
  public final static native int ID_CLEAR_get();
  public final static native int ID_STENCIL_get();
  public final static native int ID_RENDER_SCENE_get();
  public final static native int ID_RENDER_QUAD_get();
  public final static native int ID_IDENTIFIER_get();
  public final static native int ID_FIRST_RENDER_QUEUE_get();
  public final static native int ID_LAST_RENDER_QUEUE_get();
  public final static native int ID_QUAD_NORMALS_get();
  public final static native int ID_CAMERA_FAR_CORNERS_VIEW_SPACE_get();
  public final static native int ID_CAMERA_FAR_CORNERS_WORLD_SPACE_get();
  public final static native int ID_BUFFERS_get();
  public final static native int ID_COLOUR_get();
  public final static native int ID_DEPTH_get();
  public final static native int ID_COLOUR_VALUE_get();
  public final static native int ID_DEPTH_VALUE_get();
  public final static native int ID_STENCIL_VALUE_get();
  public final static native int ID_CHECK_get();
  public final static native int ID_COMP_FUNC_get();
  public final static native int ID_REF_VALUE_get();
  public final static native int ID_MASK_get();
  public final static native int ID_FAIL_OP_get();
  public final static native int ID_KEEP_get();
  public final static native int ID_INCREMENT_get();
  public final static native int ID_DECREMENT_get();
  public final static native int ID_INCREMENT_WRAP_get();
  public final static native int ID_DECREMENT_WRAP_get();
  public final static native int ID_INVERT_get();
  public final static native int ID_DEPTH_FAIL_OP_get();
  public final static native int ID_PASS_OP_get();
  public final static native int ID_TWO_SIDED_get();
  public final static native int ID_READ_BACK_AS_TEXTURE_get();
  public final static native int ID_RT_SHADER_SYSTEM_get();
  public final static native int ID_TESSELLATION_HULL_PROGRAM_get();
  public final static native int ID_TESSELLATION_DOMAIN_PROGRAM_get();
  public final static native int ID_COMPUTE_PROGRAM_get();
  public final static native int ID_TESSELLATION_HULL_PROGRAM_REF_get();
  public final static native int ID_TESSELLATION_DOMAIN_PROGRAM_REF_get();
  public final static native int ID_COMPUTE_PROGRAM_REF_get();
  public final static native int ID_GEOMETRY_get();
  public final static native int ID_TESSELLATION_HULL_get();
  public final static native int ID_TESSELLATION_DOMAIN_get();
  public final static native int ID_COMPUTE_get();
  public final static native int ID_SUBROUTINE_get();
  public final static native int ID_END_BUILTIN_IDS_get();
  public final static native int TextureUnitState_TAM_UNKNOWN_get();
  public final static native void TextureUnitState_UVWAddressingMode_u_set(long jarg1, TextureUnitState.UVWAddressingMode jarg1_, int jarg2);
  public final static native int TextureUnitState_UVWAddressingMode_u_get(long jarg1, TextureUnitState.UVWAddressingMode jarg1_);
  public final static native void TextureUnitState_UVWAddressingMode_v_set(long jarg1, TextureUnitState.UVWAddressingMode jarg1_, int jarg2);
  public final static native int TextureUnitState_UVWAddressingMode_v_get(long jarg1, TextureUnitState.UVWAddressingMode jarg1_);
  public final static native void TextureUnitState_UVWAddressingMode_w_set(long jarg1, TextureUnitState.UVWAddressingMode jarg1_, int jarg2);
  public final static native int TextureUnitState_UVWAddressingMode_w_get(long jarg1, TextureUnitState.UVWAddressingMode jarg1_);
  public final static native long new_TextureUnitState_UVWAddressingMode();
  public final static native void delete_TextureUnitState_UVWAddressingMode(long jarg1);
  public final static native int TextureUnitState_CUBE_FRONT_get();
  public final static native int TextureUnitState_CUBE_BACK_get();
  public final static native int TextureUnitState_CUBE_LEFT_get();
  public final static native int TextureUnitState_CUBE_RIGHT_get();
  public final static native int TextureUnitState_CUBE_UP_get();
  public final static native int TextureUnitState_CUBE_DOWN_get();
  public final static native void TextureUnitState_TextureEffect_type_set(long jarg1, TextureUnitState.TextureEffect jarg1_, int jarg2);
  public final static native int TextureUnitState_TextureEffect_type_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_subtype_set(long jarg1, TextureUnitState.TextureEffect jarg1_, int jarg2);
  public final static native int TextureUnitState_TextureEffect_subtype_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_arg1_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_arg1_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_arg2_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_arg2_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_waveType_set(long jarg1, TextureUnitState.TextureEffect jarg1_, int jarg2);
  public final static native int TextureUnitState_TextureEffect_waveType_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_base_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_base_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_frequency_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_frequency_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_phase_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_phase_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_amplitude_set(long jarg1, TextureUnitState.TextureEffect jarg1_, float jarg2);
  public final static native float TextureUnitState_TextureEffect_amplitude_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_controller_set(long jarg1, TextureUnitState.TextureEffect jarg1_, long jarg2);
  public final static native long TextureUnitState_TextureEffect_controller_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native void TextureUnitState_TextureEffect_frustum_set(long jarg1, TextureUnitState.TextureEffect jarg1_, long jarg2, Frustum jarg2_);
  public final static native long TextureUnitState_TextureEffect_frustum_get(long jarg1, TextureUnitState.TextureEffect jarg1_);
  public final static native long new_TextureUnitState_TextureEffect();
  public final static native void delete_TextureUnitState_TextureEffect(long jarg1);
  public final static native long new_TextureUnitState__SWIG_0(long jarg1, Pass jarg1_);
  public final static native long new_TextureUnitState__SWIG_1(long jarg1, Pass jarg1_, long jarg2, TextureUnitState jarg2_);
  public final static native void delete_TextureUnitState(long jarg1);
  public final static native long new_TextureUnitState__SWIG_2(long jarg1, Pass jarg1_, String jarg2, long jarg3);
  public final static native long new_TextureUnitState__SWIG_3(long jarg1, Pass jarg1_, String jarg2);
  public final static native String TextureUnitState_getTextureName(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureName__SWIG_0(long jarg1, TextureUnitState jarg1_, String jarg2, int jarg3);
  public final static native void TextureUnitState_setTextureName__SWIG_1(long jarg1, TextureUnitState jarg1_, String jarg2);
  public final static native void TextureUnitState_setTexture(long jarg1, TextureUnitState jarg1_, long jarg2, TexturePtr jarg2_);
  public final static native void TextureUnitState_setCubicTextureName__SWIG_0(long jarg1, TextureUnitState jarg1_, String jarg2, boolean jarg3);
  public final static native void TextureUnitState_setCubicTextureName__SWIG_1(long jarg1, TextureUnitState jarg1_, String jarg2);
  public final static native void TextureUnitState_setCubicTextureName__SWIG_2(long jarg1, TextureUnitState jarg1_, long jarg2, boolean jarg3);
  public final static native void TextureUnitState_setCubicTextureName__SWIG_3(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native void TextureUnitState_setCubicTexture__SWIG_0(long jarg1, TextureUnitState jarg1_, long jarg2, TexturePtr jarg2_, boolean jarg3);
  public final static native void TextureUnitState_setCubicTexture__SWIG_1(long jarg1, TextureUnitState jarg1_, long jarg2, TexturePtr jarg2_);
  public final static native void TextureUnitState_setAnimatedTextureName__SWIG_0(long jarg1, TextureUnitState jarg1_, String jarg2, long jarg3, float jarg4);
  public final static native void TextureUnitState_setAnimatedTextureName__SWIG_1(long jarg1, TextureUnitState jarg1_, String jarg2, long jarg3);
  public final static native void TextureUnitState_setAnimatedTextureName__SWIG_2(long jarg1, TextureUnitState jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native void TextureUnitState_setAnimatedTextureName__SWIG_3(long jarg1, TextureUnitState jarg1_, long jarg2, long jarg3);
  public final static native long TextureUnitState_getTextureDimensions__SWIG_0(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native long TextureUnitState_getTextureDimensions__SWIG_1(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setCurrentFrame(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native long TextureUnitState_getCurrentFrame(long jarg1, TextureUnitState jarg1_);
  public final static native String TextureUnitState_getFrameTextureName(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native void TextureUnitState_setFrameTextureName(long jarg1, TextureUnitState jarg1_, String jarg2, long jarg3);
  public final static native void TextureUnitState_addFrameTextureName(long jarg1, TextureUnitState jarg1_, String jarg2);
  public final static native void TextureUnitState_deleteFrameTextureName(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native long TextureUnitState_getNumFrames(long jarg1, TextureUnitState jarg1_);
  public final static native int TextureUnitState_BT_FRAGMENT_get();
  public final static native int TextureUnitState_BT_VERTEX_get();
  public final static native int TextureUnitState_BT_GEOMETRY_get();
  public final static native int TextureUnitState_BT_TESSELLATION_HULL_get();
  public final static native int TextureUnitState_BT_TESSELLATION_DOMAIN_get();
  public final static native int TextureUnitState_BT_COMPUTE_get();
  public final static native int TextureUnitState_CONTENT_NAMED_get();
  public final static native int TextureUnitState_CONTENT_SHADOW_get();
  public final static native int TextureUnitState_CONTENT_COMPOSITOR_get();
  public final static native void TextureUnitState_setBindingType(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native int TextureUnitState_getBindingType(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setContentType(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native int TextureUnitState_getContentType(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_isCubic(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_is3D(long jarg1, TextureUnitState jarg1_);
  public final static native int TextureUnitState_getTextureType(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setDesiredFormat(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native int TextureUnitState_getDesiredFormat(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setNumMipmaps(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native int TextureUnitState_getNumMipmaps(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setIsAlpha(long jarg1, TextureUnitState jarg1_, boolean jarg2);
  public final static native boolean TextureUnitState_getIsAlpha(long jarg1, TextureUnitState jarg1_);
  public final static native float TextureUnitState_getGamma(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setGamma(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native void TextureUnitState_setHardwareGammaEnabled(long jarg1, TextureUnitState jarg1_, boolean jarg2);
  public final static native boolean TextureUnitState_isHardwareGammaEnabled(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getTextureCoordSet(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureCoordSet(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native void TextureUnitState_setTextureTransform(long jarg1, TextureUnitState jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long TextureUnitState_getTextureTransform(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureScroll(long jarg1, TextureUnitState jarg1_, float jarg2, float jarg3);
  public final static native void TextureUnitState_setTextureUScroll(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native float TextureUnitState_getTextureUScroll(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureVScroll(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native float TextureUnitState_getTextureVScroll(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureUScale(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native float TextureUnitState_getTextureUScale(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureVScale(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native float TextureUnitState_getTextureVScale(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureScale(long jarg1, TextureUnitState jarg1_, float jarg2, float jarg3);
  public final static native void TextureUnitState_setTextureRotate(long jarg1, TextureUnitState jarg1_, long jarg2, Radian jarg2_);
  public final static native long TextureUnitState_getTextureRotate(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getTextureAddressingMode(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureAddressingMode__SWIG_0(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native void TextureUnitState_setTextureAddressingMode__SWIG_1(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void TextureUnitState_setTextureAddressingMode__SWIG_2(long jarg1, TextureUnitState jarg1_, long jarg2, TextureUnitState.UVWAddressingMode jarg2_);
  public final static native void TextureUnitState_setTextureBorderColour(long jarg1, TextureUnitState jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long TextureUnitState_getTextureBorderColour(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_0(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, ColourValue jarg5_, long jarg6, ColourValue jarg6_, float jarg7);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_1(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, ColourValue jarg5_, long jarg6, ColourValue jarg6_);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_2(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, ColourValue jarg5_);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_3(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_4(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3);
  public final static native void TextureUnitState_setColourOperationEx__SWIG_5(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native void TextureUnitState_setColourOperation(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native void TextureUnitState_setColourOpMultipassFallback(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3);
  public final static native long TextureUnitState_getColourBlendMode(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getAlphaBlendMode(long jarg1, TextureUnitState jarg1_);
  public final static native int TextureUnitState_getColourBlendFallbackSrc(long jarg1, TextureUnitState jarg1_);
  public final static native int TextureUnitState_getColourBlendFallbackDest(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_0(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, float jarg5, float jarg6, float jarg7);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_1(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, float jarg5, float jarg6);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_2(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4, float jarg5);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_3(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_4(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3);
  public final static native void TextureUnitState_setAlphaOperation__SWIG_5(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native void TextureUnitState_addEffect(long jarg1, TextureUnitState jarg1_, long jarg2, TextureUnitState.TextureEffect jarg2_);
  public final static native void TextureUnitState_setEnvironmentMap__SWIG_0(long jarg1, TextureUnitState jarg1_, boolean jarg2, int jarg3);
  public final static native void TextureUnitState_setEnvironmentMap__SWIG_1(long jarg1, TextureUnitState jarg1_, boolean jarg2);
  public final static native void TextureUnitState_setScrollAnimation(long jarg1, TextureUnitState jarg1_, float jarg2, float jarg3);
  public final static native void TextureUnitState_setRotateAnimation(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native void TextureUnitState_setTransformAnimation__SWIG_0(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native void TextureUnitState_setTransformAnimation__SWIG_1(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void TextureUnitState_setTransformAnimation__SWIG_2(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, float jarg4, float jarg5);
  public final static native void TextureUnitState_setTransformAnimation__SWIG_3(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, float jarg4);
  public final static native void TextureUnitState_setTransformAnimation__SWIG_4(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3);
  public final static native void TextureUnitState_setProjectiveTexturing__SWIG_0(long jarg1, TextureUnitState jarg1_, boolean jarg2, long jarg3, Frustum jarg3_);
  public final static native void TextureUnitState_setProjectiveTexturing__SWIG_1(long jarg1, TextureUnitState jarg1_, boolean jarg2);
  public final static native void TextureUnitState_removeAllEffects(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_removeEffect(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native boolean TextureUnitState_isBlank(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setBlank(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_isTextureLoadFailing(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_retryTextureLoad(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getEffects(long jarg1, TextureUnitState jarg1_);
  public final static native float TextureUnitState_getAnimationDuration(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureFiltering__SWIG_0(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native void TextureUnitState_setTextureFiltering__SWIG_1(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3);
  public final static native void TextureUnitState_setTextureFiltering__SWIG_2(long jarg1, TextureUnitState jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int TextureUnitState_getTextureFiltering(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native boolean TextureUnitState_isDefaultFiltering(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureCompareEnabled(long jarg1, TextureUnitState jarg1_, boolean jarg2);
  public final static native boolean TextureUnitState_getTextureCompareEnabled(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureCompareFunction(long jarg1, TextureUnitState jarg1_, int jarg2);
  public final static native int TextureUnitState_getTextureCompareFunction(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureAnisotropy(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native long TextureUnitState_getTextureAnisotropy(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureMipmapBias(long jarg1, TextureUnitState jarg1_, float jarg2);
  public final static native float TextureUnitState_getTextureMipmapBias(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setCompositorReference__SWIG_0(long jarg1, TextureUnitState jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native void TextureUnitState_setCompositorReference__SWIG_1(long jarg1, TextureUnitState jarg1_, String jarg2, String jarg3);
  public final static native String TextureUnitState_getReferencedCompositorName(long jarg1, TextureUnitState jarg1_);
  public final static native String TextureUnitState_getReferencedTextureName(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getReferencedMRTIndex(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState_getParent(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState__prepare(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState__unprepare(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState__load(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState__unload(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_hasViewRelativeTextureCoordinateGeneration(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_isLoaded(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState__notifyNeedsRecompile(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setName(long jarg1, TextureUnitState jarg1_, String jarg2);
  public final static native String TextureUnitState_getName(long jarg1, TextureUnitState jarg1_);
  public final static native void TextureUnitState_setTextureNameAlias(long jarg1, TextureUnitState jarg1_, String jarg2);
  public final static native String TextureUnitState_getTextureNameAlias(long jarg1, TextureUnitState jarg1_);
  public final static native boolean TextureUnitState_applyTextureAliases__SWIG_0(long jarg1, TextureUnitState jarg1_, long jarg2, boolean jarg3);
  public final static native boolean TextureUnitState_applyTextureAliases__SWIG_1(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native void TextureUnitState__notifyParent(long jarg1, TextureUnitState jarg1_, long jarg2, Pass jarg2_);
  public final static native long TextureUnitState__getTexturePtr__SWIG_0(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState__getTexturePtr__SWIG_1(long jarg1, TextureUnitState jarg1_, long jarg2);
  public final static native void TextureUnitState__setTexturePtr__SWIG_0(long jarg1, TextureUnitState jarg1_, long jarg2, TexturePtr jarg2_);
  public final static native void TextureUnitState__setTexturePtr__SWIG_1(long jarg1, TextureUnitState jarg1_, long jarg2, TexturePtr jarg2_, long jarg3);
  public final static native long TextureUnitState_calculateSize(long jarg1, TextureUnitState jarg1_);
  public final static native long TextureUnitState__getAnimController(long jarg1, TextureUnitState jarg1_);
  public final static native long new_ControllerManager();
  public final static native void delete_ControllerManager(long jarg1);
  public final static native long ControllerManager_createController(long jarg1, ControllerManager jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long ControllerManager_createFrameTimePassthroughController(long jarg1, ControllerManager jarg1_, long jarg2);
  public final static native void ControllerManager_clearControllers(long jarg1, ControllerManager jarg1_);
  public final static native void ControllerManager_updateAllControllers(long jarg1, ControllerManager jarg1_);
  public final static native long ControllerManager_getFrameTimeSource(long jarg1, ControllerManager jarg1_);
  public final static native long ControllerManager_getPassthroughControllerFunction(long jarg1, ControllerManager jarg1_);
  public final static native long ControllerManager_createTextureAnimator(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, float jarg3);
  public final static native long ControllerManager_createTextureUVScroller(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, float jarg3);
  public final static native long ControllerManager_createTextureUScroller(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, float jarg3);
  public final static native long ControllerManager_createTextureVScroller(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, float jarg3);
  public final static native long ControllerManager_createTextureRotater(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, float jarg3);
  public final static native long ControllerManager_createTextureWaveTransformer__SWIG_0(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, int jarg3, int jarg4, float jarg5, float jarg6, float jarg7, float jarg8);
  public final static native long ControllerManager_createTextureWaveTransformer__SWIG_1(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, int jarg3, int jarg4, float jarg5, float jarg6, float jarg7);
  public final static native long ControllerManager_createTextureWaveTransformer__SWIG_2(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, int jarg3, int jarg4, float jarg5, float jarg6);
  public final static native long ControllerManager_createTextureWaveTransformer__SWIG_3(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, int jarg3, int jarg4, float jarg5);
  public final static native long ControllerManager_createTextureWaveTransformer__SWIG_4(long jarg1, ControllerManager jarg1_, long jarg2, TextureUnitState jarg2_, int jarg3, int jarg4);
  public final static native long ControllerManager_createGpuProgramTimerParam__SWIG_0(long jarg1, ControllerManager jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native long ControllerManager_createGpuProgramTimerParam__SWIG_1(long jarg1, ControllerManager jarg1_, long jarg2, long jarg3);
  public final static native void ControllerManager_destroyController(long jarg1, ControllerManager jarg1_, long jarg2);
  public final static native float ControllerManager_getTimeFactor(long jarg1, ControllerManager jarg1_);
  public final static native void ControllerManager_setTimeFactor(long jarg1, ControllerManager jarg1_, float jarg2);
  public final static native float ControllerManager_getFrameDelay(long jarg1, ControllerManager jarg1_);
  public final static native void ControllerManager_setFrameDelay(long jarg1, ControllerManager jarg1_, float jarg2);
  public final static native float ControllerManager_getElapsedTime(long jarg1, ControllerManager jarg1_);
  public final static native void ControllerManager_setElapsedTime(long jarg1, ControllerManager jarg1_, float jarg2);
  public final static native long ControllerManager_getSingleton();
  public final static native long new_CompositorPtr__SWIG_1();
  public final static native long new_CompositorPtr__SWIG_2(long jarg1, CompositorPtr jarg1_);
  public final static native void delete_CompositorPtr(long jarg1);
  public final static native long CompositorPtr___ref__(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr___deref__(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_get(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_unique(long jarg1, CompositorPtr jarg1_);
  public final static native int CompositorPtr_use_count(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_reset__SWIG_0(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_reset__SWIG_1(long jarg1, CompositorPtr jarg1_, long jarg2, Compositor jarg2_);
  public final static native long CompositorPtr_createTechnique(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_removeTechnique(long jarg1, CompositorPtr jarg1_, long jarg2);
  public final static native long CompositorPtr_getTechnique(long jarg1, CompositorPtr jarg1_, long jarg2);
  public final static native long CompositorPtr_getNumTechniques(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_removeAllTechniques(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getTechniqueIterator(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getSupportedTechnique__SWIG_0(long jarg1, CompositorPtr jarg1_, long jarg2);
  public final static native long CompositorPtr_getSupportedTechnique__SWIG_1(long jarg1, CompositorPtr jarg1_, String jarg2);
  public final static native long CompositorPtr_getSupportedTechnique__SWIG_2(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getNumSupportedTechniques(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getSupportedTechniqueIterator(long jarg1, CompositorPtr jarg1_);
  public final static native String CompositorPtr_getTextureInstanceName(long jarg1, CompositorPtr jarg1_, String jarg2, long jarg3);
  public final static native long CompositorPtr_getTextureInstance(long jarg1, CompositorPtr jarg1_, String jarg2, long jarg3);
  public final static native long CompositorPtr_getRenderTarget(long jarg1, CompositorPtr jarg1_, String jarg2);
  public final static native void CompositorPtr_prepare__SWIG_0(long jarg1, CompositorPtr jarg1_, boolean jarg2);
  public final static native void CompositorPtr_prepare__SWIG_1(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_load__SWIG_0(long jarg1, CompositorPtr jarg1_, boolean jarg2);
  public final static native void CompositorPtr_load__SWIG_1(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_reload__SWIG_0(long jarg1, CompositorPtr jarg1_, int jarg2);
  public final static native void CompositorPtr_reload__SWIG_1(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isReloadable(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isManuallyLoaded(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_unload(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getSize(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_touch(long jarg1, CompositorPtr jarg1_);
  public final static native String CompositorPtr_getName(long jarg1, CompositorPtr jarg1_);
  public final static native java.math.BigInteger CompositorPtr_getHandle(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isPrepared(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isLoaded(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isLoading(long jarg1, CompositorPtr jarg1_);
  public final static native int CompositorPtr_getLoadingState(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_isBackgroundLoaded(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_setBackgroundLoaded(long jarg1, CompositorPtr jarg1_, boolean jarg2);
  public final static native void CompositorPtr_escalateLoading(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_addListener(long jarg1, CompositorPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void CompositorPtr_removeListener(long jarg1, CompositorPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String CompositorPtr_getGroup(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr_changeGroupOwnership(long jarg1, CompositorPtr jarg1_, String jarg2);
  public final static native long CompositorPtr_getCreator(long jarg1, CompositorPtr jarg1_);
  public final static native String CompositorPtr_getOrigin(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr__notifyOrigin(long jarg1, CompositorPtr jarg1_, String jarg2);
  public final static native long CompositorPtr_getStateCount(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr__dirtyState(long jarg1, CompositorPtr jarg1_);
  public final static native void CompositorPtr__fireLoadingComplete(long jarg1, CompositorPtr jarg1_, boolean jarg2);
  public final static native void CompositorPtr__firePreparingComplete(long jarg1, CompositorPtr jarg1_, boolean jarg2);
  public final static native void CompositorPtr__fireUnloadingComplete(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getParamDictionary__SWIG_0(long jarg1, CompositorPtr jarg1_);
  public final static native long CompositorPtr_getParameters(long jarg1, CompositorPtr jarg1_);
  public final static native boolean CompositorPtr_setParameter(long jarg1, CompositorPtr jarg1_, String jarg2, String jarg3);
  public final static native void CompositorPtr_setParameterList(long jarg1, CompositorPtr jarg1_, long jarg2);
  public final static native String CompositorPtr_getParameter(long jarg1, CompositorPtr jarg1_, String jarg2);
  public final static native void CompositorPtr_copyParametersTo(long jarg1, CompositorPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void CompositorPtr_cleanupDictionary(long jarg1, CompositorPtr jarg1_);
  public final static native long new_Compositor__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_Compositor__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_Compositor__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_Compositor(long jarg1);
  public final static native long Compositor_createTechnique(long jarg1, Compositor jarg1_);
  public final static native void Compositor_removeTechnique(long jarg1, Compositor jarg1_, long jarg2);
  public final static native long Compositor_getTechnique(long jarg1, Compositor jarg1_, long jarg2);
  public final static native long Compositor_getNumTechniques(long jarg1, Compositor jarg1_);
  public final static native void Compositor_removeAllTechniques(long jarg1, Compositor jarg1_);
  public final static native long Compositor_getTechniqueIterator(long jarg1, Compositor jarg1_);
  public final static native long Compositor_getSupportedTechnique__SWIG_0(long jarg1, Compositor jarg1_, long jarg2);
  public final static native long Compositor_getNumSupportedTechniques(long jarg1, Compositor jarg1_);
  public final static native long Compositor_getSupportedTechniqueIterator(long jarg1, Compositor jarg1_);
  public final static native long Compositor_getSupportedTechnique__SWIG_1(long jarg1, Compositor jarg1_, String jarg2);
  public final static native long Compositor_getSupportedTechnique__SWIG_2(long jarg1, Compositor jarg1_);
  public final static native String Compositor_getTextureInstanceName(long jarg1, Compositor jarg1_, String jarg2, long jarg3);
  public final static native long Compositor_getTextureInstance(long jarg1, Compositor jarg1_, String jarg2, long jarg3);
  public final static native long Compositor_getRenderTarget(long jarg1, Compositor jarg1_, String jarg2);
  public final static native long new_CompositionTechnique(long jarg1, Compositor jarg1_);
  public final static native void delete_CompositionTechnique(long jarg1);
  public final static native void CompositionTechnique_TextureDefinition_name_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, String jarg2);
  public final static native String CompositionTechnique_TextureDefinition_name_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_refCompName_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, String jarg2);
  public final static native String CompositionTechnique_TextureDefinition_refCompName_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_refTexName_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, String jarg2);
  public final static native String CompositionTechnique_TextureDefinition_refTexName_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_width_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, long jarg2);
  public final static native long CompositionTechnique_TextureDefinition_width_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_height_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, long jarg2);
  public final static native long CompositionTechnique_TextureDefinition_height_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_widthFactor_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, float jarg2);
  public final static native float CompositionTechnique_TextureDefinition_widthFactor_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_heightFactor_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, float jarg2);
  public final static native float CompositionTechnique_TextureDefinition_heightFactor_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_formatList_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, long jarg2);
  public final static native long CompositionTechnique_TextureDefinition_formatList_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_fsaa_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, boolean jarg2);
  public final static native boolean CompositionTechnique_TextureDefinition_fsaa_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_hwGammaWrite_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, boolean jarg2);
  public final static native boolean CompositionTechnique_TextureDefinition_hwGammaWrite_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_depthBufferId_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, int jarg2);
  public final static native int CompositionTechnique_TextureDefinition_depthBufferId_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_pooled_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, boolean jarg2);
  public final static native boolean CompositionTechnique_TextureDefinition_pooled_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native void CompositionTechnique_TextureDefinition_scope_set(long jarg1, CompositionTechnique.TextureDefinition jarg1_, int jarg2);
  public final static native int CompositionTechnique_TextureDefinition_scope_get(long jarg1, CompositionTechnique.TextureDefinition jarg1_);
  public final static native long new_CompositionTechnique_TextureDefinition();
  public final static native void delete_CompositionTechnique_TextureDefinition(long jarg1);
  public final static native long CompositionTechnique_createTextureDefinition(long jarg1, CompositionTechnique jarg1_, String jarg2);
  public final static native void CompositionTechnique_removeTextureDefinition(long jarg1, CompositionTechnique jarg1_, long jarg2);
  public final static native long CompositionTechnique_getTextureDefinition__SWIG_0(long jarg1, CompositionTechnique jarg1_, long jarg2);
  public final static native long CompositionTechnique_getTextureDefinition__SWIG_1(long jarg1, CompositionTechnique jarg1_, String jarg2);
  public final static native void CompositionTechnique_removeAllTextureDefinitions(long jarg1, CompositionTechnique jarg1_);
  public final static native long CompositionTechnique_getTextureDefinitions(long jarg1, CompositionTechnique jarg1_);
  public final static native long CompositionTechnique_createTargetPass(long jarg1, CompositionTechnique jarg1_);
  public final static native void CompositionTechnique_removeTargetPass(long jarg1, CompositionTechnique jarg1_, long jarg2);
  public final static native void CompositionTechnique_removeAllTargetPasses(long jarg1, CompositionTechnique jarg1_);
  public final static native long CompositionTechnique_getTargetPasses(long jarg1, CompositionTechnique jarg1_);
  public final static native long CompositionTechnique_getOutputTargetPass(long jarg1, CompositionTechnique jarg1_);
  public final static native boolean CompositionTechnique_isSupported(long jarg1, CompositionTechnique jarg1_, boolean jarg2);
  public final static native void CompositionTechnique_setSchemeName(long jarg1, CompositionTechnique jarg1_, String jarg2);
  public final static native String CompositionTechnique_getSchemeName(long jarg1, CompositionTechnique jarg1_);
  public final static native void CompositionTechnique_setCompositorLogicName(long jarg1, CompositionTechnique jarg1_, String jarg2);
  public final static native String CompositionTechnique_getCompositorLogicName(long jarg1, CompositionTechnique jarg1_);
  public final static native long CompositionTechnique_getParent(long jarg1, CompositionTechnique jarg1_);
  public final static native long new_CompositionTargetPass(long jarg1, CompositionTechnique jarg1_);
  public final static native void delete_CompositionTargetPass(long jarg1);
  public final static native void CompositionTargetPass_setInputMode(long jarg1, CompositionTargetPass jarg1_, int jarg2);
  public final static native int CompositionTargetPass_getInputMode(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setOutputName(long jarg1, CompositionTargetPass jarg1_, String jarg2);
  public final static native String CompositionTargetPass_getOutputName(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setOnlyInitial(long jarg1, CompositionTargetPass jarg1_, boolean jarg2);
  public final static native boolean CompositionTargetPass_getOnlyInitial(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setVisibilityMask(long jarg1, CompositionTargetPass jarg1_, long jarg2);
  public final static native long CompositionTargetPass_getVisibilityMask(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setMaterialScheme(long jarg1, CompositionTargetPass jarg1_, String jarg2);
  public final static native String CompositionTargetPass_getMaterialScheme(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setShadowsEnabled(long jarg1, CompositionTargetPass jarg1_, boolean jarg2);
  public final static native boolean CompositionTargetPass_getShadowsEnabled(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_setLodBias(long jarg1, CompositionTargetPass jarg1_, float jarg2);
  public final static native float CompositionTargetPass_getLodBias(long jarg1, CompositionTargetPass jarg1_);
  public final static native long CompositionTargetPass_createPass(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_removePass(long jarg1, CompositionTargetPass jarg1_, long jarg2);
  public final static native long CompositionTargetPass_getPasses(long jarg1, CompositionTargetPass jarg1_);
  public final static native void CompositionTargetPass_removeAllPasses(long jarg1, CompositionTargetPass jarg1_);
  public final static native long CompositionTargetPass_getParent(long jarg1, CompositionTargetPass jarg1_);
  public final static native boolean CompositionTargetPass__isSupported(long jarg1, CompositionTargetPass jarg1_);
  public final static native void BackgroundProcessResult_error_set(long jarg1, BackgroundProcessResult jarg1_, boolean jarg2);
  public final static native boolean BackgroundProcessResult_error_get(long jarg1, BackgroundProcessResult jarg1_);
  public final static native void BackgroundProcessResult_message_set(long jarg1, BackgroundProcessResult jarg1_, String jarg2);
  public final static native String BackgroundProcessResult_message_get(long jarg1, BackgroundProcessResult jarg1_);
  public final static native long new_BackgroundProcessResult();
  public final static native void delete_BackgroundProcessResult(long jarg1);
  public final static native void ResourceBackgroundQueue_Listener_operationCompleted(long jarg1, ResourceBackgroundQueue.Listener jarg1_, long jarg2, long jarg3, BackgroundProcessResult jarg3_);
  public final static native void delete_ResourceBackgroundQueue_Listener(long jarg1);
  public final static native long new_ResourceBackgroundQueue_Listener();
  public final static native void ResourceBackgroundQueue_Listener_director_connect(ResourceBackgroundQueue.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ResourceBackgroundQueue_Listener_change_ownership(ResourceBackgroundQueue.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_ResourceBackgroundQueue();
  public final static native void delete_ResourceBackgroundQueue(long jarg1);
  public final static native void ResourceBackgroundQueue_initialise(long jarg1, ResourceBackgroundQueue jarg1_);
  public final static native void ResourceBackgroundQueue_shutdown(long jarg1, ResourceBackgroundQueue jarg1_);
  public final static native long ResourceBackgroundQueue_initialiseResourceGroup__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, long jarg3, ResourceBackgroundQueue.Listener jarg3_);
  public final static native long ResourceBackgroundQueue_initialiseResourceGroup__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2);
  public final static native long ResourceBackgroundQueue_initialiseAllResourceGroups__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2, ResourceBackgroundQueue.Listener jarg2_);
  public final static native long ResourceBackgroundQueue_initialiseAllResourceGroups__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_);
  public final static native long ResourceBackgroundQueue_prepareResourceGroup__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, long jarg3, ResourceBackgroundQueue.Listener jarg3_);
  public final static native long ResourceBackgroundQueue_prepareResourceGroup__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2);
  public final static native long ResourceBackgroundQueue_loadResourceGroup__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, long jarg3, ResourceBackgroundQueue.Listener jarg3_);
  public final static native long ResourceBackgroundQueue_loadResourceGroup__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2);
  public final static native long ResourceBackgroundQueue_unload__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, long jarg4, ResourceBackgroundQueue.Listener jarg4_);
  public final static native long ResourceBackgroundQueue_unload__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3);
  public final static native long ResourceBackgroundQueue_unload__SWIG_2(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, java.math.BigInteger jarg3, long jarg4, ResourceBackgroundQueue.Listener jarg4_);
  public final static native long ResourceBackgroundQueue_unload__SWIG_3(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, java.math.BigInteger jarg3);
  public final static native long ResourceBackgroundQueue_unloadResourceGroup__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, long jarg3, ResourceBackgroundQueue.Listener jarg3_);
  public final static native long ResourceBackgroundQueue_unloadResourceGroup__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2);
  public final static native long ResourceBackgroundQueue_prepare__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_, long jarg7, long jarg8, ResourceBackgroundQueue.Listener jarg8_);
  public final static native long ResourceBackgroundQueue_prepare__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_, long jarg7);
  public final static native long ResourceBackgroundQueue_prepare__SWIG_2(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long ResourceBackgroundQueue_prepare__SWIG_3(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native long ResourceBackgroundQueue_prepare__SWIG_4(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long ResourceBackgroundQueue_load__SWIG_0(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_, long jarg7, long jarg8, ResourceBackgroundQueue.Listener jarg8_);
  public final static native long ResourceBackgroundQueue_load__SWIG_1(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_, long jarg7);
  public final static native long ResourceBackgroundQueue_load__SWIG_2(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long ResourceBackgroundQueue_load__SWIG_3(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native long ResourceBackgroundQueue_load__SWIG_4(long jarg1, ResourceBackgroundQueue jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean ResourceBackgroundQueue_isProcessComplete(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2);
  public final static native void ResourceBackgroundQueue_abortRequest(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2);
  public final static native boolean ResourceBackgroundQueue_canHandleRequest(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2, long jarg3);
  public final static native long ResourceBackgroundQueue_handleRequest(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2, long jarg3);
  public final static native boolean ResourceBackgroundQueue_canHandleResponse(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2, long jarg3);
  public final static native void ResourceBackgroundQueue_handleResponse(long jarg1, ResourceBackgroundQueue jarg1_, long jarg2, long jarg3);
  public final static native long ResourceBackgroundQueue_getSingleton();
  public final static native long new_HardwareVertexBufferPtr__SWIG_1();
  public final static native long new_HardwareVertexBufferPtr__SWIG_2(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void delete_HardwareVertexBufferPtr(long jarg1);
  public final static native long HardwareVertexBufferPtr___ref__(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native long HardwareVertexBufferPtr___deref__(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native long HardwareVertexBufferPtr_get(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native boolean HardwareVertexBufferPtr_unique(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native int HardwareVertexBufferPtr_use_count(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_reset__SWIG_0(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_reset__SWIG_1(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, HardwareVertexBuffer jarg2_);
  public final static native long HardwareVertexBufferPtr_getManager(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native long HardwareVertexBufferPtr_getVertexSize(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native long HardwareVertexBufferPtr_getNumVertices(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native boolean HardwareVertexBufferPtr_getIsInstanceData(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_setIsInstanceData(long jarg1, HardwareVertexBufferPtr jarg1_, boolean jarg2);
  public final static native long HardwareVertexBufferPtr_getInstanceDataStepRate(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_setInstanceDataStepRate(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2);
  public final static native long HardwareVertexBufferPtr_lock__SWIG_0(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwareVertexBufferPtr_lock__SWIG_1(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareVertexBufferPtr_lock__SWIG_2(long jarg1, HardwareVertexBufferPtr jarg1_, int jarg2, int jarg3);
  public final static native long HardwareVertexBufferPtr_lock__SWIG_3(long jarg1, HardwareVertexBufferPtr jarg1_, int jarg2);
  public final static native void HardwareVertexBufferPtr_unlock(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_readData(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareVertexBufferPtr_writeData__SWIG_0(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwareVertexBufferPtr_writeData__SWIG_1(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareVertexBufferPtr_copyData__SWIG_0(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwareVertexBufferPtr_copyData__SWIG_1(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwareVertexBufferPtr_copyData__SWIG_2(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwareVertexBufferPtr__updateFromShadow(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native long HardwareVertexBufferPtr_getSizeInBytes(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native int HardwareVertexBufferPtr_getUsage(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native boolean HardwareVertexBufferPtr_isSystemMemory(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native boolean HardwareVertexBufferPtr_hasShadowBuffer(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native boolean HardwareVertexBufferPtr_isLocked(long jarg1, HardwareVertexBufferPtr jarg1_);
  public final static native void HardwareVertexBufferPtr_suppressHardwareUpdate(long jarg1, HardwareVertexBufferPtr jarg1_, boolean jarg2);
  public final static native void delete_HardwareVertexBuffer(long jarg1);
  public final static native long HardwareVertexBuffer_getManager(long jarg1, HardwareVertexBuffer jarg1_);
  public final static native long HardwareVertexBuffer_getVertexSize(long jarg1, HardwareVertexBuffer jarg1_);
  public final static native long HardwareVertexBuffer_getNumVertices(long jarg1, HardwareVertexBuffer jarg1_);
  public final static native boolean HardwareVertexBuffer_getIsInstanceData(long jarg1, HardwareVertexBuffer jarg1_);
  public final static native void HardwareVertexBuffer_setIsInstanceData(long jarg1, HardwareVertexBuffer jarg1_, boolean jarg2);
  public final static native long HardwareVertexBuffer_getInstanceDataStepRate(long jarg1, HardwareVertexBuffer jarg1_);
  public final static native void HardwareVertexBuffer_setInstanceDataStepRate(long jarg1, HardwareVertexBuffer jarg1_, long jarg2);
  public final static native int VES_POSITION_get();
  public final static native int VES_BLEND_WEIGHTS_get();
  public final static native int VES_BLEND_INDICES_get();
  public final static native int VES_NORMAL_get();
  public final static native int VES_DIFFUSE_get();
  public final static native int VES_SPECULAR_get();
  public final static native int VES_TEXTURE_COORDINATES_get();
  public final static native int VES_BINORMAL_get();
  public final static native int VES_TANGENT_get();
  public final static native int VES_COUNT_get();
  public final static native int VET_FLOAT1_get();
  public final static native int VET_FLOAT2_get();
  public final static native int VET_FLOAT3_get();
  public final static native int VET_FLOAT4_get();
  public final static native int VET_COLOUR_get();
  public final static native int VET_SHORT1_get();
  public final static native int VET_SHORT2_get();
  public final static native int VET_SHORT3_get();
  public final static native int VET_SHORT4_get();
  public final static native int VET_UBYTE4_get();
  public final static native int VET_COLOUR_ARGB_get();
  public final static native int VET_COLOUR_ABGR_get();
  public final static native int VET_DOUBLE1_get();
  public final static native int VET_DOUBLE2_get();
  public final static native int VET_DOUBLE3_get();
  public final static native int VET_DOUBLE4_get();
  public final static native int VET_USHORT1_get();
  public final static native int VET_USHORT2_get();
  public final static native int VET_USHORT3_get();
  public final static native int VET_USHORT4_get();
  public final static native int VET_INT1_get();
  public final static native int VET_INT2_get();
  public final static native int VET_INT3_get();
  public final static native int VET_INT4_get();
  public final static native int VET_UINT1_get();
  public final static native int VET_UINT2_get();
  public final static native int VET_UINT3_get();
  public final static native int VET_UINT4_get();
  public final static native int VET_BYTE4_get();
  public final static native int VET_BYTE4_NORM_get();
  public final static native int VET_UBYTE4_NORM_get();
  public final static native int VET_SHORT2_NORM_get();
  public final static native int VET_SHORT4_NORM_get();
  public final static native int VET_USHORT2_NORM_get();
  public final static native int VET_USHORT4_NORM_get();
  public final static native long new_VertexElement__SWIG_0();
  public final static native long new_VertexElement__SWIG_1(int jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_VertexElement__SWIG_2(int jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int VertexElement_getSource(long jarg1, VertexElement jarg1_);
  public final static native long VertexElement_getOffset(long jarg1, VertexElement jarg1_);
  public final static native int VertexElement_getSemantic(long jarg1, VertexElement jarg1_);
  public final static native int VertexElement_getIndex(long jarg1, VertexElement jarg1_);
  public final static native long VertexElement_getSize(long jarg1, VertexElement jarg1_);
  public final static native long VertexElement_getTypeSize(int jarg1);
  public final static native int VertexElement_getTypeCount(int jarg1);
  public final static native int VertexElement_multiplyTypeCount(int jarg1, int jarg2);
  public final static native int VertexElement_getBaseType(int jarg1);
  public final static native void VertexElement_convertColourValue__SWIG_0(int jarg1, int jarg2, long jarg3);
  public final static native long VertexElement_convertColourValue__SWIG_1(long jarg1, ColourValue jarg1_, int jarg2);
  public final static native int VertexElement_getBestColourVertexElementType();
  public final static native void VertexElement_baseVertexPointerToElement__SWIG_0(long jarg1, VertexElement jarg1_, long jarg2, long jarg3);
  public final static native void VertexElement_baseVertexPointerToElement__SWIG_1(long jarg1, VertexElement jarg1_, long jarg2, long jarg3);
  public final static native void VertexElement_baseVertexPointerToElement__SWIG_2(long jarg1, VertexElement jarg1_, long jarg2, long jarg3);
  public final static native void VertexElement_baseVertexPointerToElement__SWIG_3(long jarg1, VertexElement jarg1_, long jarg2, long jarg3);
  public final static native void VertexElement_baseVertexPointerToElement__SWIG_4(long jarg1, VertexElement jarg1_, long jarg2, long jarg3);
  public final static native void delete_VertexElement(long jarg1);
  public final static native boolean VertexDeclaration_vertexElementLess(long jarg1, VertexElement jarg1_, long jarg2, VertexElement jarg2_);
  public final static native long new_VertexDeclaration();
  public final static native void delete_VertexDeclaration(long jarg1);
  public final static native long VertexDeclaration_getElementCount(long jarg1, VertexDeclaration jarg1_);
  public final static native long VertexDeclaration_getElements(long jarg1, VertexDeclaration jarg1_);
  public final static native long VertexDeclaration_getElement(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native void VertexDeclaration_sort(long jarg1, VertexDeclaration jarg1_);
  public final static native void VertexDeclaration_closeGapsInSource(long jarg1, VertexDeclaration jarg1_);
  public final static native long VertexDeclaration_getAutoOrganisedDeclaration(long jarg1, VertexDeclaration jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native int VertexDeclaration_getMaxSource(long jarg1, VertexDeclaration jarg1_);
  public final static native long VertexDeclaration_addElement__SWIG_0(long jarg1, VertexDeclaration jarg1_, int jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native long VertexDeclaration_addElement__SWIG_1(long jarg1, VertexDeclaration jarg1_, int jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long VertexDeclaration_insertElement__SWIG_0(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long VertexDeclaration_insertElement__SWIG_1(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void VertexDeclaration_removeElement__SWIG_0(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native void VertexDeclaration_removeElement__SWIG_1(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3);
  public final static native void VertexDeclaration_removeElement__SWIG_2(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native void VertexDeclaration_removeAllElements(long jarg1, VertexDeclaration jarg1_);
  public final static native void VertexDeclaration_modifyElement__SWIG_0(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void VertexDeclaration_modifyElement__SWIG_1(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native long VertexDeclaration_findElementBySemantic__SWIG_0(long jarg1, VertexDeclaration jarg1_, int jarg2, int jarg3);
  public final static native long VertexDeclaration_findElementBySemantic__SWIG_1(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native long VertexDeclaration_findElementsBySource(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native long VertexDeclaration_getVertexSize(long jarg1, VertexDeclaration jarg1_, int jarg2);
  public final static native int VertexDeclaration_getNextFreeTextureCoordinate(long jarg1, VertexDeclaration jarg1_);
  public final static native long VertexDeclaration_clone__SWIG_0(long jarg1, VertexDeclaration jarg1_, long jarg2, HardwareBufferManagerBase jarg2_);
  public final static native long VertexDeclaration_clone__SWIG_1(long jarg1, VertexDeclaration jarg1_);
  public final static native long new_VertexBufferBinding();
  public final static native void delete_VertexBufferBinding(long jarg1);
  public final static native void VertexBufferBinding_setBinding(long jarg1, VertexBufferBinding jarg1_, int jarg2, long jarg3, HardwareVertexBufferPtr jarg3_);
  public final static native void VertexBufferBinding_unsetBinding(long jarg1, VertexBufferBinding jarg1_, int jarg2);
  public final static native void VertexBufferBinding_unsetAllBindings(long jarg1, VertexBufferBinding jarg1_);
  public final static native long VertexBufferBinding_getBindings(long jarg1, VertexBufferBinding jarg1_);
  public final static native long VertexBufferBinding_getBuffer(long jarg1, VertexBufferBinding jarg1_, int jarg2);
  public final static native boolean VertexBufferBinding_isBufferBound(long jarg1, VertexBufferBinding jarg1_, int jarg2);
  public final static native long VertexBufferBinding_getBufferCount(long jarg1, VertexBufferBinding jarg1_);
  public final static native int VertexBufferBinding_getNextIndex(long jarg1, VertexBufferBinding jarg1_);
  public final static native int VertexBufferBinding_getLastBoundIndex(long jarg1, VertexBufferBinding jarg1_);
  public final static native boolean VertexBufferBinding_hasGaps(long jarg1, VertexBufferBinding jarg1_);
  public final static native void VertexBufferBinding_closeGaps(long jarg1, VertexBufferBinding jarg1_, long jarg2);
  public final static native boolean VertexBufferBinding_getHasInstanceData(long jarg1, VertexBufferBinding jarg1_);
  public final static native long new_HardwareIndexBufferPtr__SWIG_1();
  public final static native long new_HardwareIndexBufferPtr__SWIG_2(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native void delete_HardwareIndexBufferPtr(long jarg1);
  public final static native long HardwareIndexBufferPtr___ref__(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr___deref__(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr_get(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native boolean HardwareIndexBufferPtr_unique(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native int HardwareIndexBufferPtr_use_count(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native void HardwareIndexBufferPtr_reset__SWIG_0(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native void HardwareIndexBufferPtr_reset__SWIG_1(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, HardwareIndexBuffer jarg2_);
  public final static native long HardwareIndexBufferPtr_getManager(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr_getNumIndexes(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr_getIndexSize(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr_lock__SWIG_0(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwareIndexBufferPtr_lock__SWIG_1(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareIndexBufferPtr_lock__SWIG_2(long jarg1, HardwareIndexBufferPtr jarg1_, int jarg2, int jarg3);
  public final static native long HardwareIndexBufferPtr_lock__SWIG_3(long jarg1, HardwareIndexBufferPtr jarg1_, int jarg2);
  public final static native void HardwareIndexBufferPtr_unlock(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native void HardwareIndexBufferPtr_readData(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareIndexBufferPtr_writeData__SWIG_0(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwareIndexBufferPtr_writeData__SWIG_1(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareIndexBufferPtr_copyData__SWIG_0(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwareIndexBufferPtr_copyData__SWIG_1(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwareIndexBufferPtr_copyData__SWIG_2(long jarg1, HardwareIndexBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwareIndexBufferPtr__updateFromShadow(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native long HardwareIndexBufferPtr_getSizeInBytes(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native int HardwareIndexBufferPtr_getUsage(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native boolean HardwareIndexBufferPtr_isSystemMemory(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native boolean HardwareIndexBufferPtr_hasShadowBuffer(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native boolean HardwareIndexBufferPtr_isLocked(long jarg1, HardwareIndexBufferPtr jarg1_);
  public final static native void HardwareIndexBufferPtr_suppressHardwareUpdate(long jarg1, HardwareIndexBufferPtr jarg1_, boolean jarg2);
  public final static native void delete_HardwareIndexBuffer(long jarg1);
  public final static native long HardwareIndexBuffer_getManager(long jarg1, HardwareIndexBuffer jarg1_);
  public final static native long HardwareIndexBuffer_getNumIndexes(long jarg1, HardwareIndexBuffer jarg1_);
  public final static native long HardwareIndexBuffer_getIndexSize(long jarg1, HardwareIndexBuffer jarg1_);
  public final static native long new_HardwarePixelBufferPtr__SWIG_1();
  public final static native long new_HardwarePixelBufferPtr__SWIG_2(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void delete_HardwarePixelBufferPtr(long jarg1);
  public final static native long HardwarePixelBufferPtr___ref__(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr___deref__(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_get(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native boolean HardwarePixelBufferPtr_unique(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native int HardwarePixelBufferPtr_use_count(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void HardwarePixelBufferPtr_reset__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void HardwarePixelBufferPtr_reset__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwarePixelBuffer jarg2_);
  public final static native long HardwarePixelBufferPtr_getCurrentLock(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void HardwarePixelBufferPtr_readData(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwarePixelBufferPtr_writeData__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwarePixelBufferPtr_writeData__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwarePixelBufferPtr_blit__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwarePixelBufferPtr jarg2_, long jarg3, Box jarg3_, long jarg4, Box jarg4_);
  public final static native void HardwarePixelBufferPtr_blit__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwarePixelBufferPtr jarg2_);
  public final static native void HardwarePixelBufferPtr_blitFromMemory__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, PixelBox jarg2_, long jarg3, Box jarg3_);
  public final static native void HardwarePixelBufferPtr_blitFromMemory__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, PixelBox jarg2_);
  public final static native void HardwarePixelBufferPtr_blitToMemory__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_);
  public final static native void HardwarePixelBufferPtr_blitToMemory__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, PixelBox jarg2_);
  public final static native long HardwarePixelBufferPtr_getRenderTarget__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2);
  public final static native long HardwarePixelBufferPtr_getRenderTarget__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_getWidth(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_getHeight(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_getDepth(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native int HardwarePixelBufferPtr_getFormat(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_lock__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwarePixelBufferPtr_lock__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwarePixelBufferPtr_lock__SWIG_2(long jarg1, HardwarePixelBufferPtr jarg1_, int jarg2, int jarg3);
  public final static native long HardwarePixelBufferPtr_lock__SWIG_3(long jarg1, HardwarePixelBufferPtr jarg1_, int jarg2);
  public final static native void HardwarePixelBufferPtr_unlock(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void HardwarePixelBufferPtr_copyData__SWIG_0(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwarePixelBufferPtr_copyData__SWIG_1(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwarePixelBufferPtr_copyData__SWIG_2(long jarg1, HardwarePixelBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwarePixelBufferPtr__updateFromShadow(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native long HardwarePixelBufferPtr_getSizeInBytes(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native int HardwarePixelBufferPtr_getUsage(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native boolean HardwarePixelBufferPtr_isSystemMemory(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native boolean HardwarePixelBufferPtr_hasShadowBuffer(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native boolean HardwarePixelBufferPtr_isLocked(long jarg1, HardwarePixelBufferPtr jarg1_);
  public final static native void HardwarePixelBufferPtr_suppressHardwareUpdate(long jarg1, HardwarePixelBufferPtr jarg1_, boolean jarg2);
  public final static native void delete_HardwarePixelBuffer(long jarg1);
  public final static native long HardwarePixelBuffer_getCurrentLock(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native void HardwarePixelBuffer_readData(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwarePixelBuffer_writeData__SWIG_0(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwarePixelBuffer_writeData__SWIG_1(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwarePixelBuffer_blit__SWIG_0(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, HardwarePixelBufferPtr jarg2_, long jarg3, Box jarg3_, long jarg4, Box jarg4_);
  public final static native void HardwarePixelBuffer_blit__SWIG_1(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, HardwarePixelBufferPtr jarg2_);
  public final static native void HardwarePixelBuffer_blitFromMemory__SWIG_0(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, PixelBox jarg2_, long jarg3, Box jarg3_);
  public final static native void HardwarePixelBuffer_blitFromMemory__SWIG_1(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, PixelBox jarg2_);
  public final static native void HardwarePixelBuffer_blitToMemory__SWIG_0(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_);
  public final static native void HardwarePixelBuffer_blitToMemory__SWIG_1(long jarg1, HardwarePixelBuffer jarg1_, long jarg2, PixelBox jarg2_);
  public final static native long HardwarePixelBuffer_getRenderTarget__SWIG_0(long jarg1, HardwarePixelBuffer jarg1_, long jarg2);
  public final static native long HardwarePixelBuffer_getRenderTarget__SWIG_1(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native long HardwarePixelBuffer_getWidth(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native long HardwarePixelBuffer_getHeight(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native long HardwarePixelBuffer_getDepth(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native int HardwarePixelBuffer_getFormat(long jarg1, HardwarePixelBuffer jarg1_);
  public final static native long new_HardwareCounterBufferPtr__SWIG_1();
  public final static native long new_HardwareCounterBufferPtr__SWIG_2(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native void delete_HardwareCounterBufferPtr(long jarg1);
  public final static native long HardwareCounterBufferPtr___ref__(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native long HardwareCounterBufferPtr___deref__(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native long HardwareCounterBufferPtr_get(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native boolean HardwareCounterBufferPtr_unique(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native int HardwareCounterBufferPtr_use_count(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native void HardwareCounterBufferPtr_reset__SWIG_0(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native void HardwareCounterBufferPtr_reset__SWIG_1(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, HardwareCounterBuffer jarg2_);
  public final static native long HardwareCounterBufferPtr_getManager(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native String HardwareCounterBufferPtr_getName(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native long HardwareCounterBufferPtr_lock__SWIG_0(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwareCounterBufferPtr_lock__SWIG_1(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareCounterBufferPtr_lock__SWIG_2(long jarg1, HardwareCounterBufferPtr jarg1_, int jarg2, int jarg3);
  public final static native long HardwareCounterBufferPtr_lock__SWIG_3(long jarg1, HardwareCounterBufferPtr jarg1_, int jarg2);
  public final static native void HardwareCounterBufferPtr_unlock(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native void HardwareCounterBufferPtr_readData(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareCounterBufferPtr_writeData__SWIG_0(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwareCounterBufferPtr_writeData__SWIG_1(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareCounterBufferPtr_copyData__SWIG_0(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwareCounterBufferPtr_copyData__SWIG_1(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwareCounterBufferPtr_copyData__SWIG_2(long jarg1, HardwareCounterBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwareCounterBufferPtr__updateFromShadow(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native long HardwareCounterBufferPtr_getSizeInBytes(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native int HardwareCounterBufferPtr_getUsage(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native boolean HardwareCounterBufferPtr_isSystemMemory(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native boolean HardwareCounterBufferPtr_hasShadowBuffer(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native boolean HardwareCounterBufferPtr_isLocked(long jarg1, HardwareCounterBufferPtr jarg1_);
  public final static native void HardwareCounterBufferPtr_suppressHardwareUpdate(long jarg1, HardwareCounterBufferPtr jarg1_, boolean jarg2);
  public final static native void delete_HardwareCounterBuffer(long jarg1);
  public final static native long HardwareCounterBuffer_getManager(long jarg1, HardwareCounterBuffer jarg1_);
  public final static native String HardwareCounterBuffer_getName(long jarg1, HardwareCounterBuffer jarg1_);
  public final static native long new_HardwareUniformBufferPtr__SWIG_1();
  public final static native long new_HardwareUniformBufferPtr__SWIG_2(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native void delete_HardwareUniformBufferPtr(long jarg1);
  public final static native long HardwareUniformBufferPtr___ref__(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native long HardwareUniformBufferPtr___deref__(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native long HardwareUniformBufferPtr_get(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native boolean HardwareUniformBufferPtr_unique(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native int HardwareUniformBufferPtr_use_count(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native void HardwareUniformBufferPtr_reset__SWIG_0(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native void HardwareUniformBufferPtr_reset__SWIG_1(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, HardwareUniformBuffer jarg2_);
  public final static native long HardwareUniformBufferPtr_getManager(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native String HardwareUniformBufferPtr_getName(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native long HardwareUniformBufferPtr_lock__SWIG_0(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long HardwareUniformBufferPtr_lock__SWIG_1(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareUniformBufferPtr_lock__SWIG_2(long jarg1, HardwareUniformBufferPtr jarg1_, int jarg2, int jarg3);
  public final static native long HardwareUniformBufferPtr_lock__SWIG_3(long jarg1, HardwareUniformBufferPtr jarg1_, int jarg2);
  public final static native void HardwareUniformBufferPtr_unlock(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native void HardwareUniformBufferPtr_readData(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareUniformBufferPtr_writeData__SWIG_0(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void HardwareUniformBufferPtr_writeData__SWIG_1(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HardwareUniformBufferPtr_copyData__SWIG_0(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native void HardwareUniformBufferPtr_copyData__SWIG_1(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void HardwareUniformBufferPtr_copyData__SWIG_2(long jarg1, HardwareUniformBufferPtr jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void HardwareUniformBufferPtr__updateFromShadow(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native long HardwareUniformBufferPtr_getSizeInBytes(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native int HardwareUniformBufferPtr_getUsage(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native boolean HardwareUniformBufferPtr_isSystemMemory(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native boolean HardwareUniformBufferPtr_hasShadowBuffer(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native boolean HardwareUniformBufferPtr_isLocked(long jarg1, HardwareUniformBufferPtr jarg1_);
  public final static native void HardwareUniformBufferPtr_suppressHardwareUpdate(long jarg1, HardwareUniformBufferPtr jarg1_, boolean jarg2);
  public final static native void delete_HardwareUniformBuffer(long jarg1);
  public final static native long HardwareUniformBuffer_getManager(long jarg1, HardwareUniformBuffer jarg1_);
  public final static native String HardwareUniformBuffer_getName(long jarg1, HardwareUniformBuffer jarg1_);
  public final static native void delete_HardwareBufferLicensee(long jarg1);
  public final static native void HardwareBufferLicensee_licenseExpired(long jarg1, HardwareBufferLicensee jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native void delete_TempBlendedBufferInfo(long jarg1);
  public final static native void TempBlendedBufferInfo_extractFrom(long jarg1, TempBlendedBufferInfo jarg1_, long jarg2, VertexData jarg2_);
  public final static native void TempBlendedBufferInfo_checkoutTempCopies__SWIG_0(long jarg1, TempBlendedBufferInfo jarg1_, boolean jarg2, boolean jarg3);
  public final static native void TempBlendedBufferInfo_checkoutTempCopies__SWIG_1(long jarg1, TempBlendedBufferInfo jarg1_, boolean jarg2);
  public final static native void TempBlendedBufferInfo_checkoutTempCopies__SWIG_2(long jarg1, TempBlendedBufferInfo jarg1_);
  public final static native void TempBlendedBufferInfo_bindTempCopies(long jarg1, TempBlendedBufferInfo jarg1_, long jarg2, VertexData jarg2_, boolean jarg3);
  public final static native void TempBlendedBufferInfo_licenseExpired(long jarg1, TempBlendedBufferInfo jarg1_, long jarg2, HardwareBuffer jarg2_);
  public final static native boolean TempBlendedBufferInfo_buffersCheckedOut__SWIG_0(long jarg1, TempBlendedBufferInfo jarg1_, boolean jarg2, boolean jarg3);
  public final static native boolean TempBlendedBufferInfo_buffersCheckedOut__SWIG_1(long jarg1, TempBlendedBufferInfo jarg1_, boolean jarg2);
  public final static native boolean TempBlendedBufferInfo_buffersCheckedOut__SWIG_2(long jarg1, TempBlendedBufferInfo jarg1_);
  public final static native long new_TempBlendedBufferInfo();
  public final static native void delete_HardwareBufferManagerBase(long jarg1);
  public final static native long HardwareBufferManagerBase_createVertexBuffer__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, long jarg3, int jarg4, boolean jarg5);
  public final static native long HardwareBufferManagerBase_createVertexBuffer__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareBufferManagerBase_createIndexBuffer__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, int jarg2, long jarg3, int jarg4, boolean jarg5);
  public final static native long HardwareBufferManagerBase_createIndexBuffer__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native long HardwareBufferManagerBase_createRenderToVertexBuffer(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native long HardwareBufferManagerBase_createUniformBuffer__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3, boolean jarg4, String jarg5);
  public final static native long HardwareBufferManagerBase_createUniformBuffer__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3, boolean jarg4);
  public final static native long HardwareBufferManagerBase_createUniformBuffer__SWIG_2(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3);
  public final static native long HardwareBufferManagerBase_createUniformBuffer__SWIG_3(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2);
  public final static native long HardwareBufferManagerBase_createCounterBuffer__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3, boolean jarg4, String jarg5);
  public final static native long HardwareBufferManagerBase_createCounterBuffer__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3, boolean jarg4);
  public final static native long HardwareBufferManagerBase_createCounterBuffer__SWIG_2(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, int jarg3);
  public final static native long HardwareBufferManagerBase_createCounterBuffer__SWIG_3(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2);
  public final static native long HardwareBufferManagerBase_createVertexDeclaration(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native void HardwareBufferManagerBase_destroyVertexDeclaration(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, VertexDeclaration jarg2_);
  public final static native long HardwareBufferManagerBase_createVertexBufferBinding(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native void HardwareBufferManagerBase_destroyVertexBufferBinding(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, VertexBufferBinding jarg2_);
  public final static native void HardwareBufferManagerBase_registerVertexBufferSourceAndCopy(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, long jarg3, HardwareVertexBufferPtr jarg3_);
  public final static native long HardwareBufferManagerBase_allocateVertexBufferCopy__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, int jarg3, long jarg4, HardwareBufferLicensee jarg4_, boolean jarg5);
  public final static native long HardwareBufferManagerBase_allocateVertexBufferCopy__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, int jarg3, long jarg4, HardwareBufferLicensee jarg4_);
  public final static native void HardwareBufferManagerBase_releaseVertexBufferCopy(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManagerBase_touchVertexBufferCopy(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManagerBase__freeUnusedBufferCopies(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native void HardwareBufferManagerBase__releaseBufferCopies__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, boolean jarg2);
  public final static native void HardwareBufferManagerBase__releaseBufferCopies__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native void HardwareBufferManagerBase__forceReleaseBufferCopies__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManagerBase__forceReleaseBufferCopies__SWIG_1(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBuffer jarg2_);
  public final static native void HardwareBufferManagerBase__notifyVertexBufferDestroyed(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareVertexBuffer jarg2_);
  public final static native void HardwareBufferManagerBase__notifyIndexBufferDestroyed(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareIndexBuffer jarg2_);
  public final static native void HardwareBufferManagerBase__notifyUniformBufferDestroyed(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareUniformBuffer jarg2_);
  public final static native void HardwareBufferManagerBase__notifyCounterBufferDestroyed(long jarg1, HardwareBufferManagerBase jarg1_, long jarg2, HardwareCounterBuffer jarg2_);
  public final static native void delete_HardwareBufferManager(long jarg1);
  public final static native long HardwareBufferManager_createVertexBuffer__SWIG_0(long jarg1, HardwareBufferManager jarg1_, long jarg2, long jarg3, int jarg4, boolean jarg5);
  public final static native long HardwareBufferManager_createVertexBuffer__SWIG_1(long jarg1, HardwareBufferManager jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long HardwareBufferManager_createIndexBuffer__SWIG_0(long jarg1, HardwareBufferManager jarg1_, int jarg2, long jarg3, int jarg4, boolean jarg5);
  public final static native long HardwareBufferManager_createIndexBuffer__SWIG_1(long jarg1, HardwareBufferManager jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native long HardwareBufferManager_createRenderToVertexBuffer(long jarg1, HardwareBufferManager jarg1_);
  public final static native long HardwareBufferManager_createUniformBuffer__SWIG_0(long jarg1, HardwareBufferManager jarg1_, long jarg2, int jarg3, boolean jarg4, String jarg5);
  public final static native long HardwareBufferManager_createUniformBuffer__SWIG_1(long jarg1, HardwareBufferManager jarg1_, long jarg2, int jarg3, boolean jarg4);
  public final static native long HardwareBufferManager_createCounterBuffer__SWIG_0(long jarg1, HardwareBufferManager jarg1_, long jarg2, int jarg3, boolean jarg4, String jarg5);
  public final static native long HardwareBufferManager_createCounterBuffer__SWIG_1(long jarg1, HardwareBufferManager jarg1_, long jarg2, int jarg3, boolean jarg4);
  public final static native long HardwareBufferManager_createVertexDeclaration(long jarg1, HardwareBufferManager jarg1_);
  public final static native void HardwareBufferManager_destroyVertexDeclaration(long jarg1, HardwareBufferManager jarg1_, long jarg2, VertexDeclaration jarg2_);
  public final static native long HardwareBufferManager_createVertexBufferBinding(long jarg1, HardwareBufferManager jarg1_);
  public final static native void HardwareBufferManager_destroyVertexBufferBinding(long jarg1, HardwareBufferManager jarg1_, long jarg2, VertexBufferBinding jarg2_);
  public final static native void HardwareBufferManager_registerVertexBufferSourceAndCopy(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, long jarg3, HardwareVertexBufferPtr jarg3_);
  public final static native long HardwareBufferManager_allocateVertexBufferCopy__SWIG_0(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, int jarg3, long jarg4, HardwareBufferLicensee jarg4_, boolean jarg5);
  public final static native long HardwareBufferManager_allocateVertexBufferCopy__SWIG_1(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, int jarg3, long jarg4, HardwareBufferLicensee jarg4_);
  public final static native void HardwareBufferManager_releaseVertexBufferCopy(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManager_touchVertexBufferCopy(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManager__freeUnusedBufferCopies(long jarg1, HardwareBufferManager jarg1_);
  public final static native void HardwareBufferManager__releaseBufferCopies__SWIG_0(long jarg1, HardwareBufferManager jarg1_, boolean jarg2);
  public final static native void HardwareBufferManager__releaseBufferCopies__SWIG_1(long jarg1, HardwareBufferManager jarg1_);
  public final static native void HardwareBufferManager__forceReleaseBufferCopies__SWIG_0(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native void HardwareBufferManager__forceReleaseBufferCopies__SWIG_1(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBuffer jarg2_);
  public final static native void HardwareBufferManager__notifyVertexBufferDestroyed(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareVertexBuffer jarg2_);
  public final static native void HardwareBufferManager__notifyIndexBufferDestroyed(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareIndexBuffer jarg2_);
  public final static native void HardwareBufferManager__notifyUniformBufferDestroyed(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareUniformBuffer jarg2_);
  public final static native void HardwareBufferManager__notifyConterBufferDestroyed(long jarg1, HardwareBufferManager jarg1_, long jarg2, HardwareCounterBuffer jarg2_);
  public final static native long HardwareBufferManager_getSingleton();
  public final static native long new_VertexData__SWIG_0(long jarg1, HardwareBufferManagerBase jarg1_);
  public final static native long new_VertexData__SWIG_1();
  public final static native long new_VertexData__SWIG_2(long jarg1, VertexDeclaration jarg1_, long jarg2, VertexBufferBinding jarg2_);
  public final static native void delete_VertexData(long jarg1);
  public final static native void VertexData_vertexDeclaration_set(long jarg1, VertexData jarg1_, long jarg2, VertexDeclaration jarg2_);
  public final static native long VertexData_vertexDeclaration_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_vertexBufferBinding_set(long jarg1, VertexData jarg1_, long jarg2, VertexBufferBinding jarg2_);
  public final static native long VertexData_vertexBufferBinding_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_mDeleteDclBinding_set(long jarg1, VertexData jarg1_, boolean jarg2);
  public final static native boolean VertexData_mDeleteDclBinding_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_vertexStart_set(long jarg1, VertexData jarg1_, long jarg2);
  public final static native long VertexData_vertexStart_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_vertexCount_set(long jarg1, VertexData jarg1_, long jarg2);
  public final static native long VertexData_vertexCount_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_HardwareAnimationData_targetBufferIndex_set(long jarg1, VertexData.HardwareAnimationData jarg1_, int jarg2);
  public final static native int VertexData_HardwareAnimationData_targetBufferIndex_get(long jarg1, VertexData.HardwareAnimationData jarg1_);
  public final static native void VertexData_HardwareAnimationData_parametric_set(long jarg1, VertexData.HardwareAnimationData jarg1_, float jarg2);
  public final static native float VertexData_HardwareAnimationData_parametric_get(long jarg1, VertexData.HardwareAnimationData jarg1_);
  public final static native long new_VertexData_HardwareAnimationData();
  public final static native void delete_VertexData_HardwareAnimationData(long jarg1);
  public final static native void VertexData_hwAnimationDataList_set(long jarg1, VertexData jarg1_, long jarg2);
  public final static native long VertexData_hwAnimationDataList_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_hwAnimDataItemsUsed_set(long jarg1, VertexData jarg1_, long jarg2);
  public final static native long VertexData_hwAnimDataItemsUsed_get(long jarg1, VertexData jarg1_);
  public final static native long VertexData_clone__SWIG_0(long jarg1, VertexData jarg1_, boolean jarg2, long jarg3, HardwareBufferManagerBase jarg3_);
  public final static native long VertexData_clone__SWIG_1(long jarg1, VertexData jarg1_, boolean jarg2);
  public final static native long VertexData_clone__SWIG_2(long jarg1, VertexData jarg1_);
  public final static native void VertexData_prepareForShadowVolume(long jarg1, VertexData jarg1_);
  public final static native void VertexData_hardwareShadowVolWBuffer_set(long jarg1, VertexData jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native long VertexData_hardwareShadowVolWBuffer_get(long jarg1, VertexData jarg1_);
  public final static native void VertexData_reorganiseBuffers__SWIG_0(long jarg1, VertexData jarg1_, long jarg2, VertexDeclaration jarg2_, long jarg3, long jarg4, HardwareBufferManagerBase jarg4_);
  public final static native void VertexData_reorganiseBuffers__SWIG_1(long jarg1, VertexData jarg1_, long jarg2, VertexDeclaration jarg2_, long jarg3);
  public final static native void VertexData_reorganiseBuffers__SWIG_2(long jarg1, VertexData jarg1_, long jarg2, VertexDeclaration jarg2_, long jarg3, HardwareBufferManagerBase jarg3_);
  public final static native void VertexData_reorganiseBuffers__SWIG_3(long jarg1, VertexData jarg1_, long jarg2, VertexDeclaration jarg2_);
  public final static native void VertexData_closeGapsInBindings(long jarg1, VertexData jarg1_);
  public final static native void VertexData_removeUnusedBuffers(long jarg1, VertexData jarg1_);
  public final static native void VertexData_convertPackedColour(long jarg1, VertexData jarg1_, int jarg2, int jarg3);
  public final static native int VertexData_allocateHardwareAnimationElements(long jarg1, VertexData jarg1_, int jarg2, boolean jarg3);
  public final static native long new_IndexData__SWIG_1();
  public final static native void delete_IndexData(long jarg1);
  public final static native void IndexData_indexBuffer_set(long jarg1, IndexData jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_);
  public final static native long IndexData_indexBuffer_get(long jarg1, IndexData jarg1_);
  public final static native void IndexData_indexStart_set(long jarg1, IndexData jarg1_, long jarg2);
  public final static native long IndexData_indexStart_get(long jarg1, IndexData jarg1_);
  public final static native void IndexData_indexCount_set(long jarg1, IndexData jarg1_, long jarg2);
  public final static native long IndexData_indexCount_get(long jarg1, IndexData jarg1_);
  public final static native long IndexData_clone__SWIG_0(long jarg1, IndexData jarg1_, boolean jarg2, long jarg3, HardwareBufferManagerBase jarg3_);
  public final static native long IndexData_clone__SWIG_1(long jarg1, IndexData jarg1_, boolean jarg2);
  public final static native long IndexData_clone__SWIG_2(long jarg1, IndexData jarg1_);
  public final static native void IndexData_optimiseVertexCacheTriList(long jarg1, IndexData jarg1_);
  public final static native long new_VertexCacheProfiler__SWIG_0(long jarg1);
  public final static native long new_VertexCacheProfiler__SWIG_1();
  public final static native void delete_VertexCacheProfiler(long jarg1);
  public final static native void VertexCacheProfiler_profile(long jarg1, VertexCacheProfiler jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_);
  public final static native void VertexCacheProfiler_reset(long jarg1, VertexCacheProfiler jarg1_);
  public final static native void VertexCacheProfiler_flush(long jarg1, VertexCacheProfiler jarg1_);
  public final static native long VertexCacheProfiler_getHits(long jarg1, VertexCacheProfiler jarg1_);
  public final static native long VertexCacheProfiler_getMisses(long jarg1, VertexCacheProfiler jarg1_);
  public final static native long VertexCacheProfiler_getSize(long jarg1, VertexCacheProfiler jarg1_);
  public final static native void delete_ResourceGroupListener(long jarg1);
  public final static native void ResourceGroupListener_resourceGroupScriptingStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2, long jarg3);
  public final static native void ResourceGroupListener_scriptParseStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2, long jarg3);
  public final static native void ResourceGroupListener_scriptParseEnded(long jarg1, ResourceGroupListener jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupListener_resourceGroupScriptingEnded(long jarg1, ResourceGroupListener jarg1_, String jarg2);
  public final static native void ResourceGroupListener_resourceGroupPrepareStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2, long jarg3);
  public final static native void ResourceGroupListener_resourcePrepareStarted(long jarg1, ResourceGroupListener jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceGroupListener_resourcePrepareEnded(long jarg1, ResourceGroupListener jarg1_);
  public final static native void ResourceGroupListener_worldGeometryPrepareStageStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2);
  public final static native void ResourceGroupListener_worldGeometryPrepareStageEnded(long jarg1, ResourceGroupListener jarg1_);
  public final static native void ResourceGroupListener_resourceGroupPrepareEnded(long jarg1, ResourceGroupListener jarg1_, String jarg2);
  public final static native void ResourceGroupListener_resourceGroupLoadStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2, long jarg3);
  public final static native void ResourceGroupListener_resourceLoadStarted(long jarg1, ResourceGroupListener jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceGroupListener_resourceLoadEnded(long jarg1, ResourceGroupListener jarg1_);
  public final static native void ResourceGroupListener_worldGeometryStageStarted(long jarg1, ResourceGroupListener jarg1_, String jarg2);
  public final static native void ResourceGroupListener_worldGeometryStageEnded(long jarg1, ResourceGroupListener jarg1_);
  public final static native void ResourceGroupListener_resourceGroupLoadEnded(long jarg1, ResourceGroupListener jarg1_, String jarg2);
  public final static native void ResourceGroupListener_resourceCreated(long jarg1, ResourceGroupListener jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceGroupListener_resourceRemove(long jarg1, ResourceGroupListener jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native long new_ResourceGroupListener();
  public final static native void delete_ResourceLoadingListener(long jarg1);
  public final static native long ResourceLoadingListener_resourceLoading(long jarg1, ResourceLoadingListener jarg1_, String jarg2, String jarg3, long jarg4, Resource jarg4_);
  public final static native void ResourceLoadingListener_resourceStreamOpened(long jarg1, ResourceLoadingListener jarg1_, String jarg2, String jarg3, long jarg4, Resource jarg4_, long jarg5);
  public final static native boolean ResourceLoadingListener_resourceCollision(long jarg1, ResourceLoadingListener jarg1_, long jarg2, Resource jarg2_, long jarg3, ResourceManager jarg3_);
  public final static native String ResourceGroupManager_DEFAULT_RESOURCE_GROUP_NAME_get();
  public final static native String ResourceGroupManager_INTERNAL_RESOURCE_GROUP_NAME_get();
  public final static native String ResourceGroupManager_AUTODETECT_RESOURCE_GROUP_NAME_get();
  public final static native int ResourceGroupManager_RESOURCE_SYSTEM_NUM_REFERENCE_COUNTS_get();
  public final static native void ResourceGroupManager_ResourceDeclaration_resourceName_set(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_, String jarg2);
  public final static native String ResourceGroupManager_ResourceDeclaration_resourceName_get(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_);
  public final static native void ResourceGroupManager_ResourceDeclaration_resourceType_set(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_, String jarg2);
  public final static native String ResourceGroupManager_ResourceDeclaration_resourceType_get(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_);
  public final static native void ResourceGroupManager_ResourceDeclaration_loader_set(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_, long jarg2, ManualResourceLoader jarg2_);
  public final static native long ResourceGroupManager_ResourceDeclaration_loader_get(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_);
  public final static native void ResourceGroupManager_ResourceDeclaration_parameters_set(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_, long jarg2);
  public final static native long ResourceGroupManager_ResourceDeclaration_parameters_get(long jarg1, ResourceGroupManager.ResourceDeclaration jarg1_);
  public final static native long new_ResourceGroupManager_ResourceDeclaration();
  public final static native void delete_ResourceGroupManager_ResourceDeclaration(long jarg1);
  public final static native void ResourceGroupManager_ResourceLocation_archive_set(long jarg1, ResourceGroupManager.ResourceLocation jarg1_, long jarg2, Archive jarg2_);
  public final static native long ResourceGroupManager_ResourceLocation_archive_get(long jarg1, ResourceGroupManager.ResourceLocation jarg1_);
  public final static native void ResourceGroupManager_ResourceLocation_recursive_set(long jarg1, ResourceGroupManager.ResourceLocation jarg1_, boolean jarg2);
  public final static native boolean ResourceGroupManager_ResourceLocation_recursive_get(long jarg1, ResourceGroupManager.ResourceLocation jarg1_);
  public final static native long new_ResourceGroupManager_ResourceLocation();
  public final static native void delete_ResourceGroupManager_ResourceLocation(long jarg1);
  public final static native long new_ResourceGroupManager();
  public final static native void delete_ResourceGroupManager(long jarg1);
  public final static native void ResourceGroupManager_createResourceGroup__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupManager_createResourceGroup__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_initialiseResourceGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_initialiseAllResourceGroups(long jarg1, ResourceGroupManager jarg1_);
  public final static native void ResourceGroupManager_prepareResourceGroup__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native void ResourceGroupManager_prepareResourceGroup__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupManager_prepareResourceGroup__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_loadResourceGroup__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native void ResourceGroupManager_loadResourceGroup__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupManager_loadResourceGroup__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_unloadResourceGroup__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupManager_unloadResourceGroup__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_unloadUnreferencedResourcesInGroup__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ResourceGroupManager_unloadUnreferencedResourcesInGroup__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_clearResourceGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_destroyResourceGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native boolean ResourceGroupManager_isResourceGroupInitialised(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native boolean ResourceGroupManager_isResourceGroupLoaded(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native boolean ResourceGroupManager_resourceGroupExists(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_addResourceLocation__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5, boolean jarg6);
  public final static native void ResourceGroupManager_addResourceLocation__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native void ResourceGroupManager_addResourceLocation__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ResourceGroupManager_addResourceLocation__SWIG_3(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceGroupManager_removeResourceLocation__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceGroupManager_removeResourceLocation__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native boolean ResourceGroupManager_resourceLocationExists__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native boolean ResourceGroupManager_resourceLocationExists__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_declareResource__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native void ResourceGroupManager_declareResource__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ResourceGroupManager_declareResource__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceGroupManager_declareResource__SWIG_3(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native void ResourceGroupManager_declareResource__SWIG_4(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native void ResourceGroupManager_undeclareResource(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_openResource__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, long jarg4, Resource jarg4_);
  public final static native long ResourceGroupManager_openResource__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_openResource__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_openResources__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_openResources__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_listResourceNames__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native long ResourceGroupManager_listResourceNames__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_listResourceFileInfo__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, boolean jarg3);
  public final static native long ResourceGroupManager_listResourceFileInfo__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_findResourceNames__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ResourceGroupManager_findResourceNames__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native boolean ResourceGroupManager_resourceExists(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native boolean ResourceGroupManager_resourceExistsInAnyGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native String ResourceGroupManager_findGroupContainingResource(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_findResourceFileInfo__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ResourceGroupManager_findResourceFileInfo__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_resourceModifiedTime(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_listResourceLocations(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_findResourceLocation(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_createResource__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, boolean jarg4, String jarg5);
  public final static native long ResourceGroupManager_createResource__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ResourceGroupManager_createResource__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native long ResourceGroupManager_createResource__SWIG_3(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_deleteResource__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ResourceGroupManager_deleteResource__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceGroupManager_deleteResource__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_deleteMatchingResources__SWIG_0(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ResourceGroupManager_deleteMatchingResources__SWIG_1(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceGroupManager_deleteMatchingResources__SWIG_2(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_addResourceGroupListener(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourceGroupListener jarg2_);
  public final static native void ResourceGroupManager_removeResourceGroupListener(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourceGroupListener jarg2_);
  public final static native void ResourceGroupManager_setWorldResourceGroupName(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native String ResourceGroupManager_getWorldResourceGroupName(long jarg1, ResourceGroupManager jarg1_);
  public final static native void ResourceGroupManager_linkWorldGeometryToResourceGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2, String jarg3, long jarg4, SceneManager jarg4_);
  public final static native void ResourceGroupManager_unlinkWorldGeometryFromResourceGroup(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native boolean ResourceGroupManager_isResourceGroupInGlobalPool(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_shutdownAll(long jarg1, ResourceGroupManager jarg1_);
  public final static native void ResourceGroupManager__registerResourceManager(long jarg1, ResourceGroupManager jarg1_, String jarg2, long jarg3, ResourceManager jarg3_);
  public final static native void ResourceGroupManager__unregisterResourceManager(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_getResourceManagerIterator(long jarg1, ResourceGroupManager jarg1_);
  public final static native void ResourceGroupManager__registerScriptLoader(long jarg1, ResourceGroupManager jarg1_, long jarg2, ScriptLoader jarg2_);
  public final static native void ResourceGroupManager__unregisterScriptLoader(long jarg1, ResourceGroupManager jarg1_, long jarg2, ScriptLoader jarg2_);
  public final static native long ResourceGroupManager__findScriptLoader(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager__getResourceManager(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager__notifyResourceCreated(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceGroupManager__notifyResourceRemoved(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceGroupManager__notifyResourceGroupChanged(long jarg1, ResourceGroupManager jarg1_, String jarg2, long jarg3, Resource jarg3_);
  public final static native void ResourceGroupManager__notifyAllResourcesRemoved(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourceManager jarg2_);
  public final static native void ResourceGroupManager__notifyWorldGeometryStageStarted(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager__notifyWorldGeometryStageEnded(long jarg1, ResourceGroupManager jarg1_);
  public final static native long ResourceGroupManager_getResourceGroups(long jarg1, ResourceGroupManager jarg1_);
  public final static native long ResourceGroupManager_getResourceDeclarationList(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native long ResourceGroupManager_getResourceLocationList(long jarg1, ResourceGroupManager jarg1_, String jarg2);
  public final static native void ResourceGroupManager_setLoadingListener(long jarg1, ResourceGroupManager jarg1_, long jarg2, ResourceLoadingListener jarg2_);
  public final static native long ResourceGroupManager_getLoadingListener(long jarg1, ResourceGroupManager jarg1_);
  public final static native long ResourceGroupManager_getSingleton();
  public final static native void delete_ResourceManager(long jarg1);
  public final static native long ResourceManager_createResource__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long ResourceManager_createResource__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long ResourceManager_createResource__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ResourceManager_createResource__SWIG_3(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceManager_setMemoryBudget(long jarg1, ResourceManager jarg1_, long jarg2);
  public final static native long ResourceManager_getMemoryBudget(long jarg1, ResourceManager jarg1_);
  public final static native long ResourceManager_getMemoryUsage(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_unload__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceManager_unload__SWIG_1(long jarg1, ResourceManager jarg1_, java.math.BigInteger jarg2);
  public final static native void ResourceManager_unloadAll__SWIG_0(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native void ResourceManager_unloadAll__SWIG_1(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_reloadAll__SWIG_0(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native void ResourceManager_reloadAll__SWIG_1(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_unloadUnreferencedResources__SWIG_0(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native void ResourceManager_unloadUnreferencedResources__SWIG_1(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_reloadUnreferencedResources__SWIG_0(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native void ResourceManager_reloadUnreferencedResources__SWIG_1(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_unloadAll__SWIG_2(long jarg1, ResourceManager jarg1_, int jarg2);
  public final static native void ResourceManager_reloadAll__SWIG_2(long jarg1, ResourceManager jarg1_, int jarg2);
  public final static native void ResourceManager_remove__SWIG_0(long jarg1, ResourceManager jarg1_, long jarg2, ResourcePtr jarg2_);
  public final static native void ResourceManager_remove__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3);
  public final static native void ResourceManager_remove__SWIG_2(long jarg1, ResourceManager jarg1_, java.math.BigInteger jarg2);
  public final static native void ResourceManager_removeAll(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_removeUnreferencedResources__SWIG_0(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native void ResourceManager_removeUnreferencedResources__SWIG_1(long jarg1, ResourceManager jarg1_);
  public final static native long ResourceManager_getByHandle(long jarg1, ResourceManager jarg1_, java.math.BigInteger jarg2);
  public final static native boolean ResourceManager_resourceExists__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, String jarg3);
  public final static native boolean ResourceManager_resourceExists__SWIG_1(long jarg1, ResourceManager jarg1_, java.math.BigInteger jarg2);
  public final static native void ResourceManager__notifyResourceTouched(long jarg1, ResourceManager jarg1_, long jarg2, Resource jarg2_);
  public final static native void ResourceManager__notifyResourceLoaded(long jarg1, ResourceManager jarg1_, long jarg2, Resource jarg2_);
  public final static native void ResourceManager__notifyResourceUnloaded(long jarg1, ResourceManager jarg1_, long jarg2, Resource jarg2_);
  public final static native long ResourceManager_getScriptPatterns(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_parseScript(long jarg1, ResourceManager jarg1_, long jarg2, String jarg3);
  public final static native float ResourceManager_getLoadingOrder(long jarg1, ResourceManager jarg1_);
  public final static native String ResourceManager_getResourceType(long jarg1, ResourceManager jarg1_);
  public final static native void ResourceManager_setVerbose(long jarg1, ResourceManager jarg1_, boolean jarg2);
  public final static native boolean ResourceManager_getVerbose(long jarg1, ResourceManager jarg1_);
  public final static native long new_ResourceManager_ResourcePool(String jarg1);
  public final static native void delete_ResourceManager_ResourcePool(long jarg1);
  public final static native String ResourceManager_ResourcePool_getName(long jarg1, ResourceManager.ResourcePool jarg1_);
  public final static native void ResourceManager_ResourcePool_clear(long jarg1, ResourceManager.ResourcePool jarg1_);
  public final static native long ResourceManager_getResourcePool(long jarg1, ResourceManager jarg1_, String jarg2);
  public final static native void ResourceManager_destroyResourcePool__SWIG_0(long jarg1, ResourceManager jarg1_, long jarg2, ResourceManager.ResourcePool jarg2_);
  public final static native void ResourceManager_destroyResourcePool__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2);
  public final static native void ResourceManager_destroyAllResourcePools(long jarg1, ResourceManager jarg1_);
  public final static native long ResourceManager_getResourceIterator(long jarg1, ResourceManager jarg1_);
  public final static native void delete_TextureManager(long jarg1);
  public final static native long TextureManager_create__SWIG_0(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long TextureManager_create__SWIG_1(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long TextureManager_create__SWIG_2(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long TextureManager_create__SWIG_3(long jarg1, TextureManager jarg1_, String jarg2, String jarg3);
  public final static native long TextureManager_getByName(long jarg1, TextureManager jarg1_, String jarg2, String jarg3);
  public final static native long TextureManager_loadImage__SWIG_0(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5, int jarg6, float jarg7, boolean jarg8, int jarg9, boolean jarg10);
  public final static native long TextureManager_loadImage__SWIG_1(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5, int jarg6, float jarg7, boolean jarg8, int jarg9);
  public final static native long TextureManager_loadImage__SWIG_2(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5, int jarg6, float jarg7, boolean jarg8);
  public final static native long TextureManager_loadImage__SWIG_3(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5, int jarg6, float jarg7);
  public final static native long TextureManager_loadImage__SWIG_4(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5, int jarg6);
  public final static native long TextureManager_loadImage__SWIG_5(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_, int jarg5);
  public final static native long TextureManager_loadImage__SWIG_6(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, Image jarg4_);
  public final static native long TextureManager_loadRawData__SWIG_0(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9, float jarg10, boolean jarg11);
  public final static native long TextureManager_loadRawData__SWIG_1(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9, float jarg10);
  public final static native long TextureManager_loadRawData__SWIG_2(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);
  public final static native long TextureManager_loadRawData__SWIG_3(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6, int jarg7, int jarg8);
  public final static native long TextureManager_loadRawData__SWIG_4(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long TextureManager_createManual__SWIG_0(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, long jarg11, ManualResourceLoader jarg11_, boolean jarg12, long jarg13, String jarg14);
  public final static native long TextureManager_createManual__SWIG_1(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, long jarg11, ManualResourceLoader jarg11_, boolean jarg12, long jarg13);
  public final static native long TextureManager_createManual__SWIG_2(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, long jarg11, ManualResourceLoader jarg11_, boolean jarg12);
  public final static native long TextureManager_createManual__SWIG_3(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, long jarg11, ManualResourceLoader jarg11_);
  public final static native long TextureManager_createManual__SWIG_4(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native long TextureManager_createManual__SWIG_5(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native long TextureManager_createManual__SWIG_6(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9, long jarg10, ManualResourceLoader jarg10_, boolean jarg11, long jarg12, String jarg13);
  public final static native long TextureManager_createManual__SWIG_7(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9, long jarg10, ManualResourceLoader jarg10_, boolean jarg11, long jarg12);
  public final static native long TextureManager_createManual__SWIG_8(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9, long jarg10, ManualResourceLoader jarg10_, boolean jarg11);
  public final static native long TextureManager_createManual__SWIG_9(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9, long jarg10, ManualResourceLoader jarg10_);
  public final static native long TextureManager_createManual__SWIG_10(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9);
  public final static native long TextureManager_createManual__SWIG_11(long jarg1, TextureManager jarg1_, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void TextureManager_setPreferredIntegerBitDepth__SWIG_0(long jarg1, TextureManager jarg1_, int jarg2, boolean jarg3);
  public final static native void TextureManager_setPreferredIntegerBitDepth__SWIG_1(long jarg1, TextureManager jarg1_, int jarg2);
  public final static native int TextureManager_getPreferredIntegerBitDepth(long jarg1, TextureManager jarg1_);
  public final static native void TextureManager_setPreferredFloatBitDepth__SWIG_0(long jarg1, TextureManager jarg1_, int jarg2, boolean jarg3);
  public final static native void TextureManager_setPreferredFloatBitDepth__SWIG_1(long jarg1, TextureManager jarg1_, int jarg2);
  public final static native int TextureManager_getPreferredFloatBitDepth(long jarg1, TextureManager jarg1_);
  public final static native void TextureManager_setPreferredBitDepths__SWIG_0(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, boolean jarg4);
  public final static native void TextureManager_setPreferredBitDepths__SWIG_1(long jarg1, TextureManager jarg1_, int jarg2, int jarg3);
  public final static native boolean TextureManager_isFormatSupported(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native boolean TextureManager_isEquivalentFormatSupported(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int TextureManager_getNativeFormat(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native boolean TextureManager_isHardwareFilteringSupported__SWIG_0(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5);
  public final static native boolean TextureManager_isHardwareFilteringSupported__SWIG_1(long jarg1, TextureManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void TextureManager_setDefaultNumMipmaps(long jarg1, TextureManager jarg1_, long jarg2);
  public final static native long TextureManager_getDefaultNumMipmaps(long jarg1, TextureManager jarg1_);
  public final static native long TextureManager__getWarningTexture(long jarg1, TextureManager jarg1_);
  public final static native long TextureManager_getSingleton();
  public final static native void delete_GpuProgramManager(long jarg1);
  public final static native long GpuProgramManager_getByName__SWIG_0(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long GpuProgramManager_getByName__SWIG_1(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3);
  public final static native long GpuProgramManager_loadFromString(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, String jarg6);
  public final static native long GpuProgramManager_getSupportedSyntax(long jarg1, GpuProgramManager jarg1_);
  public final static native boolean GpuProgramManager_isSyntaxSupported(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native long GpuProgramManager_createParameters(long jarg1, GpuProgramManager jarg1_);
  public final static native long GpuProgramManager_createProgram(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, String jarg6);
  public final static native long GpuProgramManager_createProgramFromString(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, String jarg6);
  public final static native long GpuProgramManager_create__SWIG_0(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, boolean jarg6, long jarg7, ManualResourceLoader jarg7_);
  public final static native long GpuProgramManager_create__SWIG_1(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, boolean jarg6);
  public final static native long GpuProgramManager_create__SWIG_2(long jarg1, GpuProgramManager jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native long GpuProgramManager_createSharedParameters(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native long GpuProgramManager_getSharedParameters(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native long GpuProgramManager_getAvailableSharedParameters(long jarg1, GpuProgramManager jarg1_);
  public final static native boolean GpuProgramManager_getSaveMicrocodesToCache(long jarg1, GpuProgramManager jarg1_);
  public final static native void GpuProgramManager_setSaveMicrocodesToCache(long jarg1, GpuProgramManager jarg1_, boolean jarg2);
  public final static native boolean GpuProgramManager_isCacheDirty(long jarg1, GpuProgramManager jarg1_);
  public final static native boolean GpuProgramManager_canGetCompiledShaderBuffer(long jarg1, GpuProgramManager jarg1_);
  public final static native boolean GpuProgramManager_isMicrocodeAvailableInCache(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native long GpuProgramManager_getMicrocodeFromCache(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native long GpuProgramManager_createMicrocode(long jarg1, GpuProgramManager jarg1_, long jarg2);
  public final static native void GpuProgramManager_addMicrocodeToCache(long jarg1, GpuProgramManager jarg1_, String jarg2, long jarg3);
  public final static native void GpuProgramManager_removeMicrocodeFromCache(long jarg1, GpuProgramManager jarg1_, String jarg2);
  public final static native void GpuProgramManager_saveMicrocodeCache(long jarg1, GpuProgramManager jarg1_, long jarg2);
  public final static native void GpuProgramManager_loadMicrocodeCache(long jarg1, GpuProgramManager jarg1_, long jarg2);
  public final static native long GpuProgramManager_getSingleton();
  public final static native void delete_HighLevelGpuProgramFactory(long jarg1);
  public final static native String HighLevelGpuProgramFactory_getLanguage(long jarg1, HighLevelGpuProgramFactory jarg1_);
  public final static native long HighLevelGpuProgramFactory_create(long jarg1, HighLevelGpuProgramFactory jarg1_, long jarg2, ResourceManager jarg2_, String jarg3, java.math.BigInteger jarg4, String jarg5, boolean jarg6, long jarg7, ManualResourceLoader jarg7_);
  public final static native void HighLevelGpuProgramFactory_destroy(long jarg1, HighLevelGpuProgramFactory jarg1_, long jarg2, HighLevelGpuProgram jarg2_);
  public final static native long new_HighLevelGpuProgramManager();
  public final static native void delete_HighLevelGpuProgramManager(long jarg1);
  public final static native void HighLevelGpuProgramManager_addFactory(long jarg1, HighLevelGpuProgramManager jarg1_, long jarg2, HighLevelGpuProgramFactory jarg2_);
  public final static native void HighLevelGpuProgramManager_removeFactory(long jarg1, HighLevelGpuProgramManager jarg1_, long jarg2, HighLevelGpuProgramFactory jarg2_);
  public final static native boolean HighLevelGpuProgramManager_isLanguageSupported(long jarg1, HighLevelGpuProgramManager jarg1_, String jarg2);
  public final static native long HighLevelGpuProgramManager_getByName(long jarg1, HighLevelGpuProgramManager jarg1_, String jarg2, String jarg3);
  public final static native long HighLevelGpuProgramManager_createProgram(long jarg1, HighLevelGpuProgramManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long HighLevelGpuProgramManager_getSingleton();
  public final static native void UnifiedHighLevelGpuProgram_setPriority(String jarg1, int jarg2);
  public final static native int UnifiedHighLevelGpuProgram_getPriority(String jarg1);
  public final static native long new_UnifiedHighLevelGpuProgram__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_UnifiedHighLevelGpuProgram__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_UnifiedHighLevelGpuProgram__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_UnifiedHighLevelGpuProgram(long jarg1);
  public final static native long UnifiedHighLevelGpuProgram_calculateSize(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_addDelegateProgram(long jarg1, UnifiedHighLevelGpuProgram jarg1_, String jarg2);
  public final static native void UnifiedHighLevelGpuProgram_clearDelegatePrograms(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native long UnifiedHighLevelGpuProgram__getDelegate(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native String UnifiedHighLevelGpuProgram_getLanguage(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native long UnifiedHighLevelGpuProgram_createParameters(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native long UnifiedHighLevelGpuProgram__getBindingDelegate(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isSupported(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isSkeletalAnimationIncluded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isMorphAnimationIncluded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isPoseAnimationIncluded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native int UnifiedHighLevelGpuProgram_getNumberOfPosesIncluded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isVertexTextureFetchRequired(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native long UnifiedHighLevelGpuProgram_getDefaultParameters(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_hasDefaultParameters(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_getPassSurfaceAndLightStates(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_getPassFogStates(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_getPassTransformStates(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_hasCompileError(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_resetCompileError(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_load__SWIG_0(long jarg1, UnifiedHighLevelGpuProgram jarg1_, boolean jarg2);
  public final static native void UnifiedHighLevelGpuProgram_load__SWIG_1(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_reload__SWIG_0(long jarg1, UnifiedHighLevelGpuProgram jarg1_, int jarg2);
  public final static native void UnifiedHighLevelGpuProgram_reload__SWIG_1(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isReloadable(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isLoaded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isLoading(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native int UnifiedHighLevelGpuProgram_getLoadingState(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_unload(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native long UnifiedHighLevelGpuProgram_getSize(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_touch(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native boolean UnifiedHighLevelGpuProgram_isBackgroundLoaded(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_setBackgroundLoaded(long jarg1, UnifiedHighLevelGpuProgram jarg1_, boolean jarg2);
  public final static native void UnifiedHighLevelGpuProgram_escalateLoading(long jarg1, UnifiedHighLevelGpuProgram jarg1_);
  public final static native void UnifiedHighLevelGpuProgram_addListener(long jarg1, UnifiedHighLevelGpuProgram jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void UnifiedHighLevelGpuProgram_removeListener(long jarg1, UnifiedHighLevelGpuProgram jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native long new_UnifiedHighLevelGpuProgramFactory();
  public final static native void delete_UnifiedHighLevelGpuProgramFactory(long jarg1);
  public final static native String UnifiedHighLevelGpuProgramFactory_getLanguage(long jarg1, UnifiedHighLevelGpuProgramFactory jarg1_);
  public final static native long UnifiedHighLevelGpuProgramFactory_create(long jarg1, UnifiedHighLevelGpuProgramFactory jarg1_, long jarg2, ResourceManager jarg2_, String jarg3, java.math.BigInteger jarg4, String jarg5, boolean jarg6, long jarg7, ManualResourceLoader jarg7_);
  public final static native void UnifiedHighLevelGpuProgramFactory_destroy(long jarg1, UnifiedHighLevelGpuProgramFactory jarg1_, long jarg2, HighLevelGpuProgram jarg2_);
  public final static native long new_KeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void delete_KeyFrame(long jarg1);
  public final static native float KeyFrame_getTime(long jarg1, KeyFrame jarg1_);
  public final static native long KeyFrame__clone(long jarg1, KeyFrame jarg1_, long jarg2, AnimationTrack jarg2_);
  public final static native long new_NumericKeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void delete_NumericKeyFrame(long jarg1);
  public final static native long NumericKeyFrame_getValue(long jarg1, NumericKeyFrame jarg1_);
  public final static native void NumericKeyFrame_setValue(long jarg1, NumericKeyFrame jarg1_, long jarg2, AnyNumeric jarg2_);
  public final static native long NumericKeyFrame__clone(long jarg1, NumericKeyFrame jarg1_, long jarg2, AnimationTrack jarg2_);
  public final static native long new_TransformKeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void delete_TransformKeyFrame(long jarg1);
  public final static native void TransformKeyFrame_setTranslate(long jarg1, TransformKeyFrame jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long TransformKeyFrame_getTranslate(long jarg1, TransformKeyFrame jarg1_);
  public final static native void TransformKeyFrame_setScale(long jarg1, TransformKeyFrame jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long TransformKeyFrame_getScale(long jarg1, TransformKeyFrame jarg1_);
  public final static native void TransformKeyFrame_setRotation(long jarg1, TransformKeyFrame jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long TransformKeyFrame_getRotation(long jarg1, TransformKeyFrame jarg1_);
  public final static native long TransformKeyFrame__clone(long jarg1, TransformKeyFrame jarg1_, long jarg2, AnimationTrack jarg2_);
  public final static native long new_VertexMorphKeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void delete_VertexMorphKeyFrame(long jarg1);
  public final static native void VertexMorphKeyFrame_setVertexBuffer(long jarg1, VertexMorphKeyFrame jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native long VertexMorphKeyFrame_getVertexBuffer(long jarg1, VertexMorphKeyFrame jarg1_);
  public final static native long VertexMorphKeyFrame__clone(long jarg1, VertexMorphKeyFrame jarg1_, long jarg2, AnimationTrack jarg2_);
  public final static native long new_VertexPoseKeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void delete_VertexPoseKeyFrame(long jarg1);
  public final static native void VertexPoseKeyFrame_PoseRef_poseIndex_set(long jarg1, VertexPoseKeyFrame.PoseRef jarg1_, int jarg2);
  public final static native int VertexPoseKeyFrame_PoseRef_poseIndex_get(long jarg1, VertexPoseKeyFrame.PoseRef jarg1_);
  public final static native void VertexPoseKeyFrame_PoseRef_influence_set(long jarg1, VertexPoseKeyFrame.PoseRef jarg1_, float jarg2);
  public final static native float VertexPoseKeyFrame_PoseRef_influence_get(long jarg1, VertexPoseKeyFrame.PoseRef jarg1_);
  public final static native long new_VertexPoseKeyFrame_PoseRef(int jarg1, float jarg2);
  public final static native void delete_VertexPoseKeyFrame_PoseRef(long jarg1);
  public final static native void VertexPoseKeyFrame_addPoseReference(long jarg1, VertexPoseKeyFrame jarg1_, int jarg2, float jarg3);
  public final static native void VertexPoseKeyFrame_updatePoseReference(long jarg1, VertexPoseKeyFrame jarg1_, int jarg2, float jarg3);
  public final static native void VertexPoseKeyFrame_removePoseReference(long jarg1, VertexPoseKeyFrame jarg1_, int jarg2);
  public final static native void VertexPoseKeyFrame_removeAllPoseReferences(long jarg1, VertexPoseKeyFrame jarg1_);
  public final static native long VertexPoseKeyFrame_getPoseReferences(long jarg1, VertexPoseKeyFrame jarg1_);
  public final static native long VertexPoseKeyFrame__clone(long jarg1, VertexPoseKeyFrame jarg1_, long jarg2, AnimationTrack jarg2_);
  public final static native void VertexPoseKeyFrame__applyBaseKeyFrame(long jarg1, VertexPoseKeyFrame jarg1_, long jarg2, VertexPoseKeyFrame jarg2_);
  public final static native long new_Pose__SWIG_0(int jarg1, String jarg2);
  public final static native long new_Pose__SWIG_1(int jarg1);
  public final static native String Pose_getName(long jarg1, Pose jarg1_);
  public final static native int Pose_getTarget(long jarg1, Pose jarg1_);
  public final static native boolean Pose_getIncludesNormals(long jarg1, Pose jarg1_);
  public final static native void Pose_addVertex__SWIG_0(long jarg1, Pose jarg1_, long jarg2, long jarg3, Vector3 jarg3_);
  public final static native void Pose_addVertex__SWIG_1(long jarg1, Pose jarg1_, long jarg2, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_);
  public final static native void Pose_removeVertex(long jarg1, Pose jarg1_, long jarg2);
  public final static native void Pose_clearVertices(long jarg1, Pose jarg1_);
  public final static native long Pose_getVertexOffsetIterator__SWIG_0(long jarg1, Pose jarg1_);
  public final static native long Pose_getVertexOffsets(long jarg1, Pose jarg1_);
  public final static native long Pose_getNormalsIterator__SWIG_0(long jarg1, Pose jarg1_);
  public final static native long Pose_getNormals(long jarg1, Pose jarg1_);
  public final static native long Pose__getHardwareVertexBuffer(long jarg1, Pose jarg1_, long jarg2, VertexData jarg2_);
  public final static native long Pose_clone(long jarg1, Pose jarg1_);
  public final static native void delete_Pose(long jarg1);
  public final static native long new_TimeIndex__SWIG_0(float jarg1);
  public final static native long new_TimeIndex__SWIG_1(float jarg1, long jarg2);
  public final static native boolean TimeIndex_hasKeyIndex(long jarg1, TimeIndex jarg1_);
  public final static native float TimeIndex_getTimePos(long jarg1, TimeIndex jarg1_);
  public final static native long TimeIndex_getKeyIndex(long jarg1, TimeIndex jarg1_);
  public final static native void delete_TimeIndex(long jarg1);
  public final static native void delete_AnimationTrack_Listener(long jarg1);
  public final static native boolean AnimationTrack_Listener_getInterpolatedKeyFrame(long jarg1, AnimationTrack.Listener jarg1_, long jarg2, AnimationTrack jarg2_, long jarg3, TimeIndex jarg3_, long jarg4, KeyFrame jarg4_);
  public final static native long new_AnimationTrack_Listener();
  public final static native void AnimationTrack_Listener_director_connect(AnimationTrack.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AnimationTrack_Listener_change_ownership(AnimationTrack.Listener obj, long cptr, boolean take_or_release);
  public final static native void delete_AnimationTrack(long jarg1);
  public final static native int AnimationTrack_getHandle(long jarg1, AnimationTrack jarg1_);
  public final static native int AnimationTrack_getNumKeyFrames(long jarg1, AnimationTrack jarg1_);
  public final static native long AnimationTrack_getKeyFrame(long jarg1, AnimationTrack jarg1_, int jarg2);
  public final static native float AnimationTrack_getKeyFramesAtTime__SWIG_0(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native float AnimationTrack_getKeyFramesAtTime__SWIG_1(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, long jarg4);
  public final static native long AnimationTrack_createKeyFrame(long jarg1, AnimationTrack jarg1_, float jarg2);
  public final static native void AnimationTrack_removeKeyFrame(long jarg1, AnimationTrack jarg1_, int jarg2);
  public final static native void AnimationTrack_removeAllKeyFrames(long jarg1, AnimationTrack jarg1_);
  public final static native void AnimationTrack_getInterpolatedKeyFrame(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, KeyFrame jarg3_);
  public final static native void AnimationTrack_apply__SWIG_0(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3, float jarg4);
  public final static native void AnimationTrack_apply__SWIG_1(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3);
  public final static native void AnimationTrack_apply__SWIG_2(long jarg1, AnimationTrack jarg1_, long jarg2, TimeIndex jarg2_);
  public final static native void AnimationTrack__keyFrameDataChanged(long jarg1, AnimationTrack jarg1_);
  public final static native boolean AnimationTrack_hasNonZeroKeyFrames(long jarg1, AnimationTrack jarg1_);
  public final static native void AnimationTrack_optimise(long jarg1, AnimationTrack jarg1_);
  public final static native void AnimationTrack__collectKeyFrameTimes(long jarg1, AnimationTrack jarg1_, long jarg2);
  public final static native void AnimationTrack__buildKeyFrameIndexMap(long jarg1, AnimationTrack jarg1_, long jarg2);
  public final static native void AnimationTrack__applyBaseKeyFrame(long jarg1, AnimationTrack jarg1_, long jarg2, KeyFrame jarg2_);
  public final static native void AnimationTrack_setListener(long jarg1, AnimationTrack jarg1_, long jarg2, AnimationTrack.Listener jarg2_);
  public final static native long AnimationTrack_getParent(long jarg1, AnimationTrack jarg1_);
  public final static native long new_NumericAnimationTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2);
  public final static native long new_NumericAnimationTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, long jarg3);
  public final static native long NumericAnimationTrack_createNumericKeyFrame(long jarg1, NumericAnimationTrack jarg1_, float jarg2);
  public final static native void NumericAnimationTrack_getInterpolatedKeyFrame(long jarg1, NumericAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, KeyFrame jarg3_);
  public final static native void NumericAnimationTrack_apply__SWIG_0(long jarg1, NumericAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3, float jarg4);
  public final static native void NumericAnimationTrack_apply__SWIG_1(long jarg1, NumericAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3);
  public final static native void NumericAnimationTrack_apply__SWIG_2(long jarg1, NumericAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_);
  public final static native void NumericAnimationTrack_applyToAnimable__SWIG_0(long jarg1, NumericAnimationTrack jarg1_, long jarg2, long jarg3, TimeIndex jarg3_, float jarg4, float jarg5);
  public final static native void NumericAnimationTrack_applyToAnimable__SWIG_1(long jarg1, NumericAnimationTrack jarg1_, long jarg2, long jarg3, TimeIndex jarg3_, float jarg4);
  public final static native void NumericAnimationTrack_applyToAnimable__SWIG_2(long jarg1, NumericAnimationTrack jarg1_, long jarg2, long jarg3, TimeIndex jarg3_);
  public final static native long NumericAnimationTrack_getAssociatedAnimable(long jarg1, NumericAnimationTrack jarg1_);
  public final static native void NumericAnimationTrack_setAssociatedAnimable(long jarg1, NumericAnimationTrack jarg1_, long jarg2);
  public final static native long NumericAnimationTrack_getNumericKeyFrame(long jarg1, NumericAnimationTrack jarg1_, int jarg2);
  public final static native long NumericAnimationTrack__clone(long jarg1, NumericAnimationTrack jarg1_, long jarg2, Animation jarg2_);
  public final static native void delete_NumericAnimationTrack(long jarg1);
  public final static native long new_NodeAnimationTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2);
  public final static native long new_NodeAnimationTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native void delete_NodeAnimationTrack(long jarg1);
  public final static native long NodeAnimationTrack_createNodeKeyFrame(long jarg1, NodeAnimationTrack jarg1_, float jarg2);
  public final static native long NodeAnimationTrack_getAssociatedNode(long jarg1, NodeAnimationTrack jarg1_);
  public final static native void NodeAnimationTrack_setAssociatedNode(long jarg1, NodeAnimationTrack jarg1_, long jarg2, Node jarg2_);
  public final static native void NodeAnimationTrack_applyToNode__SWIG_0(long jarg1, NodeAnimationTrack jarg1_, long jarg2, Node jarg2_, long jarg3, TimeIndex jarg3_, float jarg4, float jarg5);
  public final static native void NodeAnimationTrack_applyToNode__SWIG_1(long jarg1, NodeAnimationTrack jarg1_, long jarg2, Node jarg2_, long jarg3, TimeIndex jarg3_, float jarg4);
  public final static native void NodeAnimationTrack_applyToNode__SWIG_2(long jarg1, NodeAnimationTrack jarg1_, long jarg2, Node jarg2_, long jarg3, TimeIndex jarg3_);
  public final static native void NodeAnimationTrack_setUseShortestRotationPath(long jarg1, NodeAnimationTrack jarg1_, boolean jarg2);
  public final static native boolean NodeAnimationTrack_getUseShortestRotationPath(long jarg1, NodeAnimationTrack jarg1_);
  public final static native void NodeAnimationTrack_getInterpolatedKeyFrame(long jarg1, NodeAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, KeyFrame jarg3_);
  public final static native void NodeAnimationTrack_apply__SWIG_0(long jarg1, NodeAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3, float jarg4);
  public final static native void NodeAnimationTrack_apply__SWIG_1(long jarg1, NodeAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3);
  public final static native void NodeAnimationTrack_apply__SWIG_2(long jarg1, NodeAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_);
  public final static native void NodeAnimationTrack__keyFrameDataChanged(long jarg1, NodeAnimationTrack jarg1_);
  public final static native long NodeAnimationTrack_getNodeKeyFrame(long jarg1, NodeAnimationTrack jarg1_, int jarg2);
  public final static native boolean NodeAnimationTrack_hasNonZeroKeyFrames(long jarg1, NodeAnimationTrack jarg1_);
  public final static native void NodeAnimationTrack_optimise(long jarg1, NodeAnimationTrack jarg1_);
  public final static native long NodeAnimationTrack__clone(long jarg1, NodeAnimationTrack jarg1_, long jarg2, Animation jarg2_);
  public final static native void NodeAnimationTrack__applyBaseKeyFrame(long jarg1, NodeAnimationTrack jarg1_, long jarg2, KeyFrame jarg2_);
  public final static native int VAT_NONE_get();
  public final static native int VAT_MORPH_get();
  public final static native int VAT_POSE_get();
  public final static native long new_VertexAnimationTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2, int jarg3);
  public final static native long new_VertexAnimationTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, int jarg3, long jarg4, VertexData jarg4_, int jarg5);
  public final static native long new_VertexAnimationTrack__SWIG_2(long jarg1, Animation jarg1_, int jarg2, int jarg3, long jarg4, VertexData jarg4_);
  public final static native int VertexAnimationTrack_getAnimationType(long jarg1, VertexAnimationTrack jarg1_);
  public final static native boolean VertexAnimationTrack_getVertexAnimationIncludesNormals(long jarg1, VertexAnimationTrack jarg1_);
  public final static native long VertexAnimationTrack_createVertexMorphKeyFrame(long jarg1, VertexAnimationTrack jarg1_, float jarg2);
  public final static native long VertexAnimationTrack_createVertexPoseKeyFrame(long jarg1, VertexAnimationTrack jarg1_, float jarg2);
  public final static native void VertexAnimationTrack_getInterpolatedKeyFrame(long jarg1, VertexAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, long jarg3, KeyFrame jarg3_);
  public final static native void VertexAnimationTrack_apply__SWIG_0(long jarg1, VertexAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3, float jarg4);
  public final static native void VertexAnimationTrack_apply__SWIG_1(long jarg1, VertexAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_, float jarg3);
  public final static native void VertexAnimationTrack_apply__SWIG_2(long jarg1, VertexAnimationTrack jarg1_, long jarg2, TimeIndex jarg2_);
  public final static native void VertexAnimationTrack_applyToVertexData__SWIG_0(long jarg1, VertexAnimationTrack jarg1_, long jarg2, VertexData jarg2_, long jarg3, TimeIndex jarg3_, float jarg4, long jarg5, PoseList jarg5_);
  public final static native void VertexAnimationTrack_applyToVertexData__SWIG_1(long jarg1, VertexAnimationTrack jarg1_, long jarg2, VertexData jarg2_, long jarg3, TimeIndex jarg3_, float jarg4);
  public final static native void VertexAnimationTrack_applyToVertexData__SWIG_2(long jarg1, VertexAnimationTrack jarg1_, long jarg2, VertexData jarg2_, long jarg3, TimeIndex jarg3_);
  public final static native long VertexAnimationTrack_getVertexMorphKeyFrame(long jarg1, VertexAnimationTrack jarg1_, int jarg2);
  public final static native long VertexAnimationTrack_getVertexPoseKeyFrame(long jarg1, VertexAnimationTrack jarg1_, int jarg2);
  public final static native void VertexAnimationTrack_setAssociatedVertexData(long jarg1, VertexAnimationTrack jarg1_, long jarg2, VertexData jarg2_);
  public final static native long VertexAnimationTrack_getAssociatedVertexData(long jarg1, VertexAnimationTrack jarg1_);
  public final static native void VertexAnimationTrack_setTargetMode(long jarg1, VertexAnimationTrack jarg1_, int jarg2);
  public final static native int VertexAnimationTrack_getTargetMode(long jarg1, VertexAnimationTrack jarg1_);
  public final static native boolean VertexAnimationTrack_hasNonZeroKeyFrames(long jarg1, VertexAnimationTrack jarg1_);
  public final static native void VertexAnimationTrack_optimise(long jarg1, VertexAnimationTrack jarg1_);
  public final static native long VertexAnimationTrack__clone(long jarg1, VertexAnimationTrack jarg1_, long jarg2, Animation jarg2_);
  public final static native void VertexAnimationTrack__applyBaseKeyFrame(long jarg1, VertexAnimationTrack jarg1_, long jarg2, KeyFrame jarg2_);
  public final static native void delete_VertexAnimationTrack(long jarg1);
  public final static native long new_AnimationState__SWIG_0(String jarg1, long jarg2, AnimationStateSet jarg2_, float jarg3, float jarg4, float jarg5, boolean jarg6);
  public final static native long new_AnimationState__SWIG_1(String jarg1, long jarg2, AnimationStateSet jarg2_, float jarg3, float jarg4, float jarg5);
  public final static native long new_AnimationState__SWIG_2(String jarg1, long jarg2, AnimationStateSet jarg2_, float jarg3, float jarg4);
  public final static native long new_AnimationState__SWIG_3(long jarg1, AnimationStateSet jarg1_, long jarg2, AnimationState jarg2_);
  public final static native String AnimationState_getAnimationName(long jarg1, AnimationState jarg1_);
  public final static native float AnimationState_getTimePosition(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_setTimePosition(long jarg1, AnimationState jarg1_, float jarg2);
  public final static native float AnimationState_getLength(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_setLength(long jarg1, AnimationState jarg1_, float jarg2);
  public final static native float AnimationState_getWeight(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_setWeight(long jarg1, AnimationState jarg1_, float jarg2);
  public final static native void AnimationState_addTime(long jarg1, AnimationState jarg1_, float jarg2);
  public final static native boolean AnimationState_hasEnded(long jarg1, AnimationState jarg1_);
  public final static native boolean AnimationState_getEnabled(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_setEnabled(long jarg1, AnimationState jarg1_, boolean jarg2);
  public final static native void AnimationState_setLoop(long jarg1, AnimationState jarg1_, boolean jarg2);
  public final static native boolean AnimationState_getLoop(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_copyStateFrom(long jarg1, AnimationState jarg1_, long jarg2, AnimationState jarg2_);
  public final static native long AnimationState_getParent(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_createBlendMask__SWIG_0(long jarg1, AnimationState jarg1_, long jarg2, float jarg3);
  public final static native void AnimationState_createBlendMask__SWIG_1(long jarg1, AnimationState jarg1_, long jarg2);
  public final static native void AnimationState_destroyBlendMask(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState__setBlendMaskData(long jarg1, AnimationState jarg1_, long jarg2);
  public final static native void AnimationState__setBlendMask(long jarg1, AnimationState jarg1_, long jarg2);
  public final static native long AnimationState_getBlendMask(long jarg1, AnimationState jarg1_);
  public final static native boolean AnimationState_hasBlendMask(long jarg1, AnimationState jarg1_);
  public final static native void AnimationState_setBlendMaskEntry(long jarg1, AnimationState jarg1_, long jarg2, float jarg3);
  public final static native float AnimationState_getBlendMaskEntry(long jarg1, AnimationState jarg1_, long jarg2);
  public final static native void delete_AnimationState(long jarg1);
  public final static native long new_AnimationStateSet__SWIG_0();
  public final static native long new_AnimationStateSet__SWIG_1(long jarg1, AnimationStateSet jarg1_);
  public final static native void delete_AnimationStateSet(long jarg1);
  public final static native long AnimationStateSet_createAnimationState__SWIG_0(long jarg1, AnimationStateSet jarg1_, String jarg2, float jarg3, float jarg4, float jarg5, boolean jarg6);
  public final static native long AnimationStateSet_createAnimationState__SWIG_1(long jarg1, AnimationStateSet jarg1_, String jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long AnimationStateSet_createAnimationState__SWIG_2(long jarg1, AnimationStateSet jarg1_, String jarg2, float jarg3, float jarg4);
  public final static native long AnimationStateSet_getAnimationState(long jarg1, AnimationStateSet jarg1_, String jarg2);
  public final static native boolean AnimationStateSet_hasAnimationState(long jarg1, AnimationStateSet jarg1_, String jarg2);
  public final static native void AnimationStateSet_removeAnimationState(long jarg1, AnimationStateSet jarg1_, String jarg2);
  public final static native void AnimationStateSet_removeAllAnimationStates(long jarg1, AnimationStateSet jarg1_);
  public final static native long AnimationStateSet_getAnimationStates(long jarg1, AnimationStateSet jarg1_);
  public final static native void AnimationStateSet_copyMatchingState(long jarg1, AnimationStateSet jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void AnimationStateSet__notifyDirty(long jarg1, AnimationStateSet jarg1_);
  public final static native long AnimationStateSet_getDirtyFrameNumber(long jarg1, AnimationStateSet jarg1_);
  public final static native void AnimationStateSet__notifyAnimationStateEnabled(long jarg1, AnimationStateSet jarg1_, long jarg2, AnimationState jarg2_, boolean jarg3);
  public final static native boolean AnimationStateSet_hasEnabledAnimationState(long jarg1, AnimationStateSet jarg1_);
  public final static native long AnimationStateSet_getEnabledAnimationStates(long jarg1, AnimationStateSet jarg1_);
  public final static native long new_AnimationStateControllerValue(long jarg1, AnimationState jarg1_);
  public final static native float AnimationStateControllerValue_getValue(long jarg1, AnimationStateControllerValue jarg1_);
  public final static native void AnimationStateControllerValue_setValue(long jarg1, AnimationStateControllerValue jarg1_, float jarg2);
  public final static native void delete_AnimationStateControllerValue(long jarg1);
  public final static native void delete_AnimationContainer(long jarg1);
  public final static native int AnimationContainer_getNumAnimations(long jarg1, AnimationContainer jarg1_);
  public final static native long AnimationContainer_getAnimation__SWIG_0(long jarg1, AnimationContainer jarg1_, int jarg2);
  public final static native long AnimationContainer_getAnimation__SWIG_1(long jarg1, AnimationContainer jarg1_, String jarg2);
  public final static native long AnimationContainer_createAnimation(long jarg1, AnimationContainer jarg1_, String jarg2, float jarg3);
  public final static native boolean AnimationContainer_hasAnimation(long jarg1, AnimationContainer jarg1_, String jarg2);
  public final static native void AnimationContainer_removeAnimation(long jarg1, AnimationContainer jarg1_, String jarg2);
  public final static native long new_Animation(String jarg1, float jarg2);
  public final static native void delete_Animation(long jarg1);
  public final static native String Animation_getName(long jarg1, Animation jarg1_);
  public final static native float Animation_getLength(long jarg1, Animation jarg1_);
  public final static native void Animation_setLength(long jarg1, Animation jarg1_, float jarg2);
  public final static native long Animation_createNodeTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2);
  public final static native long Animation_createNumericTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2);
  public final static native long Animation_createVertexTrack__SWIG_0(long jarg1, Animation jarg1_, int jarg2, int jarg3);
  public final static native long Animation_createNodeTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native long Animation_createNumericTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, long jarg3);
  public final static native long Animation_createVertexTrack__SWIG_1(long jarg1, Animation jarg1_, int jarg2, long jarg3, VertexData jarg3_, int jarg4);
  public final static native int Animation_getNumNodeTracks(long jarg1, Animation jarg1_);
  public final static native long Animation_getNodeTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native boolean Animation_hasNodeTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native int Animation_getNumNumericTracks(long jarg1, Animation jarg1_);
  public final static native long Animation_getNumericTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native boolean Animation_hasNumericTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native int Animation_getNumVertexTracks(long jarg1, Animation jarg1_);
  public final static native long Animation_getVertexTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native boolean Animation_hasVertexTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native void Animation_destroyNodeTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native void Animation_destroyNumericTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native void Animation_destroyVertexTrack(long jarg1, Animation jarg1_, int jarg2);
  public final static native void Animation_destroyAllTracks(long jarg1, Animation jarg1_);
  public final static native void Animation_destroyAllNodeTracks(long jarg1, Animation jarg1_);
  public final static native void Animation_destroyAllNumericTracks(long jarg1, Animation jarg1_);
  public final static native void Animation_destroyAllVertexTracks(long jarg1, Animation jarg1_);
  public final static native void Animation_apply__SWIG_0(long jarg1, Animation jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Animation_apply__SWIG_1(long jarg1, Animation jarg1_, float jarg2, float jarg3);
  public final static native void Animation_apply__SWIG_2(long jarg1, Animation jarg1_, float jarg2);
  public final static native void Animation_applyToNode__SWIG_0(long jarg1, Animation jarg1_, long jarg2, Node jarg2_, float jarg3, float jarg4, float jarg5);
  public final static native void Animation_applyToNode__SWIG_1(long jarg1, Animation jarg1_, long jarg2, Node jarg2_, float jarg3, float jarg4);
  public final static native void Animation_applyToNode__SWIG_2(long jarg1, Animation jarg1_, long jarg2, Node jarg2_, float jarg3);
  public final static native void Animation_apply__SWIG_3(long jarg1, Animation jarg1_, long jarg2, Skeleton jarg2_, float jarg3, float jarg4, float jarg5);
  public final static native void Animation_apply__SWIG_4(long jarg1, Animation jarg1_, long jarg2, Skeleton jarg2_, float jarg3, float jarg4);
  public final static native void Animation_apply__SWIG_5(long jarg1, Animation jarg1_, long jarg2, Skeleton jarg2_, float jarg3);
  public final static native void Animation_apply__SWIG_6(long jarg1, Animation jarg1_, long jarg2, Skeleton jarg2_, float jarg3, float jarg4, long jarg5, float jarg6);
  public final static native void Animation_apply__SWIG_7(long jarg1, Animation jarg1_, long jarg2, Entity jarg2_, float jarg3, float jarg4, boolean jarg5, boolean jarg6);
  public final static native void Animation_applyToAnimable__SWIG_0(long jarg1, Animation jarg1_, long jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Animation_applyToAnimable__SWIG_1(long jarg1, Animation jarg1_, long jarg2, float jarg3, float jarg4);
  public final static native void Animation_applyToAnimable__SWIG_2(long jarg1, Animation jarg1_, long jarg2, float jarg3);
  public final static native void Animation_applyToVertexData__SWIG_0(long jarg1, Animation jarg1_, long jarg2, VertexData jarg2_, float jarg3, float jarg4);
  public final static native void Animation_applyToVertexData__SWIG_1(long jarg1, Animation jarg1_, long jarg2, VertexData jarg2_, float jarg3);
  public final static native void Animation_setInterpolationMode(long jarg1, Animation jarg1_, int jarg2);
  public final static native int Animation_getInterpolationMode(long jarg1, Animation jarg1_);
  public final static native void Animation_setRotationInterpolationMode(long jarg1, Animation jarg1_, int jarg2);
  public final static native int Animation_getRotationInterpolationMode(long jarg1, Animation jarg1_);
  public final static native void Animation_setDefaultInterpolationMode(int jarg1);
  public final static native int Animation_getDefaultInterpolationMode();
  public final static native void Animation_setDefaultRotationInterpolationMode(int jarg1);
  public final static native int Animation_getDefaultRotationInterpolationMode();
  public final static native long Animation__getNodeTrackList(long jarg1, Animation jarg1_);
  public final static native long Animation_getNodeTrackIterator(long jarg1, Animation jarg1_);
  public final static native long Animation__getNumericTrackList(long jarg1, Animation jarg1_);
  public final static native long Animation_getNumericTrackIterator(long jarg1, Animation jarg1_);
  public final static native long Animation__getVertexTrackList(long jarg1, Animation jarg1_);
  public final static native long Animation_getVertexTrackIterator(long jarg1, Animation jarg1_);
  public final static native void Animation_optimise__SWIG_0(long jarg1, Animation jarg1_, boolean jarg2);
  public final static native void Animation_optimise__SWIG_1(long jarg1, Animation jarg1_);
  public final static native void Animation__collectIdentityNodeTracks(long jarg1, Animation jarg1_, long jarg2);
  public final static native void Animation__destroyNodeTracks(long jarg1, Animation jarg1_, long jarg2);
  public final static native long Animation_clone(long jarg1, Animation jarg1_, String jarg2);
  public final static native void Animation__keyFrameListChanged(long jarg1, Animation jarg1_);
  public final static native long Animation__getTimeIndex(long jarg1, Animation jarg1_, float jarg2);
  public final static native void Animation_setUseBaseKeyFrame__SWIG_0(long jarg1, Animation jarg1_, boolean jarg2, float jarg3, String jarg4);
  public final static native void Animation_setUseBaseKeyFrame__SWIG_1(long jarg1, Animation jarg1_, boolean jarg2, float jarg3);
  public final static native void Animation_setUseBaseKeyFrame__SWIG_2(long jarg1, Animation jarg1_, boolean jarg2);
  public final static native boolean Animation_getUseBaseKeyFrame(long jarg1, Animation jarg1_);
  public final static native float Animation_getBaseKeyFrameTime(long jarg1, Animation jarg1_);
  public final static native String Animation_getBaseKeyFrameAnimationName(long jarg1, Animation jarg1_);
  public final static native void Animation__applyBaseKeyFrame(long jarg1, Animation jarg1_);
  public final static native void Animation__notifyContainer(long jarg1, Animation jarg1_, long jarg2, AnimationContainer jarg2_);
  public final static native long Animation_getContainer(long jarg1, Animation jarg1_);
  public final static native long new_SkeletonPtr__SWIG_1();
  public final static native long new_SkeletonPtr__SWIG_2(long jarg1, SkeletonPtr jarg1_);
  public final static native void delete_SkeletonPtr(long jarg1);
  public final static native long SkeletonPtr___ref__(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr___deref__(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_get(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_unique(long jarg1, SkeletonPtr jarg1_);
  public final static native int SkeletonPtr_use_count(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_reset__SWIG_0(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_reset__SWIG_1(long jarg1, SkeletonPtr jarg1_, long jarg2, Skeleton jarg2_);
  public final static native long SkeletonPtr_createBone__SWIG_0(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_createBone__SWIG_1(long jarg1, SkeletonPtr jarg1_, int jarg2);
  public final static native long SkeletonPtr_createBone__SWIG_2(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native long SkeletonPtr_createBone__SWIG_3(long jarg1, SkeletonPtr jarg1_, String jarg2, int jarg3);
  public final static native int SkeletonPtr_getNumBones(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getRootBones(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getBones(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getBone__SWIG_0(long jarg1, SkeletonPtr jarg1_, int jarg2);
  public final static native long SkeletonPtr_getBone__SWIG_1(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native boolean SkeletonPtr_hasBone(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native void SkeletonPtr_setBindingPose(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_createAnimation(long jarg1, SkeletonPtr jarg1_, String jarg2, float jarg3);
  public final static native long SkeletonPtr_getAnimation__SWIG_0(long jarg1, SkeletonPtr jarg1_, String jarg2, long jarg3);
  public final static native long SkeletonPtr_getAnimation__SWIG_1(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native long SkeletonPtr_getAnimation__SWIG_2(long jarg1, SkeletonPtr jarg1_, int jarg2);
  public final static native long SkeletonPtr__getAnimationImpl__SWIG_0(long jarg1, SkeletonPtr jarg1_, String jarg2, long jarg3);
  public final static native long SkeletonPtr__getAnimationImpl__SWIG_1(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native boolean SkeletonPtr_hasAnimation(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native void SkeletonPtr_removeAnimation(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native void SkeletonPtr_setAnimationState(long jarg1, SkeletonPtr jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void SkeletonPtr__initAnimationState(long jarg1, SkeletonPtr jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void SkeletonPtr__refreshAnimationState(long jarg1, SkeletonPtr jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void SkeletonPtr__getBoneMatrices(long jarg1, SkeletonPtr jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native int SkeletonPtr_getNumAnimations(long jarg1, SkeletonPtr jarg1_);
  public final static native int SkeletonPtr_getBlendMode(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_setBlendMode(long jarg1, SkeletonPtr jarg1_, int jarg2);
  public final static native void SkeletonPtr__updateTransforms(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_optimiseAllAnimations__SWIG_0(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr_optimiseAllAnimations__SWIG_1(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_addLinkedSkeletonAnimationSource__SWIG_0(long jarg1, SkeletonPtr jarg1_, String jarg2, float jarg3);
  public final static native void SkeletonPtr_addLinkedSkeletonAnimationSource__SWIG_1(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native void SkeletonPtr_removeAllLinkedSkeletonAnimationSources(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getLinkedSkeletonAnimationSourceIterator(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__notifyManualBonesDirty(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__notifyManualBoneStateChange(long jarg1, SkeletonPtr jarg1_, long jarg2, Bone jarg2_);
  public final static native boolean SkeletonPtr_getManualBonesDirty(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_hasManualBones(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__mergeSkeletonAnimations__SWIG_0(long jarg1, SkeletonPtr jarg1_, long jarg2, Skeleton jarg2_, long jarg3, long jarg4, StringVector jarg4_);
  public final static native void SkeletonPtr__mergeSkeletonAnimations__SWIG_1(long jarg1, SkeletonPtr jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void SkeletonPtr__buildMapBoneByHandle(long jarg1, SkeletonPtr jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void SkeletonPtr__buildMapBoneByName(long jarg1, SkeletonPtr jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void SkeletonPtr_prepare__SWIG_0(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr_prepare__SWIG_1(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_load__SWIG_0(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr_load__SWIG_1(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_reload__SWIG_0(long jarg1, SkeletonPtr jarg1_, int jarg2);
  public final static native void SkeletonPtr_reload__SWIG_1(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isReloadable(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isManuallyLoaded(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_unload(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getSize(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_touch(long jarg1, SkeletonPtr jarg1_);
  public final static native String SkeletonPtr_getName(long jarg1, SkeletonPtr jarg1_);
  public final static native java.math.BigInteger SkeletonPtr_getHandle(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isPrepared(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isLoaded(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isLoading(long jarg1, SkeletonPtr jarg1_);
  public final static native int SkeletonPtr_getLoadingState(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_isBackgroundLoaded(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_setBackgroundLoaded(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr_escalateLoading(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_addListener(long jarg1, SkeletonPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void SkeletonPtr_removeListener(long jarg1, SkeletonPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String SkeletonPtr_getGroup(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr_changeGroupOwnership(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native long SkeletonPtr_getCreator(long jarg1, SkeletonPtr jarg1_);
  public final static native String SkeletonPtr_getOrigin(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__notifyOrigin(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native long SkeletonPtr_getStateCount(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__dirtyState(long jarg1, SkeletonPtr jarg1_);
  public final static native void SkeletonPtr__fireLoadingComplete(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr__firePreparingComplete(long jarg1, SkeletonPtr jarg1_, boolean jarg2);
  public final static native void SkeletonPtr__fireUnloadingComplete(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getParamDictionary__SWIG_0(long jarg1, SkeletonPtr jarg1_);
  public final static native long SkeletonPtr_getParameters(long jarg1, SkeletonPtr jarg1_);
  public final static native boolean SkeletonPtr_setParameter(long jarg1, SkeletonPtr jarg1_, String jarg2, String jarg3);
  public final static native void SkeletonPtr_setParameterList(long jarg1, SkeletonPtr jarg1_, long jarg2);
  public final static native String SkeletonPtr_getParameter(long jarg1, SkeletonPtr jarg1_, String jarg2);
  public final static native void SkeletonPtr_copyParametersTo(long jarg1, SkeletonPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void SkeletonPtr_cleanupDictionary(long jarg1, SkeletonPtr jarg1_);
  public final static native int ANIMBLEND_AVERAGE_get();
  public final static native int ANIMBLEND_CUMULATIVE_get();
  public final static native int OGRE_MAX_NUM_BONES_get();
  public final static native long new_Skeleton__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_Skeleton__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_Skeleton__SWIG_3(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_Skeleton(long jarg1);
  public final static native long Skeleton_createBone__SWIG_0(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_createBone__SWIG_1(long jarg1, Skeleton jarg1_, int jarg2);
  public final static native long Skeleton_createBone__SWIG_2(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native long Skeleton_createBone__SWIG_3(long jarg1, Skeleton jarg1_, String jarg2, int jarg3);
  public final static native int Skeleton_getNumBones(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_getRootBones(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_getBones(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_getBone__SWIG_0(long jarg1, Skeleton jarg1_, int jarg2);
  public final static native long Skeleton_getBone__SWIG_1(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native boolean Skeleton_hasBone(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native void Skeleton_setBindingPose(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton_reset__SWIG_0(long jarg1, Skeleton jarg1_, boolean jarg2);
  public final static native void Skeleton_reset__SWIG_1(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_createAnimation(long jarg1, Skeleton jarg1_, String jarg2, float jarg3);
  public final static native long Skeleton_getAnimation__SWIG_0(long jarg1, Skeleton jarg1_, String jarg2, long jarg3);
  public final static native long Skeleton_getAnimation__SWIG_1(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native long Skeleton__getAnimationImpl__SWIG_0(long jarg1, Skeleton jarg1_, String jarg2, long jarg3);
  public final static native long Skeleton__getAnimationImpl__SWIG_1(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native boolean Skeleton_hasAnimation(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native void Skeleton_removeAnimation(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native void Skeleton_setAnimationState(long jarg1, Skeleton jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void Skeleton__initAnimationState(long jarg1, Skeleton jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void Skeleton__refreshAnimationState(long jarg1, Skeleton jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void Skeleton__getBoneMatrices(long jarg1, Skeleton jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native int Skeleton_getNumAnimations(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_getAnimation__SWIG_2(long jarg1, Skeleton jarg1_, int jarg2);
  public final static native int Skeleton_getBlendMode(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton_setBlendMode(long jarg1, Skeleton jarg1_, int jarg2);
  public final static native void Skeleton__updateTransforms(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton_optimiseAllAnimations__SWIG_0(long jarg1, Skeleton jarg1_, boolean jarg2);
  public final static native void Skeleton_optimiseAllAnimations__SWIG_1(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton_addLinkedSkeletonAnimationSource__SWIG_0(long jarg1, Skeleton jarg1_, String jarg2, float jarg3);
  public final static native void Skeleton_addLinkedSkeletonAnimationSource__SWIG_1(long jarg1, Skeleton jarg1_, String jarg2);
  public final static native void Skeleton_removeAllLinkedSkeletonAnimationSources(long jarg1, Skeleton jarg1_);
  public final static native long Skeleton_getLinkedSkeletonAnimationSourceIterator(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton__notifyManualBonesDirty(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton__notifyManualBoneStateChange(long jarg1, Skeleton jarg1_, long jarg2, Bone jarg2_);
  public final static native boolean Skeleton_getManualBonesDirty(long jarg1, Skeleton jarg1_);
  public final static native boolean Skeleton_hasManualBones(long jarg1, Skeleton jarg1_);
  public final static native void Skeleton__mergeSkeletonAnimations__SWIG_0(long jarg1, Skeleton jarg1_, long jarg2, Skeleton jarg2_, long jarg3, long jarg4, StringVector jarg4_);
  public final static native void Skeleton__mergeSkeletonAnimations__SWIG_1(long jarg1, Skeleton jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void Skeleton__buildMapBoneByHandle(long jarg1, Skeleton jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void Skeleton__buildMapBoneByName(long jarg1, Skeleton jarg1_, long jarg2, Skeleton jarg2_, long jarg3);
  public final static native void LinkedSkeletonAnimationSource_skeletonName_set(long jarg1, LinkedSkeletonAnimationSource jarg1_, String jarg2);
  public final static native String LinkedSkeletonAnimationSource_skeletonName_get(long jarg1, LinkedSkeletonAnimationSource jarg1_);
  public final static native void LinkedSkeletonAnimationSource_pSkeleton_set(long jarg1, LinkedSkeletonAnimationSource jarg1_, long jarg2, SkeletonPtr jarg2_);
  public final static native long LinkedSkeletonAnimationSource_pSkeleton_get(long jarg1, LinkedSkeletonAnimationSource jarg1_);
  public final static native void LinkedSkeletonAnimationSource_scale_set(long jarg1, LinkedSkeletonAnimationSource jarg1_, float jarg2);
  public final static native float LinkedSkeletonAnimationSource_scale_get(long jarg1, LinkedSkeletonAnimationSource jarg1_);
  public final static native long new_LinkedSkeletonAnimationSource__SWIG_0(String jarg1, float jarg2);
  public final static native long new_LinkedSkeletonAnimationSource__SWIG_1(String jarg1, float jarg2, long jarg3, SkeletonPtr jarg3_);
  public final static native void delete_LinkedSkeletonAnimationSource(long jarg1);
  public final static native long new_SkeletonInstance(long jarg1, SkeletonPtr jarg1_);
  public final static native void delete_SkeletonInstance(long jarg1);
  public final static native int SkeletonInstance_getNumAnimations(long jarg1, SkeletonInstance jarg1_);
  public final static native long SkeletonInstance_getAnimation__SWIG_0(long jarg1, SkeletonInstance jarg1_, int jarg2);
  public final static native long SkeletonInstance__getAnimationImpl__SWIG_0(long jarg1, SkeletonInstance jarg1_, String jarg2, long jarg3);
  public final static native long SkeletonInstance__getAnimationImpl__SWIG_1(long jarg1, SkeletonInstance jarg1_, String jarg2);
  public final static native long SkeletonInstance_createAnimation(long jarg1, SkeletonInstance jarg1_, String jarg2, float jarg3);
  public final static native long SkeletonInstance_getAnimation__SWIG_1(long jarg1, SkeletonInstance jarg1_, String jarg2, long jarg3);
  public final static native long SkeletonInstance_getAnimation__SWIG_2(long jarg1, SkeletonInstance jarg1_, String jarg2);
  public final static native void SkeletonInstance_removeAnimation(long jarg1, SkeletonInstance jarg1_, String jarg2);
  public final static native long SkeletonInstance_createTagPointOnBone__SWIG_0(long jarg1, SkeletonInstance jarg1_, long jarg2, Bone jarg2_, long jarg3, Quaternion jarg3_, long jarg4, Vector3 jarg4_);
  public final static native long SkeletonInstance_createTagPointOnBone__SWIG_1(long jarg1, SkeletonInstance jarg1_, long jarg2, Bone jarg2_, long jarg3, Quaternion jarg3_);
  public final static native long SkeletonInstance_createTagPointOnBone__SWIG_2(long jarg1, SkeletonInstance jarg1_, long jarg2, Bone jarg2_);
  public final static native void SkeletonInstance_freeTagPoint(long jarg1, SkeletonInstance jarg1_, long jarg2);
  public final static native void SkeletonInstance_addLinkedSkeletonAnimationSource__SWIG_0(long jarg1, SkeletonInstance jarg1_, String jarg2, float jarg3);
  public final static native void SkeletonInstance_addLinkedSkeletonAnimationSource__SWIG_1(long jarg1, SkeletonInstance jarg1_, String jarg2);
  public final static native void SkeletonInstance_removeAllLinkedSkeletonAnimationSources(long jarg1, SkeletonInstance jarg1_);
  public final static native long SkeletonInstance_getLinkedSkeletonAnimationSourceIterator(long jarg1, SkeletonInstance jarg1_);
  public final static native void SkeletonInstance__initAnimationState(long jarg1, SkeletonInstance jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void SkeletonInstance__refreshAnimationState(long jarg1, SkeletonInstance jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native String SkeletonInstance_getName(long jarg1, SkeletonInstance jarg1_);
  public final static native java.math.BigInteger SkeletonInstance_getHandle(long jarg1, SkeletonInstance jarg1_);
  public final static native String SkeletonInstance_getGroup(long jarg1, SkeletonInstance jarg1_);
  public final static native long new_SkeletonManager();
  public final static native void delete_SkeletonManager(long jarg1);
  public final static native long SkeletonManager_create__SWIG_0(long jarg1, SkeletonManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long SkeletonManager_create__SWIG_1(long jarg1, SkeletonManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long SkeletonManager_create__SWIG_2(long jarg1, SkeletonManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long SkeletonManager_create__SWIG_3(long jarg1, SkeletonManager jarg1_, String jarg2, String jarg3);
  public final static native long SkeletonManager_getByName(long jarg1, SkeletonManager jarg1_, String jarg2, String jarg3);
  public final static native long SkeletonManager_getSingleton();
  public final static native int RENDER_QUEUE_BACKGROUND_get();
  public final static native int RENDER_QUEUE_SKIES_EARLY_get();
  public final static native int RENDER_QUEUE_1_get();
  public final static native int RENDER_QUEUE_2_get();
  public final static native int RENDER_QUEUE_WORLD_GEOMETRY_1_get();
  public final static native int RENDER_QUEUE_3_get();
  public final static native int RENDER_QUEUE_4_get();
  public final static native int RENDER_QUEUE_MAIN_get();
  public final static native int RENDER_QUEUE_6_get();
  public final static native int RENDER_QUEUE_7_get();
  public final static native int RENDER_QUEUE_WORLD_GEOMETRY_2_get();
  public final static native int RENDER_QUEUE_8_get();
  public final static native int RENDER_QUEUE_9_get();
  public final static native int RENDER_QUEUE_SKIES_LATE_get();
  public final static native int RENDER_QUEUE_OVERLAY_get();
  public final static native int RENDER_QUEUE_MAX_get();
  public final static native int OGRE_RENDERABLE_DEFAULT_PRIORITY_get();
  public final static native void delete_RenderQueue_RenderableListener(long jarg1);
  public final static native boolean RenderQueue_RenderableListener_renderableQueued(long jarg1, RenderQueue.RenderableListener jarg1_, long jarg2, Renderable jarg2_, short jarg3, int jarg4, long jarg5, long jarg6, RenderQueue jarg6_);
  public final static native long new_RenderQueue();
  public final static native void delete_RenderQueue(long jarg1);
  public final static native void RenderQueue_clear__SWIG_0(long jarg1, RenderQueue jarg1_, boolean jarg2);
  public final static native void RenderQueue_clear__SWIG_1(long jarg1, RenderQueue jarg1_);
  public final static native long RenderQueue_getQueueGroup(long jarg1, RenderQueue jarg1_, short jarg2);
  public final static native void RenderQueue_addRenderable__SWIG_0(long jarg1, RenderQueue jarg1_, long jarg2, Renderable jarg2_, short jarg3, int jarg4);
  public final static native void RenderQueue_addRenderable__SWIG_1(long jarg1, RenderQueue jarg1_, long jarg2, Renderable jarg2_, short jarg3);
  public final static native void RenderQueue_addRenderable__SWIG_2(long jarg1, RenderQueue jarg1_, long jarg2, Renderable jarg2_);
  public final static native short RenderQueue_getDefaultQueueGroup(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setDefaultRenderablePriority(long jarg1, RenderQueue jarg1_, int jarg2);
  public final static native int RenderQueue_getDefaultRenderablePriority(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setDefaultQueueGroup(long jarg1, RenderQueue jarg1_, short jarg2);
  public final static native long RenderQueue__getQueueGroupIterator__SWIG_0(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setSplitPassesByLightingType(long jarg1, RenderQueue jarg1_, boolean jarg2);
  public final static native boolean RenderQueue_getSplitPassesByLightingType(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setSplitNoShadowPasses(long jarg1, RenderQueue jarg1_, boolean jarg2);
  public final static native boolean RenderQueue_getSplitNoShadowPasses(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setShadowCastersCannotBeReceivers(long jarg1, RenderQueue jarg1_, boolean jarg2);
  public final static native boolean RenderQueue_getShadowCastersCannotBeReceivers(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_setRenderableListener(long jarg1, RenderQueue jarg1_, long jarg2, RenderQueue.RenderableListener jarg2_);
  public final static native long RenderQueue_getRenderableListener(long jarg1, RenderQueue jarg1_);
  public final static native void RenderQueue_merge(long jarg1, RenderQueue jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void RenderQueue_processVisibleObject(long jarg1, RenderQueue jarg1_, long jarg2, MovableObject jarg2_, long jarg3, Camera jarg3_, boolean jarg4, long jarg5, VisibleObjectsBoundsInfo jarg5_);
  public final static native int RenderOperation_OT_POINT_LIST_get();
  public final static native int RenderOperation_OT_LINE_LIST_get();
  public final static native int RenderOperation_OT_LINE_STRIP_get();
  public final static native int RenderOperation_OT_TRIANGLE_LIST_get();
  public final static native int RenderOperation_OT_TRIANGLE_STRIP_get();
  public final static native int RenderOperation_OT_TRIANGLE_FAN_get();
  public final static native int RenderOperation_OT_PATCH_1_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_2_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_3_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_4_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_5_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_6_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_7_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_8_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_9_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_10_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_11_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_12_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_13_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_14_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_15_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_16_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_17_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_18_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_19_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_20_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_21_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_22_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_23_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_24_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_25_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_26_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_27_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_28_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_29_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_30_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_31_CONTROL_POINT_get();
  public final static native int RenderOperation_OT_PATCH_32_CONTROL_POINT_get();
  public final static native void RenderOperation_vertexData_set(long jarg1, RenderOperation jarg1_, long jarg2, VertexData jarg2_);
  public final static native long RenderOperation_vertexData_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_operationType_set(long jarg1, RenderOperation jarg1_, int jarg2);
  public final static native int RenderOperation_operationType_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_useIndexes_set(long jarg1, RenderOperation jarg1_, boolean jarg2);
  public final static native boolean RenderOperation_useIndexes_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_indexData_set(long jarg1, RenderOperation jarg1_, long jarg2, IndexData jarg2_);
  public final static native long RenderOperation_indexData_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_srcRenderable_set(long jarg1, RenderOperation jarg1_, long jarg2, Renderable jarg2_);
  public final static native long RenderOperation_srcRenderable_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_numberOfInstances_set(long jarg1, RenderOperation jarg1_, long jarg2);
  public final static native long RenderOperation_numberOfInstances_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_renderToVertexBuffer_set(long jarg1, RenderOperation jarg1_, boolean jarg2);
  public final static native boolean RenderOperation_renderToVertexBuffer_get(long jarg1, RenderOperation jarg1_);
  public final static native void RenderOperation_useGlobalInstancingVertexBufferIsAvailable_set(long jarg1, RenderOperation jarg1_, boolean jarg2);
  public final static native boolean RenderOperation_useGlobalInstancingVertexBufferIsAvailable_get(long jarg1, RenderOperation jarg1_);
  public final static native long new_RenderOperation();
  public final static native void delete_RenderOperation(long jarg1);
  public final static native long new_MaterialPtr__SWIG_1();
  public final static native long new_MaterialPtr__SWIG_2(long jarg1, MaterialPtr jarg1_);
  public final static native void delete_MaterialPtr(long jarg1);
  public final static native long MaterialPtr___ref__(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr___deref__(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_get(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_unique(long jarg1, MaterialPtr jarg1_);
  public final static native int MaterialPtr_use_count(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_reset__SWIG_0(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_reset__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2, Material jarg2_);
  public final static native boolean MaterialPtr_isTransparent(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setReceiveShadows(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native boolean MaterialPtr_getReceiveShadows(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setTransparencyCastsShadows(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native boolean MaterialPtr_getTransparencyCastsShadows(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_createTechnique(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getTechnique__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native long MaterialPtr_getTechnique__SWIG_1(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native int MaterialPtr_getNumTechniques(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_removeTechnique(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_removeAllTechniques(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getTechniques(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getSupportedTechniques(long jarg1, MaterialPtr jarg1_);
  public final static native String MaterialPtr_getUnsupportedTechniquesExplanation(long jarg1, MaterialPtr jarg1_);
  public final static native int MaterialPtr_getNumLodLevels__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native int MaterialPtr_getNumLodLevels__SWIG_1(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native long MaterialPtr_getBestTechnique__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2, long jarg3, Renderable jarg3_);
  public final static native long MaterialPtr_getBestTechnique__SWIG_1(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native long MaterialPtr_getBestTechnique__SWIG_2(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_clone__SWIG_0(long jarg1, MaterialPtr jarg1_, String jarg2, boolean jarg3, String jarg4);
  public final static native long MaterialPtr_clone__SWIG_1(long jarg1, MaterialPtr jarg1_, String jarg2, boolean jarg3);
  public final static native long MaterialPtr_clone__SWIG_2(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native void MaterialPtr_copyDetailsTo(long jarg1, MaterialPtr jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void MaterialPtr_compile__SWIG_0(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_compile__SWIG_1(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setPointSize(long jarg1, MaterialPtr jarg1_, float jarg2);
  public final static native void MaterialPtr_setAmbient__SWIG_0(long jarg1, MaterialPtr jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void MaterialPtr_setAmbient__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void MaterialPtr_setDiffuse__SWIG_0(long jarg1, MaterialPtr jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void MaterialPtr_setDiffuse__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void MaterialPtr_setSpecular__SWIG_0(long jarg1, MaterialPtr jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void MaterialPtr_setSpecular__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void MaterialPtr_setShininess(long jarg1, MaterialPtr jarg1_, float jarg2);
  public final static native void MaterialPtr_setSelfIllumination__SWIG_0(long jarg1, MaterialPtr jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void MaterialPtr_setSelfIllumination__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void MaterialPtr_setDepthCheckEnabled(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_setDepthWriteEnabled(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_setDepthFunction(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setColourWriteEnabled(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_setCullingMode(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setManualCullingMode(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setLightingEnabled(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_setShadingMode(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setFog__SWIG_0(long jarg1, MaterialPtr jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native void MaterialPtr_setFog__SWIG_1(long jarg1, MaterialPtr jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6);
  public final static native void MaterialPtr_setFog__SWIG_2(long jarg1, MaterialPtr jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5);
  public final static native void MaterialPtr_setFog__SWIG_3(long jarg1, MaterialPtr jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_);
  public final static native void MaterialPtr_setFog__SWIG_4(long jarg1, MaterialPtr jarg1_, boolean jarg2, int jarg3);
  public final static native void MaterialPtr_setFog__SWIG_5(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_setDepthBias(long jarg1, MaterialPtr jarg1_, float jarg2, float jarg3);
  public final static native void MaterialPtr_setTextureFiltering(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setTextureAnisotropy(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setSceneBlending__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_setSceneBlending__SWIG_1(long jarg1, MaterialPtr jarg1_, int jarg2, int jarg3);
  public final static native void MaterialPtr_setSeparateSceneBlending__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2, int jarg3);
  public final static native void MaterialPtr_setSeparateSceneBlending__SWIG_1(long jarg1, MaterialPtr jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void MaterialPtr__notifyNeedsRecompile(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setLodLevels(long jarg1, MaterialPtr jarg1_, long jarg2);
  public final static native long MaterialPtr_getLodValues(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getUserLodValues(long jarg1, MaterialPtr jarg1_);
  public final static native int MaterialPtr_getLodIndex(long jarg1, MaterialPtr jarg1_, float jarg2);
  public final static native long MaterialPtr_getLodStrategy(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setLodStrategy(long jarg1, MaterialPtr jarg1_, long jarg2);
  public final static native void MaterialPtr_touch(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_applyTextureAliases__SWIG_0(long jarg1, MaterialPtr jarg1_, long jarg2, boolean jarg3);
  public final static native boolean MaterialPtr_applyTextureAliases__SWIG_1(long jarg1, MaterialPtr jarg1_, long jarg2);
  public final static native boolean MaterialPtr_getCompilationRequired(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_prepare__SWIG_0(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_prepare__SWIG_1(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_load__SWIG_0(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_load__SWIG_1(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_reload__SWIG_0(long jarg1, MaterialPtr jarg1_, int jarg2);
  public final static native void MaterialPtr_reload__SWIG_1(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isReloadable(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isManuallyLoaded(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_unload(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getSize(long jarg1, MaterialPtr jarg1_);
  public final static native String MaterialPtr_getName(long jarg1, MaterialPtr jarg1_);
  public final static native java.math.BigInteger MaterialPtr_getHandle(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isPrepared(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isLoaded(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isLoading(long jarg1, MaterialPtr jarg1_);
  public final static native int MaterialPtr_getLoadingState(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_isBackgroundLoaded(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_setBackgroundLoaded(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr_escalateLoading(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_addListener(long jarg1, MaterialPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void MaterialPtr_removeListener(long jarg1, MaterialPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String MaterialPtr_getGroup(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr_changeGroupOwnership(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native long MaterialPtr_getCreator(long jarg1, MaterialPtr jarg1_);
  public final static native String MaterialPtr_getOrigin(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr__notifyOrigin(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native long MaterialPtr_getStateCount(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr__dirtyState(long jarg1, MaterialPtr jarg1_);
  public final static native void MaterialPtr__fireLoadingComplete(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr__firePreparingComplete(long jarg1, MaterialPtr jarg1_, boolean jarg2);
  public final static native void MaterialPtr__fireUnloadingComplete(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getParamDictionary__SWIG_0(long jarg1, MaterialPtr jarg1_);
  public final static native long MaterialPtr_getParameters(long jarg1, MaterialPtr jarg1_);
  public final static native boolean MaterialPtr_setParameter(long jarg1, MaterialPtr jarg1_, String jarg2, String jarg3);
  public final static native void MaterialPtr_setParameterList(long jarg1, MaterialPtr jarg1_, long jarg2);
  public final static native String MaterialPtr_getParameter(long jarg1, MaterialPtr jarg1_, String jarg2);
  public final static native void MaterialPtr_copyParametersTo(long jarg1, MaterialPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void MaterialPtr_cleanupDictionary(long jarg1, MaterialPtr jarg1_);
  public final static native long new_Techniques__SWIG_0();
  public final static native long new_Techniques__SWIG_1(long jarg1, Techniques jarg1_);
  public final static native long Techniques_capacity(long jarg1, Techniques jarg1_);
  public final static native void Techniques_reserve(long jarg1, Techniques jarg1_, long jarg2);
  public final static native boolean Techniques_isEmpty(long jarg1, Techniques jarg1_);
  public final static native void Techniques_clear(long jarg1, Techniques jarg1_);
  public final static native long new_Techniques__SWIG_2(int jarg1);
  public final static native long new_Techniques__SWIG_3(int jarg1, long jarg2, Technique jarg2_);
  public final static native int Techniques_doSize(long jarg1, Techniques jarg1_);
  public final static native void Techniques_doAdd__SWIG_0(long jarg1, Techniques jarg1_, long jarg2, Technique jarg2_);
  public final static native void Techniques_doAdd__SWIG_1(long jarg1, Techniques jarg1_, int jarg2, long jarg3, Technique jarg3_);
  public final static native long Techniques_doRemove(long jarg1, Techniques jarg1_, int jarg2);
  public final static native long Techniques_doGet(long jarg1, Techniques jarg1_, int jarg2);
  public final static native long Techniques_doSet(long jarg1, Techniques jarg1_, int jarg2, long jarg3, Technique jarg3_);
  public final static native void Techniques_doRemoveRange(long jarg1, Techniques jarg1_, int jarg2, int jarg3);
  public final static native void delete_Techniques(long jarg1);
  public final static native long new_Material__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_Material__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_Material__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_Material(long jarg1);
  public final static native boolean Material_isTransparent(long jarg1, Material jarg1_);
  public final static native void Material_setReceiveShadows(long jarg1, Material jarg1_, boolean jarg2);
  public final static native boolean Material_getReceiveShadows(long jarg1, Material jarg1_);
  public final static native void Material_setTransparencyCastsShadows(long jarg1, Material jarg1_, boolean jarg2);
  public final static native boolean Material_getTransparencyCastsShadows(long jarg1, Material jarg1_);
  public final static native long Material_createTechnique(long jarg1, Material jarg1_);
  public final static native long Material_getTechnique__SWIG_0(long jarg1, Material jarg1_, int jarg2);
  public final static native long Material_getTechnique__SWIG_1(long jarg1, Material jarg1_, String jarg2);
  public final static native int Material_getNumTechniques(long jarg1, Material jarg1_);
  public final static native void Material_removeTechnique(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_removeAllTechniques(long jarg1, Material jarg1_);
  public final static native long Material_getTechniques(long jarg1, Material jarg1_);
  public final static native long Material_getSupportedTechniques(long jarg1, Material jarg1_);
  public final static native String Material_getUnsupportedTechniquesExplanation(long jarg1, Material jarg1_);
  public final static native int Material_getNumLodLevels__SWIG_0(long jarg1, Material jarg1_, int jarg2);
  public final static native int Material_getNumLodLevels__SWIG_1(long jarg1, Material jarg1_, String jarg2);
  public final static native long Material_getBestTechnique__SWIG_0(long jarg1, Material jarg1_, int jarg2, long jarg3, Renderable jarg3_);
  public final static native long Material_getBestTechnique__SWIG_1(long jarg1, Material jarg1_, int jarg2);
  public final static native long Material_getBestTechnique__SWIG_2(long jarg1, Material jarg1_);
  public final static native long Material_clone__SWIG_0(long jarg1, Material jarg1_, String jarg2, boolean jarg3, String jarg4);
  public final static native long Material_clone__SWIG_1(long jarg1, Material jarg1_, String jarg2, boolean jarg3);
  public final static native long Material_clone__SWIG_2(long jarg1, Material jarg1_, String jarg2);
  public final static native void Material_copyDetailsTo(long jarg1, Material jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void Material_compile__SWIG_0(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_compile__SWIG_1(long jarg1, Material jarg1_);
  public final static native void Material_setPointSize(long jarg1, Material jarg1_, float jarg2);
  public final static native void Material_setAmbient__SWIG_0(long jarg1, Material jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Material_setAmbient__SWIG_1(long jarg1, Material jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Material_setDiffuse__SWIG_0(long jarg1, Material jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Material_setDiffuse__SWIG_1(long jarg1, Material jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Material_setSpecular__SWIG_0(long jarg1, Material jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Material_setSpecular__SWIG_1(long jarg1, Material jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Material_setShininess(long jarg1, Material jarg1_, float jarg2);
  public final static native void Material_setSelfIllumination__SWIG_0(long jarg1, Material jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Material_setSelfIllumination__SWIG_1(long jarg1, Material jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Material_setDepthCheckEnabled(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_setDepthWriteEnabled(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_setDepthFunction(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setColourWriteEnabled(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_setCullingMode(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setManualCullingMode(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setLightingEnabled(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_setShadingMode(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setFog__SWIG_0(long jarg1, Material jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native void Material_setFog__SWIG_1(long jarg1, Material jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6);
  public final static native void Material_setFog__SWIG_2(long jarg1, Material jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5);
  public final static native void Material_setFog__SWIG_3(long jarg1, Material jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_);
  public final static native void Material_setFog__SWIG_4(long jarg1, Material jarg1_, boolean jarg2, int jarg3);
  public final static native void Material_setFog__SWIG_5(long jarg1, Material jarg1_, boolean jarg2);
  public final static native void Material_setDepthBias(long jarg1, Material jarg1_, float jarg2, float jarg3);
  public final static native void Material_setTextureFiltering(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setTextureAnisotropy(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setSceneBlending__SWIG_0(long jarg1, Material jarg1_, int jarg2);
  public final static native void Material_setSeparateSceneBlending__SWIG_0(long jarg1, Material jarg1_, int jarg2, int jarg3);
  public final static native void Material_setSceneBlending__SWIG_1(long jarg1, Material jarg1_, int jarg2, int jarg3);
  public final static native void Material_setSeparateSceneBlending__SWIG_1(long jarg1, Material jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Material__notifyNeedsRecompile(long jarg1, Material jarg1_);
  public final static native void Material_setLodLevels(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material_getLodValues(long jarg1, Material jarg1_);
  public final static native long Material_getUserLodValues(long jarg1, Material jarg1_);
  public final static native int Material_getLodIndex(long jarg1, Material jarg1_, float jarg2);
  public final static native long Material_getLodStrategy(long jarg1, Material jarg1_);
  public final static native void Material_setLodStrategy(long jarg1, Material jarg1_, long jarg2);
  public final static native void Material_touch(long jarg1, Material jarg1_);
  public final static native boolean Material_applyTextureAliases__SWIG_0(long jarg1, Material jarg1_, long jarg2, boolean jarg3);
  public final static native boolean Material_applyTextureAliases__SWIG_1(long jarg1, Material jarg1_, long jarg2);
  public final static native boolean Material_getCompilationRequired(long jarg1, Material jarg1_);
  public final static native void delete_RenderSystem(long jarg1);
  public final static native String RenderSystem_getName(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem_getConfigOptions(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setConfigOption(long jarg1, RenderSystem jarg1_, String jarg2, String jarg3);
  public final static native long RenderSystem_createHardwareOcclusionQuery(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_destroyHardwareOcclusionQuery(long jarg1, RenderSystem jarg1_, long jarg2, HardwareOcclusionQuery jarg2_);
  public final static native String RenderSystem_validateConfigOptions(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem__initialise__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2, String jarg3);
  public final static native long RenderSystem__initialise__SWIG_1(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native boolean RenderSystem_isStaticBufferLockable(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem_createRenderSystemCapabilities(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem_getMutableCapabilities(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_useCustomRenderSystemCapabilities(long jarg1, RenderSystem jarg1_, long jarg2, RenderSystemCapabilities jarg2_);
  public final static native void RenderSystem_reinitialise(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_shutdown(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setAmbientLight(long jarg1, RenderSystem jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void RenderSystem_setShadingType(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem_setLightingEnabled(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem_setWBufferEnabled(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native boolean RenderSystem_getWBufferEnabled(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem__createRenderWindow__SWIG_0(long jarg1, RenderSystem jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5, long jarg6);
  public final static native long RenderSystem__createRenderWindow__SWIG_1(long jarg1, RenderSystem jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean RenderSystem__createRenderWindows(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3);
  public final static native long RenderSystem_createMultiRenderTarget(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native void RenderSystem_destroyRenderWindow(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native void RenderSystem_destroyRenderTexture(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native void RenderSystem_destroyRenderTarget(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native void RenderSystem_attachRenderTarget(long jarg1, RenderSystem jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native long RenderSystem_getRenderTarget(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native long RenderSystem_detachRenderTarget(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native long RenderSystem_getRenderTargetIterator(long jarg1, RenderSystem jarg1_);
  public final static native String RenderSystem_getErrorDescription(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native long RenderSystem_getGlobalInstanceVertexBuffer(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setGlobalInstanceVertexBuffer(long jarg1, RenderSystem jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_);
  public final static native long RenderSystem_getGlobalInstanceVertexBufferVertexDeclaration(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setGlobalInstanceVertexBufferVertexDeclaration(long jarg1, RenderSystem jarg1_, long jarg2, VertexDeclaration jarg2_);
  public final static native long RenderSystem_getGlobalNumberOfInstances(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setGlobalNumberOfInstances(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native void RenderSystem_setDepthBufferFor(long jarg1, RenderSystem jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native void RenderSystem__useLights(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3);
  public final static native boolean RenderSystem_areFixedFunctionLightsInViewSpace(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setWorldMatrix(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void RenderSystem__setWorldMatrices(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_, int jarg3);
  public final static native void RenderSystem__setViewMatrix(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void RenderSystem__setProjectionMatrix(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void RenderSystem__setTextureUnitSettings(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TextureUnitState jarg3_);
  public final static native void RenderSystem__setBindingType(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem__disableTextureUnit(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native void RenderSystem__disableTextureUnitsFrom(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native void RenderSystem__setSurfaceParams__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, ColourValue jarg2_, long jarg3, ColourValue jarg3_, long jarg4, ColourValue jarg4_, long jarg5, ColourValue jarg5_, float jarg6, int jarg7);
  public final static native void RenderSystem__setSurfaceParams__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, ColourValue jarg2_, long jarg3, ColourValue jarg3_, long jarg4, ColourValue jarg4_, long jarg5, ColourValue jarg5_, float jarg6);
  public final static native void RenderSystem__setPointSpritesEnabled(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__setPointParameters(long jarg1, RenderSystem jarg1_, float jarg2, boolean jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8);
  public final static native void RenderSystem__setTexture(long jarg1, RenderSystem jarg1_, long jarg2, boolean jarg3, long jarg4, TexturePtr jarg4_);
  public final static native void RenderSystem__setVertexTexture(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TexturePtr jarg3_);
  public final static native void RenderSystem__setGeometryTexture(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TexturePtr jarg3_);
  public final static native void RenderSystem__setComputeTexture(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TexturePtr jarg3_);
  public final static native void RenderSystem__setTesselationHullTexture(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TexturePtr jarg3_);
  public final static native void RenderSystem__setTesselationDomainTexture(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TexturePtr jarg3_);
  public final static native void RenderSystem__setTextureCoordSet(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3);
  public final static native void RenderSystem__setTextureCoordCalculation__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3, long jarg4, Frustum jarg4_);
  public final static native void RenderSystem__setTextureCoordCalculation__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3);
  public final static native void RenderSystem__setTextureBlendMode(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, LayerBlendModeEx jarg3_);
  public final static native void RenderSystem__setTextureUnitFiltering__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void RenderSystem__setTextureUnitFiltering__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void RenderSystem__setTextureUnitCompareEnabled(long jarg1, RenderSystem jarg1_, long jarg2, boolean jarg3);
  public final static native void RenderSystem__setTextureUnitCompareFunction(long jarg1, RenderSystem jarg1_, long jarg2, int jarg3);
  public final static native void RenderSystem__setTextureLayerAnisotropy(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3);
  public final static native void RenderSystem__setTextureAddressingMode(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, TextureUnitState.UVWAddressingMode jarg3_);
  public final static native void RenderSystem__setTextureBorderColour(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void RenderSystem__setTextureMipmapBias(long jarg1, RenderSystem jarg1_, long jarg2, float jarg3);
  public final static native void RenderSystem__setTextureMatrix(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void RenderSystem__setSceneBlending__SWIG_0(long jarg1, RenderSystem jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void RenderSystem__setSceneBlending__SWIG_1(long jarg1, RenderSystem jarg1_, int jarg2, int jarg3);
  public final static native void RenderSystem__setSeparateSceneBlending__SWIG_0(long jarg1, RenderSystem jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void RenderSystem__setSeparateSceneBlending__SWIG_1(long jarg1, RenderSystem jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void RenderSystem__setSeparateSceneBlending__SWIG_2(long jarg1, RenderSystem jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void RenderSystem__setAlphaRejectSettings(long jarg1, RenderSystem jarg1_, int jarg2, short jarg3, boolean jarg4);
  public final static native void RenderSystem__setTextureProjectionRelativeTo(long jarg1, RenderSystem jarg1_, boolean jarg2, long jarg3, Vector3 jarg3_);
  public final static native long RenderSystem__createDepthBufferFor(long jarg1, RenderSystem jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native void RenderSystem__cleanupDepthBuffers__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__cleanupDepthBuffers__SWIG_1(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__beginFrame(long jarg1, RenderSystem jarg1_);
  public final static native long new_RenderSystem_RenderSystemContext();
  public final static native void delete_RenderSystem_RenderSystemContext(long jarg1);
  public final static native long RenderSystem__pauseFrame(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__resumeFrame(long jarg1, RenderSystem jarg1_, long jarg2, RenderSystem.RenderSystemContext jarg2_);
  public final static native void RenderSystem__endFrame(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setViewport(long jarg1, RenderSystem jarg1_, long jarg2, Viewport jarg2_);
  public final static native long RenderSystem__getViewport(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setCullingMode(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native int RenderSystem__getCullingMode(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setDepthBufferParams__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2, boolean jarg3, int jarg4);
  public final static native void RenderSystem__setDepthBufferParams__SWIG_1(long jarg1, RenderSystem jarg1_, boolean jarg2, boolean jarg3);
  public final static native void RenderSystem__setDepthBufferParams__SWIG_2(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__setDepthBufferParams__SWIG_3(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setDepthBufferCheckEnabled__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__setDepthBufferCheckEnabled__SWIG_1(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setDepthBufferWriteEnabled__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__setDepthBufferWriteEnabled__SWIG_1(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setDepthBufferFunction__SWIG_0(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem__setDepthBufferFunction__SWIG_1(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__setColourBufferWriteEnabled(long jarg1, RenderSystem jarg1_, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native void RenderSystem__setDepthBias__SWIG_0(long jarg1, RenderSystem jarg1_, float jarg2, float jarg3);
  public final static native void RenderSystem__setDepthBias__SWIG_1(long jarg1, RenderSystem jarg1_, float jarg2);
  public final static native void RenderSystem__setFog__SWIG_0(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4, float jarg5, float jarg6);
  public final static native void RenderSystem__setFog__SWIG_1(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4, float jarg5);
  public final static native void RenderSystem__setFog__SWIG_2(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4);
  public final static native void RenderSystem__setFog__SWIG_3(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, ColourValue jarg3_);
  public final static native void RenderSystem__setFog__SWIG_4(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem__setFog__SWIG_5(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__beginGeometryCount(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem__getFaceCount(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem__getBatchCount(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem__getVertexCount(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_convertColourValue(long jarg1, RenderSystem jarg1_, long jarg2, ColourValue jarg2_, long jarg3);
  public final static native int RenderSystem_getColourVertexElementType(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__convertProjectionMatrix__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_, long jarg3, Matrix4 jarg3_, boolean jarg4);
  public final static native void RenderSystem__convertProjectionMatrix__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_, long jarg3, Matrix4 jarg3_);
  public final static native void RenderSystem__makeProjectionMatrix__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, Radian jarg2_, float jarg3, float jarg4, float jarg5, long jarg6, Matrix4 jarg6_, boolean jarg7);
  public final static native void RenderSystem__makeProjectionMatrix__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, Radian jarg2_, float jarg3, float jarg4, float jarg5, long jarg6, Matrix4 jarg6_);
  public final static native void RenderSystem__makeProjectionMatrix__SWIG_2(long jarg1, RenderSystem jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, long jarg8, Matrix4 jarg8_, boolean jarg9);
  public final static native void RenderSystem__makeProjectionMatrix__SWIG_3(long jarg1, RenderSystem jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, long jarg8, Matrix4 jarg8_);
  public final static native void RenderSystem__makeOrthoMatrix__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, Radian jarg2_, float jarg3, float jarg4, float jarg5, long jarg6, Matrix4 jarg6_, boolean jarg7);
  public final static native void RenderSystem__makeOrthoMatrix__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, Radian jarg2_, float jarg3, float jarg4, float jarg5, long jarg6, Matrix4 jarg6_);
  public final static native void RenderSystem__applyObliqueDepthProjection(long jarg1, RenderSystem jarg1_, long jarg2, Matrix4 jarg2_, long jarg3, Plane jarg3_, boolean jarg4);
  public final static native void RenderSystem__setPolygonMode(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem_setStencilCheckEnabled(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_0(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9, boolean jarg10);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_1(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_2(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_3(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_4(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_5(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_6(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_7(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_8(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem_setStencilBufferParams__SWIG_9(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setNormaliseNormals(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__render(long jarg1, RenderSystem jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void RenderSystem__renderUsingReadBackAsTexture(long jarg1, RenderSystem jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native long RenderSystem_getCapabilities(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem_getDriverVersion(long jarg1, RenderSystem jarg1_);
  public final static native String RenderSystem__getDefaultViewportMaterialScheme(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_bindGpuProgram(long jarg1, RenderSystem jarg1_, long jarg2, GpuProgram jarg2_);
  public final static native void RenderSystem_bindGpuProgramParameters(long jarg1, RenderSystem jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void RenderSystem_bindGpuProgramPassIterationParameters(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native void RenderSystem_unbindGpuProgram(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native boolean RenderSystem_isGpuProgramBound(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native int RenderSystem_getNativeShadingLanguageVersion(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setClipPlanes(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native void RenderSystem_addClipPlane(long jarg1, RenderSystem jarg1_, long jarg2, Plane jarg2_);
  public final static native void RenderSystem_resetClipPlanes(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__initRenderTargets(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__notifyCameraRemoved(long jarg1, RenderSystem jarg1_, long jarg2, Camera jarg2_);
  public final static native void RenderSystem__updateAllRenderTargets__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__updateAllRenderTargets__SWIG_1(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem__swapAllRenderTargetBuffers(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setInvertVertexWinding(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native boolean RenderSystem_getInvertVertexWinding(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setScissorTest__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void RenderSystem_setScissorTest__SWIG_1(long jarg1, RenderSystem jarg1_, boolean jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void RenderSystem_setScissorTest__SWIG_2(long jarg1, RenderSystem jarg1_, boolean jarg2, long jarg3, long jarg4);
  public final static native void RenderSystem_setScissorTest__SWIG_3(long jarg1, RenderSystem jarg1_, boolean jarg2, long jarg3);
  public final static native void RenderSystem_setScissorTest__SWIG_4(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem_clearFrameBuffer__SWIG_0(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, ColourValue jarg3_, float jarg4, int jarg5);
  public final static native void RenderSystem_clearFrameBuffer__SWIG_1(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, ColourValue jarg3_, float jarg4);
  public final static native void RenderSystem_clearFrameBuffer__SWIG_2(long jarg1, RenderSystem jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void RenderSystem_clearFrameBuffer__SWIG_3(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native float RenderSystem_getHorizontalTexelOffset(long jarg1, RenderSystem jarg1_);
  public final static native float RenderSystem_getVerticalTexelOffset(long jarg1, RenderSystem jarg1_);
  public final static native float RenderSystem_getMinimumDepthInputValue(long jarg1, RenderSystem jarg1_);
  public final static native float RenderSystem_getMaximumDepthInputValue(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_setCurrentPassIterationCount(long jarg1, RenderSystem jarg1_, long jarg2);
  public final static native void RenderSystem_setDeriveDepthBias__SWIG_0(long jarg1, RenderSystem jarg1_, boolean jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void RenderSystem_setDeriveDepthBias__SWIG_1(long jarg1, RenderSystem jarg1_, boolean jarg2, float jarg3, float jarg4);
  public final static native void RenderSystem_setDeriveDepthBias__SWIG_2(long jarg1, RenderSystem jarg1_, boolean jarg2, float jarg3);
  public final static native void RenderSystem_setDeriveDepthBias__SWIG_3(long jarg1, RenderSystem jarg1_, boolean jarg2);
  public final static native void RenderSystem__setRenderTarget(long jarg1, RenderSystem jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native long new_RenderSystem_Listener();
  public final static native void delete_RenderSystem_Listener(long jarg1);
  public final static native void RenderSystem_Listener_eventOccurred__SWIG_0(long jarg1, RenderSystem.Listener jarg1_, String jarg2, long jarg3);
  public final static native void RenderSystem_Listener_eventOccurred__SWIG_1(long jarg1, RenderSystem.Listener jarg1_, String jarg2);
  public final static native void RenderSystem_Listener_director_connect(RenderSystem.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RenderSystem_Listener_change_ownership(RenderSystem.Listener obj, long cptr, boolean take_or_release);
  public final static native void RenderSystem_setSharedListener(long jarg1, RenderSystem.Listener jarg1_);
  public final static native long RenderSystem_getSharedListener();
  public final static native void RenderSystem_addListener(long jarg1, RenderSystem jarg1_, long jarg2, RenderSystem.Listener jarg2_);
  public final static native void RenderSystem_removeListener(long jarg1, RenderSystem jarg1_, long jarg2, RenderSystem.Listener jarg2_);
  public final static native long RenderSystem_getRenderSystemEvents(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_preExtraThreadsStarted(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_postExtraThreadsStarted(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_registerThread(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_unregisterThread(long jarg1, RenderSystem jarg1_);
  public final static native long RenderSystem_getDisplayMonitorCount(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_beginProfileEvent(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native void RenderSystem_endProfileEvent(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_markProfileEvent(long jarg1, RenderSystem jarg1_, String jarg2);
  public final static native boolean RenderSystem_hasAnisotropicMipMapFilter(long jarg1, RenderSystem jarg1_);
  public final static native void RenderSystem_getCustomAttribute(long jarg1, RenderSystem jarg1_, String jarg2, long jarg3);
  public final static native boolean RenderSystem_setDrawBuffer(long jarg1, RenderSystem jarg1_, int jarg2);
  public final static native long new_CompositorManager();
  public final static native void delete_CompositorManager(long jarg1);
  public final static native long CompositorManager_createImpl(long jarg1, CompositorManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_, long jarg7);
  public final static native void CompositorManager_initialise(long jarg1, CompositorManager jarg1_);
  public final static native long CompositorManager_create__SWIG_0(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long CompositorManager_create__SWIG_1(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long CompositorManager_create__SWIG_2(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long CompositorManager_create__SWIG_3(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3);
  public final static native long CompositorManager_getByName__SWIG_0(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3);
  public final static native long CompositorManager_getByName__SWIG_1(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native void CompositorManager_parseScript(long jarg1, CompositorManager jarg1_, long jarg2, String jarg3);
  public final static native long CompositorManager_getCompositorChain(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_);
  public final static native boolean CompositorManager_hasCompositorChain(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_);
  public final static native void CompositorManager_removeCompositorChain(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_);
  public final static native long CompositorManager_addCompositor__SWIG_0(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_, String jarg3, int jarg4);
  public final static native long CompositorManager_addCompositor__SWIG_1(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_, String jarg3);
  public final static native void CompositorManager_removeCompositor(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_, String jarg3);
  public final static native void CompositorManager_setCompositorEnabled(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_, String jarg3, boolean jarg4);
  public final static native long CompositorManager__getTexturedRectangle2D(long jarg1, CompositorManager jarg1_);
  public final static native void CompositorManager_removeAll(long jarg1, CompositorManager jarg1_);
  public final static native void CompositorManager__reconstructAllCompositorResources(long jarg1, CompositorManager jarg1_);
  public final static native long CompositorManager_getPooledTexture(long jarg1, CompositorManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, int jarg6, long jarg7, String jarg8, boolean jarg9, long jarg10, long jarg11, CompositorInstance jarg11_, int jarg12);
  public final static native void CompositorManager_freePooledTextures__SWIG_0(long jarg1, CompositorManager jarg1_, boolean jarg2);
  public final static native void CompositorManager_freePooledTextures__SWIG_1(long jarg1, CompositorManager jarg1_);
  public final static native void CompositorManager_registerCompositorLogic(long jarg1, CompositorManager jarg1_, String jarg2, long jarg3);
  public final static native void CompositorManager_unregisterCompositorLogic(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native long CompositorManager_getCompositorLogic(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native boolean CompositorManager_getHasCompositorLogic(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native void CompositorManager_registerCustomCompositionPass(long jarg1, CompositorManager jarg1_, String jarg2, long jarg3);
  public final static native void CompositorManager_unRegisterCustomCompositionPass(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native long CompositorManager_getCustomCompositionPass(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native boolean CompositorManager_getHasCompositionPass(long jarg1, CompositorManager jarg1_, String jarg2);
  public final static native void CompositorManager__relocateChain(long jarg1, CompositorManager jarg1_, long jarg2, Viewport jarg2_, long jarg3, Viewport jarg3_);
  public final static native long CompositorManager_getSingleton();
  public final static native long RENDER_QUEUE_COUNT_get();
  public final static native long new_CompositorInstance(long jarg1, CompositionTechnique jarg1_, long jarg2, CompositorChain jarg2_);
  public final static native void delete_CompositorInstance(long jarg1);
  public final static native void delete_CompositorInstance_Listener(long jarg1);
  public final static native void CompositorInstance_Listener_notifyMaterialSetup(long jarg1, CompositorInstance.Listener jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance_Listener_notifyMaterialSetupSwigExplicitListener(long jarg1, CompositorInstance.Listener jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance_Listener_notifyMaterialRender(long jarg1, CompositorInstance.Listener jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance_Listener_notifyMaterialRenderSwigExplicitListener(long jarg1, CompositorInstance.Listener jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance_Listener_notifyResourcesCreated(long jarg1, CompositorInstance.Listener jarg1_, boolean jarg2);
  public final static native void CompositorInstance_Listener_notifyResourcesCreatedSwigExplicitListener(long jarg1, CompositorInstance.Listener jarg1_, boolean jarg2);
  public final static native void CompositorInstance_Listener_notifyResourcesReleased(long jarg1, CompositorInstance.Listener jarg1_, boolean jarg2);
  public final static native void CompositorInstance_Listener_notifyResourcesReleasedSwigExplicitListener(long jarg1, CompositorInstance.Listener jarg1_, boolean jarg2);
  public final static native long new_CompositorInstance_Listener();
  public final static native void CompositorInstance_Listener_director_connect(CompositorInstance.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void CompositorInstance_Listener_change_ownership(CompositorInstance.Listener obj, long cptr, boolean take_or_release);
  public final static native void delete_CompositorInstance_RenderSystemOperation(long jarg1);
  public final static native void CompositorInstance_RenderSystemOperation_execute(long jarg1, CompositorInstance.RenderSystemOperation jarg1_, long jarg2, SceneManager jarg2_, long jarg3, RenderSystem jarg3_);
  public final static native long new_CompositorInstance_TargetOperation__SWIG_0();
  public final static native long new_CompositorInstance_TargetOperation__SWIG_1(long jarg1, RenderTarget jarg1_);
  public final static native void CompositorInstance_TargetOperation_target_set(long jarg1, CompositorInstance.TargetOperation jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native long CompositorInstance_TargetOperation_target_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_currentQueueGroupID_set(long jarg1, CompositorInstance.TargetOperation jarg1_, int jarg2);
  public final static native int CompositorInstance_TargetOperation_currentQueueGroupID_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_renderSystemOperations_set(long jarg1, CompositorInstance.TargetOperation jarg1_, long jarg2);
  public final static native long CompositorInstance_TargetOperation_renderSystemOperations_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_visibilityMask_set(long jarg1, CompositorInstance.TargetOperation jarg1_, long jarg2);
  public final static native long CompositorInstance_TargetOperation_visibilityMask_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_lodBias_set(long jarg1, CompositorInstance.TargetOperation jarg1_, float jarg2);
  public final static native float CompositorInstance_TargetOperation_lodBias_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_renderQueues_set(long jarg1, CompositorInstance.TargetOperation jarg1_, long jarg2);
  public final static native long CompositorInstance_TargetOperation_renderQueues_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_onlyInitial_set(long jarg1, CompositorInstance.TargetOperation jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_TargetOperation_onlyInitial_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_hasBeenRendered_set(long jarg1, CompositorInstance.TargetOperation jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_TargetOperation_hasBeenRendered_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_findVisibleObjects_set(long jarg1, CompositorInstance.TargetOperation jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_TargetOperation_findVisibleObjects_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_materialScheme_set(long jarg1, CompositorInstance.TargetOperation jarg1_, String jarg2);
  public final static native String CompositorInstance_TargetOperation_materialScheme_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void CompositorInstance_TargetOperation_shadowsEnabled_set(long jarg1, CompositorInstance.TargetOperation jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_TargetOperation_shadowsEnabled_get(long jarg1, CompositorInstance.TargetOperation jarg1_);
  public final static native void delete_CompositorInstance_TargetOperation(long jarg1);
  public final static native void CompositorInstance_setEnabled(long jarg1, CompositorInstance jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_getEnabled(long jarg1, CompositorInstance jarg1_);
  public final static native void CompositorInstance_setAlive(long jarg1, CompositorInstance jarg1_, boolean jarg2);
  public final static native boolean CompositorInstance_getAlive(long jarg1, CompositorInstance jarg1_);
  public final static native String CompositorInstance_getTextureInstanceName(long jarg1, CompositorInstance jarg1_, String jarg2, long jarg3);
  public final static native long CompositorInstance_getTextureInstance(long jarg1, CompositorInstance jarg1_, String jarg2, long jarg3);
  public final static native long CompositorInstance_getRenderTarget(long jarg1, CompositorInstance jarg1_, String jarg2);
  public final static native void CompositorInstance__compileTargetOperations(long jarg1, CompositorInstance jarg1_, long jarg2);
  public final static native void CompositorInstance__compileOutputOperation(long jarg1, CompositorInstance jarg1_, long jarg2, CompositorInstance.TargetOperation jarg2_);
  public final static native long CompositorInstance_getCompositor(long jarg1, CompositorInstance jarg1_);
  public final static native long CompositorInstance_getTechnique(long jarg1, CompositorInstance jarg1_);
  public final static native void CompositorInstance_setTechnique__SWIG_0(long jarg1, CompositorInstance jarg1_, long jarg2, CompositionTechnique jarg2_, boolean jarg3);
  public final static native void CompositorInstance_setTechnique__SWIG_1(long jarg1, CompositorInstance jarg1_, long jarg2, CompositionTechnique jarg2_);
  public final static native void CompositorInstance_setScheme__SWIG_0(long jarg1, CompositorInstance jarg1_, String jarg2, boolean jarg3);
  public final static native void CompositorInstance_setScheme__SWIG_1(long jarg1, CompositorInstance jarg1_, String jarg2);
  public final static native String CompositorInstance_getScheme(long jarg1, CompositorInstance jarg1_);
  public final static native void CompositorInstance_notifyResized(long jarg1, CompositorInstance jarg1_);
  public final static native long CompositorInstance_getChain(long jarg1, CompositorInstance jarg1_);
  public final static native void CompositorInstance_addListener(long jarg1, CompositorInstance jarg1_, long jarg2, CompositorInstance.Listener jarg2_);
  public final static native void CompositorInstance_removeListener(long jarg1, CompositorInstance jarg1_, long jarg2, CompositorInstance.Listener jarg2_);
  public final static native void CompositorInstance__fireNotifyMaterialSetup(long jarg1, CompositorInstance jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance__fireNotifyMaterialRender(long jarg1, CompositorInstance jarg1_, long jarg2, long jarg3, MaterialPtr jarg3_);
  public final static native void CompositorInstance__fireNotifyResourcesCreated(long jarg1, CompositorInstance jarg1_, boolean jarg2);
  public final static native void CompositorInstance__fireNotifyResourcesReleased(long jarg1, CompositorInstance jarg1_, boolean jarg2);
  public final static native long new_CompositionPass(long jarg1, CompositionTargetPass jarg1_);
  public final static native void delete_CompositionPass(long jarg1);
  public final static native void CompositionPass_setType(long jarg1, CompositionPass jarg1_, int jarg2);
  public final static native void CompositionPass_setIdentifier(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getIdentifier(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setMaterial(long jarg1, CompositionPass jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void CompositionPass_setMaterialName(long jarg1, CompositionPass jarg1_, String jarg2);
  public final static native long CompositionPass_getMaterial(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setFirstRenderQueue(long jarg1, CompositionPass jarg1_, short jarg2);
  public final static native short CompositionPass_getFirstRenderQueue(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setLastRenderQueue(long jarg1, CompositionPass jarg1_, short jarg2);
  public final static native short CompositionPass_getLastRenderQueue(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setMaterialScheme(long jarg1, CompositionPass jarg1_, String jarg2);
  public final static native String CompositionPass_getMaterialScheme(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setClearBuffers(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getClearBuffers(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setClearColour(long jarg1, CompositionPass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long CompositionPass_getClearColour(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setAutomaticColour(long jarg1, CompositionPass jarg1_, boolean jarg2);
  public final static native boolean CompositionPass_getAutomaticColour(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setClearDepth(long jarg1, CompositionPass jarg1_, float jarg2);
  public final static native float CompositionPass_getClearDepth(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setClearStencil(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getClearStencil(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilCheck(long jarg1, CompositionPass jarg1_, boolean jarg2);
  public final static native boolean CompositionPass_getStencilCheck(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilFunc(long jarg1, CompositionPass jarg1_, int jarg2);
  public final static native int CompositionPass_getStencilFunc(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilRefValue(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getStencilRefValue(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilMask(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getStencilMask(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilFailOp(long jarg1, CompositionPass jarg1_, int jarg2);
  public final static native int CompositionPass_getStencilFailOp(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilDepthFailOp(long jarg1, CompositionPass jarg1_, int jarg2);
  public final static native int CompositionPass_getStencilDepthFailOp(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilPassOp(long jarg1, CompositionPass jarg1_, int jarg2);
  public final static native int CompositionPass_getStencilPassOp(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilTwoSidedOperation(long jarg1, CompositionPass jarg1_, boolean jarg2);
  public final static native boolean CompositionPass_getStencilTwoSidedOperation(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setStencilReadBackAsTextureOperation(long jarg1, CompositionPass jarg1_, boolean jarg2);
  public final static native boolean CompositionPass_getStencilReadBackAsTextureOperation(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_InputTex_name_set(long jarg1, CompositionPass.InputTex jarg1_, String jarg2);
  public final static native String CompositionPass_InputTex_name_get(long jarg1, CompositionPass.InputTex jarg1_);
  public final static native void CompositionPass_InputTex_mrtIndex_set(long jarg1, CompositionPass.InputTex jarg1_, long jarg2);
  public final static native long CompositionPass_InputTex_mrtIndex_get(long jarg1, CompositionPass.InputTex jarg1_);
  public final static native long new_CompositionPass_InputTex__SWIG_0();
  public final static native long new_CompositionPass_InputTex__SWIG_1(String jarg1, long jarg2);
  public final static native long new_CompositionPass_InputTex__SWIG_2(String jarg1);
  public final static native void delete_CompositionPass_InputTex(long jarg1);
  public final static native void CompositionPass_setInput__SWIG_0(long jarg1, CompositionPass jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native void CompositionPass_setInput__SWIG_1(long jarg1, CompositionPass jarg1_, long jarg2, String jarg3);
  public final static native void CompositionPass_setInput__SWIG_2(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getInput(long jarg1, CompositionPass jarg1_, long jarg2);
  public final static native long CompositionPass_getNumInputs(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_clearAllInputs(long jarg1, CompositionPass jarg1_);
  public final static native long CompositionPass_getParent(long jarg1, CompositionPass jarg1_);
  public final static native boolean CompositionPass__isSupported(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setQuadCorners(long jarg1, CompositionPass jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native boolean CompositionPass_getQuadCorners(long jarg1, CompositionPass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void CompositionPass_setQuadFarCorners(long jarg1, CompositionPass jarg1_, boolean jarg2, boolean jarg3);
  public final static native boolean CompositionPass_getQuadFarCorners(long jarg1, CompositionPass jarg1_);
  public final static native boolean CompositionPass_getQuadFarCornersViewSpace(long jarg1, CompositionPass jarg1_);
  public final static native void CompositionPass_setCustomType(long jarg1, CompositionPass jarg1_, String jarg2);
  public final static native String CompositionPass_getCustomType(long jarg1, CompositionPass jarg1_);
  public final static native void MaterialScriptProgramDefinition_name_set(long jarg1, MaterialScriptProgramDefinition jarg1_, String jarg2);
  public final static native String MaterialScriptProgramDefinition_name_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_progType_set(long jarg1, MaterialScriptProgramDefinition jarg1_, int jarg2);
  public final static native int MaterialScriptProgramDefinition_progType_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_language_set(long jarg1, MaterialScriptProgramDefinition jarg1_, String jarg2);
  public final static native String MaterialScriptProgramDefinition_language_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_source_set(long jarg1, MaterialScriptProgramDefinition jarg1_, String jarg2);
  public final static native String MaterialScriptProgramDefinition_source_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_syntax_set(long jarg1, MaterialScriptProgramDefinition jarg1_, String jarg2);
  public final static native String MaterialScriptProgramDefinition_syntax_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_supportsSkeletalAnimation_set(long jarg1, MaterialScriptProgramDefinition jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptProgramDefinition_supportsSkeletalAnimation_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_supportsMorphAnimation_set(long jarg1, MaterialScriptProgramDefinition jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptProgramDefinition_supportsMorphAnimation_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_supportsPoseAnimation_set(long jarg1, MaterialScriptProgramDefinition jarg1_, int jarg2);
  public final static native int MaterialScriptProgramDefinition_supportsPoseAnimation_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_usesVertexTextureFetch_set(long jarg1, MaterialScriptProgramDefinition jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptProgramDefinition_usesVertexTextureFetch_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native void MaterialScriptProgramDefinition_customParameters_set(long jarg1, MaterialScriptProgramDefinition jarg1_, long jarg2);
  public final static native long MaterialScriptProgramDefinition_customParameters_get(long jarg1, MaterialScriptProgramDefinition jarg1_);
  public final static native long new_MaterialScriptProgramDefinition();
  public final static native void delete_MaterialScriptProgramDefinition(long jarg1);
  public final static native void MaterialScriptContext_section_set(long jarg1, MaterialScriptContext jarg1_, int jarg2);
  public final static native int MaterialScriptContext_section_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_groupName_set(long jarg1, MaterialScriptContext jarg1_, String jarg2);
  public final static native String MaterialScriptContext_groupName_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_material_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native long MaterialScriptContext_material_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_technique_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, Technique jarg2_);
  public final static native long MaterialScriptContext_technique_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_pass_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, Pass jarg2_);
  public final static native long MaterialScriptContext_pass_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_textureUnit_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, TextureUnitState jarg2_);
  public final static native long MaterialScriptContext_textureUnit_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_program_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, GpuProgramPtr jarg2_);
  public final static native long MaterialScriptContext_program_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_isVertexProgramShadowCaster_set(long jarg1, MaterialScriptContext jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptContext_isVertexProgramShadowCaster_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_isFragmentProgramShadowCaster_set(long jarg1, MaterialScriptContext jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptContext_isFragmentProgramShadowCaster_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_isVertexProgramShadowReceiver_set(long jarg1, MaterialScriptContext jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptContext_isVertexProgramShadowReceiver_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_isFragmentProgramShadowReceiver_set(long jarg1, MaterialScriptContext jarg1_, boolean jarg2);
  public final static native boolean MaterialScriptContext_isFragmentProgramShadowReceiver_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_programParams_set(long jarg1, MaterialScriptContext jarg1_, long jarg2);
  public final static native long MaterialScriptContext_programParams_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_numAnimationParametrics_set(long jarg1, MaterialScriptContext jarg1_, int jarg2);
  public final static native int MaterialScriptContext_numAnimationParametrics_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_programDef_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, MaterialScriptProgramDefinition jarg2_);
  public final static native long MaterialScriptContext_programDef_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_techLev_set(long jarg1, MaterialScriptContext jarg1_, int jarg2);
  public final static native int MaterialScriptContext_techLev_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_passLev_set(long jarg1, MaterialScriptContext jarg1_, int jarg2);
  public final static native int MaterialScriptContext_passLev_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_stateLev_set(long jarg1, MaterialScriptContext jarg1_, int jarg2);
  public final static native int MaterialScriptContext_stateLev_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_defaultParamLines_set(long jarg1, MaterialScriptContext jarg1_, long jarg2, StringVector jarg2_);
  public final static native long MaterialScriptContext_defaultParamLines_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_lineNo_set(long jarg1, MaterialScriptContext jarg1_, long jarg2);
  public final static native long MaterialScriptContext_lineNo_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_filename_set(long jarg1, MaterialScriptContext jarg1_, String jarg2);
  public final static native String MaterialScriptContext_filename_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native void MaterialScriptContext_textureAliases_set(long jarg1, MaterialScriptContext jarg1_, long jarg2);
  public final static native long MaterialScriptContext_textureAliases_get(long jarg1, MaterialScriptContext jarg1_);
  public final static native long new_MaterialScriptContext();
  public final static native void delete_MaterialScriptContext(long jarg1);
  public final static native void delete_MaterialSerializer_Listener(long jarg1);
  public final static native void MaterialSerializer_Listener_materialEventRaised(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Material jarg5_);
  public final static native void MaterialSerializer_Listener_materialEventRaisedSwigExplicitListener(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Material jarg5_);
  public final static native void MaterialSerializer_Listener_techniqueEventRaised(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Technique jarg5_);
  public final static native void MaterialSerializer_Listener_techniqueEventRaisedSwigExplicitListener(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Technique jarg5_);
  public final static native void MaterialSerializer_Listener_passEventRaised(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Pass jarg5_);
  public final static native void MaterialSerializer_Listener_passEventRaisedSwigExplicitListener(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, Pass jarg5_);
  public final static native void MaterialSerializer_Listener_gpuProgramRefEventRaised(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, String jarg5, long jarg6, GpuProgramPtr jarg6_, long jarg7, long jarg8, GpuProgramParameters jarg8_);
  public final static native void MaterialSerializer_Listener_textureUnitStateEventRaised(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, TextureUnitState jarg5_);
  public final static native void MaterialSerializer_Listener_textureUnitStateEventRaisedSwigExplicitListener(long jarg1, MaterialSerializer.Listener jarg1_, long jarg2, MaterialSerializer jarg2_, int jarg3, long jarg4, long jarg5, TextureUnitState jarg5_);
  public final static native long new_MaterialSerializer_Listener();
  public final static native void MaterialSerializer_Listener_director_connect(MaterialSerializer.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MaterialSerializer_Listener_change_ownership(MaterialSerializer.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_MaterialSerializer();
  public final static native void delete_MaterialSerializer(long jarg1);
  public final static native void MaterialSerializer_queueForExport__SWIG_0(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, boolean jarg3, boolean jarg4, String jarg5);
  public final static native void MaterialSerializer_queueForExport__SWIG_1(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, boolean jarg3, boolean jarg4);
  public final static native void MaterialSerializer_queueForExport__SWIG_2(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, boolean jarg3);
  public final static native void MaterialSerializer_queueForExport__SWIG_3(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void MaterialSerializer_exportQueued__SWIG_0(long jarg1, MaterialSerializer jarg1_, String jarg2, boolean jarg3, String jarg4);
  public final static native void MaterialSerializer_exportQueued__SWIG_1(long jarg1, MaterialSerializer jarg1_, String jarg2, boolean jarg3);
  public final static native void MaterialSerializer_exportQueued__SWIG_2(long jarg1, MaterialSerializer jarg1_, String jarg2);
  public final static native void MaterialSerializer_exportMaterial__SWIG_0(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, String jarg3, boolean jarg4, boolean jarg5, String jarg6, String jarg7);
  public final static native void MaterialSerializer_exportMaterial__SWIG_1(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, String jarg3, boolean jarg4, boolean jarg5, String jarg6);
  public final static native void MaterialSerializer_exportMaterial__SWIG_2(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, String jarg3, boolean jarg4, boolean jarg5);
  public final static native void MaterialSerializer_exportMaterial__SWIG_3(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, String jarg3, boolean jarg4);
  public final static native void MaterialSerializer_exportMaterial__SWIG_4(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialPtr jarg2_, String jarg3);
  public final static native String MaterialSerializer_getQueuedAsString(long jarg1, MaterialSerializer jarg1_);
  public final static native void MaterialSerializer_clearQueue(long jarg1, MaterialSerializer jarg1_);
  public final static native void MaterialSerializer_parseScript(long jarg1, MaterialSerializer jarg1_, long jarg2, String jarg3);
  public final static native void MaterialSerializer_addListener(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialSerializer.Listener jarg2_);
  public final static native void MaterialSerializer_removeListener(long jarg1, MaterialSerializer jarg1_, long jarg2, MaterialSerializer.Listener jarg2_);
  public final static native void MaterialSerializer_beginSection__SWIG_0(long jarg1, MaterialSerializer jarg1_, int jarg2, boolean jarg3);
  public final static native void MaterialSerializer_beginSection__SWIG_1(long jarg1, MaterialSerializer jarg1_, int jarg2);
  public final static native void MaterialSerializer_endSection__SWIG_0(long jarg1, MaterialSerializer jarg1_, int jarg2, boolean jarg3);
  public final static native void MaterialSerializer_endSection__SWIG_1(long jarg1, MaterialSerializer jarg1_, int jarg2);
  public final static native void MaterialSerializer_writeAttribute__SWIG_0(long jarg1, MaterialSerializer jarg1_, int jarg2, String jarg3, boolean jarg4);
  public final static native void MaterialSerializer_writeAttribute__SWIG_1(long jarg1, MaterialSerializer jarg1_, int jarg2, String jarg3);
  public final static native void MaterialSerializer_writeValue__SWIG_0(long jarg1, MaterialSerializer jarg1_, String jarg2, boolean jarg3);
  public final static native void MaterialSerializer_writeValue__SWIG_1(long jarg1, MaterialSerializer jarg1_, String jarg2);
  public final static native String MaterialSerializer_quoteWord(long jarg1, MaterialSerializer jarg1_, String jarg2);
  public final static native void MaterialSerializer_writeComment__SWIG_0(long jarg1, MaterialSerializer jarg1_, int jarg2, String jarg3, boolean jarg4);
  public final static native void MaterialSerializer_writeComment__SWIG_1(long jarg1, MaterialSerializer jarg1_, int jarg2, String jarg3);
  public final static native long new_UserObjectBindings__SWIG_0();
  public final static native void delete_UserObjectBindings(long jarg1);
  public final static native void UserObjectBindings_eraseUserAny(long jarg1, UserObjectBindings jarg1_, String jarg2);
  public final static native void UserObjectBindings_clear(long jarg1, UserObjectBindings jarg1_);
  public final static native long new_UserObjectBindings__SWIG_1(long jarg1, UserObjectBindings jarg1_);
  public final static native long UserObjectBindings_swap(long jarg1, UserObjectBindings jarg1_, long jarg2, UserObjectBindings jarg2_);
  public final static native void MaterialManager_DEFAULT_SCHEME_NAME_set(String jarg1);
  public final static native String MaterialManager_DEFAULT_SCHEME_NAME_get();
  public final static native long MaterialManager_create__SWIG_0(long jarg1, MaterialManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long MaterialManager_create__SWIG_1(long jarg1, MaterialManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long MaterialManager_create__SWIG_2(long jarg1, MaterialManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long MaterialManager_create__SWIG_3(long jarg1, MaterialManager jarg1_, String jarg2, String jarg3);
  public final static native long MaterialManager_getByName__SWIG_0(long jarg1, MaterialManager jarg1_, String jarg2, String jarg3);
  public final static native long MaterialManager_getByName__SWIG_1(long jarg1, MaterialManager jarg1_, String jarg2);
  public final static native long MaterialManager_getDefaultMaterial__SWIG_0(long jarg1, MaterialManager jarg1_, boolean jarg2);
  public final static native long MaterialManager_getDefaultMaterial__SWIG_1(long jarg1, MaterialManager jarg1_);
  public final static native long new_MaterialManager();
  public final static native void delete_MaterialManager(long jarg1);
  public final static native void MaterialManager_initialise(long jarg1, MaterialManager jarg1_);
  public final static native void MaterialManager_parseScript(long jarg1, MaterialManager jarg1_, long jarg2, String jarg3);
  public final static native void MaterialManager_setDefaultTextureFiltering__SWIG_0(long jarg1, MaterialManager jarg1_, int jarg2);
  public final static native void MaterialManager_setDefaultTextureFiltering__SWIG_1(long jarg1, MaterialManager jarg1_, int jarg2, int jarg3);
  public final static native void MaterialManager_setDefaultTextureFiltering__SWIG_2(long jarg1, MaterialManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int MaterialManager_getDefaultTextureFiltering(long jarg1, MaterialManager jarg1_, int jarg2);
  public final static native void MaterialManager_setDefaultAnisotropy(long jarg1, MaterialManager jarg1_, long jarg2);
  public final static native long MaterialManager_getDefaultAnisotropy(long jarg1, MaterialManager jarg1_);
  public final static native long MaterialManager_getDefaultSettings(long jarg1, MaterialManager jarg1_);
  public final static native int MaterialManager__getSchemeIndex(long jarg1, MaterialManager jarg1_, String jarg2);
  public final static native String MaterialManager__getSchemeName(long jarg1, MaterialManager jarg1_, int jarg2);
  public final static native int MaterialManager__getActiveSchemeIndex(long jarg1, MaterialManager jarg1_);
  public final static native String MaterialManager_getActiveScheme(long jarg1, MaterialManager jarg1_);
  public final static native void MaterialManager_setActiveScheme(long jarg1, MaterialManager jarg1_, String jarg2);
  public final static native void MaterialManager_addListener__SWIG_0(long jarg1, MaterialManager jarg1_, long jarg2, MaterialManager_Listener jarg2_, String jarg3);
  public final static native void MaterialManager_addListener__SWIG_1(long jarg1, MaterialManager jarg1_, long jarg2, MaterialManager_Listener jarg2_);
  public final static native void MaterialManager_removeListener__SWIG_0(long jarg1, MaterialManager jarg1_, long jarg2, MaterialManager_Listener jarg2_, String jarg3);
  public final static native void MaterialManager_removeListener__SWIG_1(long jarg1, MaterialManager jarg1_, long jarg2, MaterialManager_Listener jarg2_);
  public final static native long MaterialManager__arbitrateMissingTechniqueForActiveScheme(long jarg1, MaterialManager jarg1_, long jarg2, Material jarg2_, int jarg3, long jarg4, Renderable jarg4_);
  public final static native void MaterialManager__notifyAfterIlluminationPassesCreated(long jarg1, MaterialManager jarg1_, long jarg2, Technique jarg2_);
  public final static native void MaterialManager__notifyBeforeIlluminationPassesCleared(long jarg1, MaterialManager jarg1_, long jarg2, Technique jarg2_);
  public final static native long MaterialManager_getSingleton();
  public final static native void delete_MaterialManager_Listener(long jarg1);
  public final static native long MaterialManager_Listener_handleSchemeNotFound(long jarg1, MaterialManager_Listener jarg1_, int jarg2, String jarg3, long jarg4, Material jarg4_, int jarg5, long jarg6, Renderable jarg6_);
  public final static native boolean MaterialManager_Listener_afterIlluminationPassesCreated(long jarg1, MaterialManager_Listener jarg1_, long jarg2, Technique jarg2_);
  public final static native boolean MaterialManager_Listener_afterIlluminationPassesCreatedSwigExplicitMaterialManager_Listener(long jarg1, MaterialManager_Listener jarg1_, long jarg2, Technique jarg2_);
  public final static native boolean MaterialManager_Listener_beforeIlluminationPassesCleared(long jarg1, MaterialManager_Listener jarg1_, long jarg2, Technique jarg2_);
  public final static native boolean MaterialManager_Listener_beforeIlluminationPassesClearedSwigExplicitMaterialManager_Listener(long jarg1, MaterialManager_Listener jarg1_, long jarg2, Technique jarg2_);
  public final static native long new_MaterialManager_Listener();
  public final static native void MaterialManager_Listener_director_connect(MaterialManager_Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MaterialManager_Listener_change_ownership(MaterialManager_Listener obj, long cptr, boolean take_or_release);
  public final static native long new_Renderable_RenderSystemData();
  public final static native void delete_Renderable_RenderSystemData(long jarg1);
  public final static native void delete_Renderable(long jarg1);
  public final static native long Renderable_getMaterial(long jarg1, Renderable jarg1_);
  public final static native long Renderable_getTechnique(long jarg1, Renderable jarg1_);
  public final static native void Renderable_getRenderOperation(long jarg1, Renderable jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native boolean Renderable_preRender(long jarg1, Renderable jarg1_, long jarg2, SceneManager jarg2_, long jarg3, RenderSystem jarg3_);
  public final static native void Renderable_postRender(long jarg1, Renderable jarg1_, long jarg2, SceneManager jarg2_, long jarg3, RenderSystem jarg3_);
  public final static native void Renderable_getWorldTransforms(long jarg1, Renderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native int Renderable_getNumWorldTransforms(long jarg1, Renderable jarg1_);
  public final static native void Renderable_setUseIdentityProjection(long jarg1, Renderable jarg1_, boolean jarg2);
  public final static native boolean Renderable_getUseIdentityProjection(long jarg1, Renderable jarg1_);
  public final static native void Renderable_setUseIdentityView(long jarg1, Renderable jarg1_, boolean jarg2);
  public final static native boolean Renderable_getUseIdentityView(long jarg1, Renderable jarg1_);
  public final static native float Renderable_getSquaredViewDepth(long jarg1, Renderable jarg1_, long jarg2, Camera jarg2_);
  public final static native long Renderable_getLights(long jarg1, Renderable jarg1_);
  public final static native boolean Renderable_getCastsShadows(long jarg1, Renderable jarg1_);
  public final static native void Renderable_setCustomParameter(long jarg1, Renderable jarg1_, long jarg2, long jarg3, Vector4 jarg3_);
  public final static native void Renderable_removeCustomParameter(long jarg1, Renderable jarg1_, long jarg2);
  public final static native boolean Renderable_hasCustomParameter(long jarg1, Renderable jarg1_, long jarg2);
  public final static native long Renderable_getCustomParameter(long jarg1, Renderable jarg1_, long jarg2);
  public final static native void Renderable__updateCustomGpuParameter(long jarg1, Renderable jarg1_, long jarg2, GpuProgramParameters.AutoConstantEntry jarg2_, long jarg3, GpuProgramParameters jarg3_);
  public final static native void Renderable_setPolygonModeOverrideable(long jarg1, Renderable jarg1_, boolean jarg2);
  public final static native boolean Renderable_getPolygonModeOverrideable(long jarg1, Renderable jarg1_);
  public final static native long Renderable_getUserObjectBindings__SWIG_0(long jarg1, Renderable jarg1_);
  public final static native void delete_Renderable_Visitor(long jarg1);
  public final static native void Renderable_Visitor_visit__SWIG_0(long jarg1, Renderable.Visitor jarg1_, long jarg2, Renderable jarg2_, int jarg3, boolean jarg4, long jarg5, Any jarg5_);
  public final static native void Renderable_Visitor_visit__SWIG_1(long jarg1, Renderable.Visitor jarg1_, long jarg2, Renderable jarg2_, int jarg3, boolean jarg4);
  public final static native long Renderable_getRenderSystemData(long jarg1, Renderable jarg1_);
  public final static native void Renderable_setRenderSystemData(long jarg1, Renderable jarg1_, long jarg2);
  public final static native long new_BillboardChain_Element__SWIG_0();
  public final static native long new_BillboardChain_Element__SWIG_1(long jarg1, Vector3 jarg1_, float jarg2, float jarg3, long jarg4, ColourValue jarg4_, long jarg5, Quaternion jarg5_);
  public final static native void BillboardChain_Element_position_set(long jarg1, BillboardChain.Element jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long BillboardChain_Element_position_get(long jarg1, BillboardChain.Element jarg1_);
  public final static native void BillboardChain_Element_width_set(long jarg1, BillboardChain.Element jarg1_, float jarg2);
  public final static native float BillboardChain_Element_width_get(long jarg1, BillboardChain.Element jarg1_);
  public final static native void BillboardChain_Element_texCoord_set(long jarg1, BillboardChain.Element jarg1_, float jarg2);
  public final static native float BillboardChain_Element_texCoord_get(long jarg1, BillboardChain.Element jarg1_);
  public final static native void BillboardChain_Element_colour_set(long jarg1, BillboardChain.Element jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long BillboardChain_Element_colour_get(long jarg1, BillboardChain.Element jarg1_);
  public final static native void BillboardChain_Element_orientation_set(long jarg1, BillboardChain.Element jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long BillboardChain_Element_orientation_get(long jarg1, BillboardChain.Element jarg1_);
  public final static native void delete_BillboardChain_Element(long jarg1);
  public final static native long new_BillboardChain__SWIG_0(String jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5, boolean jarg6);
  public final static native long new_BillboardChain__SWIG_1(String jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_BillboardChain__SWIG_2(String jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_BillboardChain__SWIG_3(String jarg1, long jarg2, long jarg3);
  public final static native long new_BillboardChain__SWIG_4(String jarg1, long jarg2);
  public final static native long new_BillboardChain__SWIG_5(String jarg1);
  public final static native void delete_BillboardChain(long jarg1);
  public final static native void BillboardChain_setMaxChainElements(long jarg1, BillboardChain jarg1_, long jarg2);
  public final static native long BillboardChain_getMaxChainElements(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setNumberOfChains(long jarg1, BillboardChain jarg1_, long jarg2);
  public final static native long BillboardChain_getNumberOfChains(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setUseTextureCoords(long jarg1, BillboardChain jarg1_, boolean jarg2);
  public final static native boolean BillboardChain_getUseTextureCoords(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setTextureCoordDirection(long jarg1, BillboardChain jarg1_, int jarg2);
  public final static native int BillboardChain_getTextureCoordDirection(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setOtherTextureCoordRange(long jarg1, BillboardChain jarg1_, float jarg2, float jarg3);
  public final static native long BillboardChain_getOtherTextureCoordRange(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setUseVertexColours(long jarg1, BillboardChain jarg1_, boolean jarg2);
  public final static native boolean BillboardChain_getUseVertexColours(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setDynamic(long jarg1, BillboardChain jarg1_, boolean jarg2);
  public final static native boolean BillboardChain_getDynamic(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_addChainElement(long jarg1, BillboardChain jarg1_, long jarg2, long jarg3, BillboardChain.Element jarg3_);
  public final static native void BillboardChain_removeChainElement(long jarg1, BillboardChain jarg1_, long jarg2);
  public final static native void BillboardChain_updateChainElement(long jarg1, BillboardChain jarg1_, long jarg2, long jarg3, long jarg4, BillboardChain.Element jarg4_);
  public final static native long BillboardChain_getChainElement(long jarg1, BillboardChain jarg1_, long jarg2, long jarg3);
  public final static native long BillboardChain_getNumChainElements(long jarg1, BillboardChain jarg1_, long jarg2);
  public final static native void BillboardChain_clearChain(long jarg1, BillboardChain jarg1_, long jarg2);
  public final static native void BillboardChain_clearAllChains(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setFaceCamera__SWIG_0(long jarg1, BillboardChain jarg1_, boolean jarg2, long jarg3, Vector3 jarg3_);
  public final static native void BillboardChain_setFaceCamera__SWIG_1(long jarg1, BillboardChain jarg1_, boolean jarg2);
  public final static native String BillboardChain_getMaterialName(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_setMaterialName__SWIG_0(long jarg1, BillboardChain jarg1_, String jarg2, String jarg3);
  public final static native void BillboardChain_setMaterialName__SWIG_1(long jarg1, BillboardChain jarg1_, String jarg2);
  public final static native float BillboardChain_getSquaredViewDepth(long jarg1, BillboardChain jarg1_, long jarg2, Camera jarg2_);
  public final static native float BillboardChain_getBoundingRadius(long jarg1, BillboardChain jarg1_);
  public final static native long BillboardChain_getBoundingBox(long jarg1, BillboardChain jarg1_);
  public final static native long BillboardChain_getMaterial(long jarg1, BillboardChain jarg1_);
  public final static native String BillboardChain_getMovableType(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain__updateRenderQueue(long jarg1, BillboardChain jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void BillboardChain_getRenderOperation(long jarg1, BillboardChain jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native boolean BillboardChain_preRender(long jarg1, BillboardChain jarg1_, long jarg2, SceneManager jarg2_, long jarg3, RenderSystem jarg3_);
  public final static native void BillboardChain_getWorldTransforms(long jarg1, BillboardChain jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long BillboardChain_getLights(long jarg1, BillboardChain jarg1_);
  public final static native void BillboardChain_visitRenderables__SWIG_0(long jarg1, BillboardChain jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void BillboardChain_visitRenderables__SWIG_1(long jarg1, BillboardChain jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native long new_BillboardChainFactory();
  public final static native void delete_BillboardChainFactory(long jarg1);
  public final static native void BillboardChainFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String BillboardChainFactory_FACTORY_TYPE_NAME_get();
  public final static native void BillboardChainFactory_destroyInstance(long jarg1, BillboardChainFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long new_RibbonTrail__SWIG_0(String jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_RibbonTrail__SWIG_1(String jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_RibbonTrail__SWIG_2(String jarg1, long jarg2, long jarg3);
  public final static native long new_RibbonTrail__SWIG_3(String jarg1, long jarg2);
  public final static native long new_RibbonTrail__SWIG_4(String jarg1);
  public final static native void delete_RibbonTrail(long jarg1);
  public final static native void RibbonTrail_addNode(long jarg1, RibbonTrail jarg1_, long jarg2, Node jarg2_);
  public final static native void RibbonTrail_removeNode(long jarg1, RibbonTrail jarg1_, long jarg2, Node jarg2_);
  public final static native long RibbonTrail_getNodeIterator(long jarg1, RibbonTrail jarg1_);
  public final static native long RibbonTrail_getChainIndexForNode(long jarg1, RibbonTrail jarg1_, long jarg2, Node jarg2_);
  public final static native void RibbonTrail_setTrailLength(long jarg1, RibbonTrail jarg1_, float jarg2);
  public final static native float RibbonTrail_getTrailLength(long jarg1, RibbonTrail jarg1_);
  public final static native void RibbonTrail_setMaxChainElements(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_setNumberOfChains(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_clearChain(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_setInitialColour__SWIG_0(long jarg1, RibbonTrail jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void RibbonTrail_setInitialColour__SWIG_1(long jarg1, RibbonTrail jarg1_, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void RibbonTrail_setInitialColour__SWIG_2(long jarg1, RibbonTrail jarg1_, long jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long RibbonTrail_getInitialColour(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_setColourChange__SWIG_0(long jarg1, RibbonTrail jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void RibbonTrail_setInitialWidth(long jarg1, RibbonTrail jarg1_, long jarg2, float jarg3);
  public final static native float RibbonTrail_getInitialWidth(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_setWidthChange(long jarg1, RibbonTrail jarg1_, long jarg2, float jarg3);
  public final static native float RibbonTrail_getWidthChange(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_setColourChange__SWIG_1(long jarg1, RibbonTrail jarg1_, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native long RibbonTrail_getColourChange(long jarg1, RibbonTrail jarg1_, long jarg2);
  public final static native void RibbonTrail_nodeUpdated(long jarg1, RibbonTrail jarg1_, long jarg2, Node jarg2_);
  public final static native void RibbonTrail_nodeDestroyed(long jarg1, RibbonTrail jarg1_, long jarg2, Node jarg2_);
  public final static native void RibbonTrail__timeUpdate(long jarg1, RibbonTrail jarg1_, float jarg2);
  public final static native String RibbonTrail_getMovableType(long jarg1, RibbonTrail jarg1_);
  public final static native long new_RibbonTrailFactory();
  public final static native void delete_RibbonTrailFactory(long jarg1);
  public final static native void RibbonTrailFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String RibbonTrailFactory_FACTORY_TYPE_NAME_get();
  public final static native void RibbonTrailFactory_destroyInstance(long jarg1, RibbonTrailFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long new_BillboardSet__SWIG_1(String jarg1, long jarg2, boolean jarg3);
  public final static native long new_BillboardSet__SWIG_2(String jarg1, long jarg2);
  public final static native long new_BillboardSet__SWIG_3(String jarg1);
  public final static native void delete_BillboardSet(long jarg1);
  public final static native long BillboardSet_createBillboard__SWIG_0(long jarg1, BillboardSet jarg1_, long jarg2, Vector3 jarg2_, long jarg3, ColourValue jarg3_);
  public final static native long BillboardSet_createBillboard__SWIG_1(long jarg1, BillboardSet jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long BillboardSet_createBillboard__SWIG_2(long jarg1, BillboardSet jarg1_, float jarg2, float jarg3, float jarg4, long jarg5, ColourValue jarg5_);
  public final static native long BillboardSet_createBillboard__SWIG_3(long jarg1, BillboardSet jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native int BillboardSet_getNumBillboards(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setAutoextend(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_getAutoextend(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setSortingEnabled(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_getSortingEnabled(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setPoolSize(long jarg1, BillboardSet jarg1_, long jarg2);
  public final static native long BillboardSet_getPoolSize(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_clear(long jarg1, BillboardSet jarg1_);
  public final static native long BillboardSet_getBillboard(long jarg1, BillboardSet jarg1_, long jarg2);
  public final static native void BillboardSet_removeBillboard__SWIG_0(long jarg1, BillboardSet jarg1_, long jarg2);
  public final static native void BillboardSet_removeBillboard__SWIG_1(long jarg1, BillboardSet jarg1_, long jarg2, Billboard jarg2_);
  public final static native void BillboardSet_setBillboardOrigin(long jarg1, BillboardSet jarg1_, int jarg2);
  public final static native int BillboardSet_getBillboardOrigin(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setBillboardRotationType(long jarg1, BillboardSet jarg1_, int jarg2);
  public final static native int BillboardSet_getBillboardRotationType(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setDefaultDimensions(long jarg1, BillboardSet jarg1_, float jarg2, float jarg3);
  public final static native void BillboardSet_setDefaultWidth(long jarg1, BillboardSet jarg1_, float jarg2);
  public final static native float BillboardSet_getDefaultWidth(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setDefaultHeight(long jarg1, BillboardSet jarg1_, float jarg2);
  public final static native float BillboardSet_getDefaultHeight(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setMaterialName__SWIG_0(long jarg1, BillboardSet jarg1_, String jarg2, String jarg3);
  public final static native void BillboardSet_setMaterialName__SWIG_1(long jarg1, BillboardSet jarg1_, String jarg2);
  public final static native String BillboardSet_getMaterialName(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet__notifyCurrentCamera(long jarg1, BillboardSet jarg1_, long jarg2, Camera jarg2_);
  public final static native void BillboardSet_beginBillboards__SWIG_0(long jarg1, BillboardSet jarg1_, long jarg2);
  public final static native void BillboardSet_beginBillboards__SWIG_1(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_injectBillboard(long jarg1, BillboardSet jarg1_, long jarg2, Billboard jarg2_);
  public final static native void BillboardSet_endBillboards(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setBounds(long jarg1, BillboardSet jarg1_, long jarg2, AxisAlignedBox jarg2_, float jarg3);
  public final static native long BillboardSet_getBoundingBox(long jarg1, BillboardSet jarg1_);
  public final static native float BillboardSet_getBoundingRadius(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet__updateRenderQueue(long jarg1, BillboardSet jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native long BillboardSet_getMaterial(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setMaterial(long jarg1, BillboardSet jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void BillboardSet_getRenderOperation(long jarg1, BillboardSet jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void BillboardSet_getWorldTransforms(long jarg1, BillboardSet jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void BillboardSet__notifyBillboardResized(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet__notifyBillboardRotated(long jarg1, BillboardSet jarg1_);
  public final static native boolean BillboardSet_getCullIndividually(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setCullIndividually(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native void BillboardSet_setBillboardType(long jarg1, BillboardSet jarg1_, int jarg2);
  public final static native int BillboardSet_getBillboardType(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setCommonDirection(long jarg1, BillboardSet jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long BillboardSet_getCommonDirection(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setCommonUpVector(long jarg1, BillboardSet jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long BillboardSet_getCommonUpVector(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setUseAccurateFacing(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_getUseAccurateFacing(long jarg1, BillboardSet jarg1_);
  public final static native String BillboardSet_getMovableType(long jarg1, BillboardSet jarg1_);
  public final static native float BillboardSet_getSquaredViewDepth(long jarg1, BillboardSet jarg1_, long jarg2, Camera jarg2_);
  public final static native void BillboardSet__updateBounds(long jarg1, BillboardSet jarg1_);
  public final static native long BillboardSet_getLights(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_visitRenderables__SWIG_0(long jarg1, BillboardSet jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void BillboardSet_visitRenderables__SWIG_1(long jarg1, BillboardSet jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void BillboardSet__sortBillboards(long jarg1, BillboardSet jarg1_, long jarg2, Camera jarg2_);
  public final static native int BillboardSet__getSortMode(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setBillboardsInWorldSpace(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_getBillboardsInWorldSpace(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setTextureCoords(long jarg1, BillboardSet jarg1_, long jarg2, int jarg3);
  public final static native void BillboardSet_setTextureStacksAndSlices(long jarg1, BillboardSet jarg1_, short jarg2, short jarg3);
  public final static native long BillboardSet_getTextureCoords(long jarg1, BillboardSet jarg1_, long jarg2);
  public final static native void BillboardSet_setPointRenderingEnabled(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_isPointRenderingEnabled(long jarg1, BillboardSet jarg1_);
  public final static native long BillboardSet_getTypeFlags(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_setAutoUpdate(long jarg1, BillboardSet jarg1_, boolean jarg2);
  public final static native boolean BillboardSet_getAutoUpdate(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet_notifyBillboardDataChanged(long jarg1, BillboardSet jarg1_);
  public final static native void BillboardSet__releaseManualHardwareResources(long jarg1, BillboardSet jarg1_);
  public final static native long new_BillboardSetFactory();
  public final static native void delete_BillboardSetFactory(long jarg1);
  public final static native void BillboardSetFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String BillboardSetFactory_FACTORY_TYPE_NAME_get();
  public final static native void BillboardSetFactory_destroyInstance(long jarg1, BillboardSetFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void delete_ShadowRenderable(long jarg1);
  public final static native void ShadowRenderable_setMaterial(long jarg1, ShadowRenderable jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native long ShadowRenderable_getMaterial(long jarg1, ShadowRenderable jarg1_);
  public final static native void ShadowRenderable_getRenderOperation(long jarg1, ShadowRenderable jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native long ShadowRenderable_getRenderOperationForUpdate(long jarg1, ShadowRenderable jarg1_);
  public final static native void ShadowRenderable_getWorldTransforms(long jarg1, ShadowRenderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native float ShadowRenderable_getSquaredViewDepth(long jarg1, ShadowRenderable jarg1_, long jarg2, Camera jarg2_);
  public final static native long ShadowRenderable_getLights(long jarg1, ShadowRenderable jarg1_);
  public final static native boolean ShadowRenderable_isLightCapSeparate(long jarg1, ShadowRenderable jarg1_);
  public final static native long ShadowRenderable_getLightCapRenderable(long jarg1, ShadowRenderable jarg1_);
  public final static native boolean ShadowRenderable_isVisible(long jarg1, ShadowRenderable jarg1_);
  public final static native void ShadowRenderable_rebindIndexBuffer(long jarg1, ShadowRenderable jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_);
  public final static native int SRF_INCLUDE_LIGHT_CAP_get();
  public final static native int SRF_INCLUDE_DARK_CAP_get();
  public final static native int SRF_EXTRUDE_TO_INFINITY_get();
  public final static native void delete_ShadowCaster(long jarg1);
  public final static native boolean ShadowCaster_getCastShadows(long jarg1, ShadowCaster jarg1_);
  public final static native long ShadowCaster_getEdgeList(long jarg1, ShadowCaster jarg1_);
  public final static native boolean ShadowCaster_hasEdgeList(long jarg1, ShadowCaster jarg1_);
  public final static native long ShadowCaster_getWorldBoundingBox__SWIG_0(long jarg1, ShadowCaster jarg1_, boolean jarg2);
  public final static native long ShadowCaster_getWorldBoundingBox__SWIG_1(long jarg1, ShadowCaster jarg1_);
  public final static native long ShadowCaster_getLightCapBounds(long jarg1, ShadowCaster jarg1_);
  public final static native long ShadowCaster_getDarkCapBounds(long jarg1, ShadowCaster jarg1_, long jarg2, Light jarg2_, float jarg3);
  public final static native long ShadowCaster_getShadowVolumeRenderableIterator__SWIG_0(long jarg1, ShadowCaster jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7, long jarg8);
  public final static native long ShadowCaster_getShadowVolumeRenderableIterator__SWIG_1(long jarg1, ShadowCaster jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7);
  public final static native void ShadowCaster_clearShadowRenderableList(long jarg1);
  public final static native void ShadowCaster_extrudeVertices(long jarg1, HardwareVertexBufferPtr jarg1_, long jarg2, long jarg3, Vector4 jarg3_, float jarg4);
  public final static native float ShadowCaster_getPointExtrusionDistance(long jarg1, ShadowCaster jarg1_, long jarg2, Light jarg2_);
  public final static native long new_MovableObject_Listener();
  public final static native void delete_MovableObject_Listener(long jarg1);
  public final static native void MovableObject_Listener_objectDestroyed(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectDestroyedSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectAttached(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectAttachedSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectDetached(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectDetachedSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectMoved(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_objectMovedSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native boolean MovableObject_Listener_objectRendering(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_, long jarg3, Camera jarg3_);
  public final static native boolean MovableObject_Listener_objectRenderingSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_, long jarg3, Camera jarg3_);
  public final static native long MovableObject_Listener_objectQueryLights(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long MovableObject_Listener_objectQueryLightsSwigExplicitListener(long jarg1, MovableObject.Listener jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void MovableObject_Listener_director_connect(MovableObject.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MovableObject_Listener_change_ownership(MovableObject.Listener obj, long cptr, boolean take_or_release);
  public final static native void delete_MovableObject(long jarg1);
  public final static native void MovableObject__notifyCreator(long jarg1, MovableObject jarg1_, long jarg2, MovableObjectFactory jarg2_);
  public final static native long MovableObject__getCreator(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__notifyManager(long jarg1, MovableObject jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long MovableObject__getManager(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__releaseManualHardwareResources(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__restoreManualHardwareResources(long jarg1, MovableObject jarg1_);
  public final static native String MovableObject_getName(long jarg1, MovableObject jarg1_);
  public final static native String MovableObject_getMovableType(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getParentNode(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getParentSceneNode(long jarg1, MovableObject jarg1_);
  public final static native boolean MovableObject_isParentTagPoint(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__notifyAttached__SWIG_0(long jarg1, MovableObject jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void MovableObject__notifyAttached__SWIG_1(long jarg1, MovableObject jarg1_, long jarg2, Node jarg2_);
  public final static native boolean MovableObject_isAttached(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_detachFromParent(long jarg1, MovableObject jarg1_);
  public final static native boolean MovableObject_isInScene(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__notifyMoved(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__notifyCurrentCamera(long jarg1, MovableObject jarg1_, long jarg2, Camera jarg2_);
  public final static native long MovableObject_getBoundingBox(long jarg1, MovableObject jarg1_);
  public final static native float MovableObject_getBoundingRadius(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getWorldBoundingBox__SWIG_0(long jarg1, MovableObject jarg1_, boolean jarg2);
  public final static native long MovableObject_getWorldBoundingBox__SWIG_1(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getWorldBoundingSphere__SWIG_0(long jarg1, MovableObject jarg1_, boolean jarg2);
  public final static native long MovableObject_getWorldBoundingSphere__SWIG_1(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject__updateRenderQueue(long jarg1, MovableObject jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void MovableObject_setVisible(long jarg1, MovableObject jarg1_, boolean jarg2);
  public final static native boolean MovableObject_getVisible(long jarg1, MovableObject jarg1_);
  public final static native boolean MovableObject_isVisible(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setRenderingDistance(long jarg1, MovableObject jarg1_, float jarg2);
  public final static native float MovableObject_getRenderingDistance(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setRenderingMinPixelSize(long jarg1, MovableObject jarg1_, float jarg2);
  public final static native float MovableObject_getRenderingMinPixelSize(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getUserObjectBindings__SWIG_0(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setRenderQueueGroup(long jarg1, MovableObject jarg1_, short jarg2);
  public final static native void MovableObject_setRenderQueueGroupAndPriority(long jarg1, MovableObject jarg1_, short jarg2, int jarg3);
  public final static native short MovableObject_getRenderQueueGroup(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject__getParentNodeFullTransform(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setQueryFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native void MovableObject_addQueryFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native void MovableObject_removeQueryFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native long MovableObject_getQueryFlags(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setDefaultQueryFlags(long jarg1);
  public final static native long MovableObject_getDefaultQueryFlags();
  public final static native void MovableObject_setVisibilityFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native void MovableObject_addVisibilityFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native void MovableObject_removeVisibilityFlags(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native long MovableObject_getVisibilityFlags(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setDefaultVisibilityFlags(long jarg1);
  public final static native long MovableObject_getDefaultVisibilityFlags();
  public final static native void MovableObject_setListener(long jarg1, MovableObject jarg1_, long jarg2, MovableObject.Listener jarg2_);
  public final static native long MovableObject_getListener(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_queryLights(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getLightMask(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_setLightMask(long jarg1, MovableObject jarg1_, long jarg2);
  public final static native long MovableObject__getLightList(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getEdgeList(long jarg1, MovableObject jarg1_);
  public final static native boolean MovableObject_hasEdgeList(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getShadowVolumeRenderableIterator__SWIG_0(long jarg1, MovableObject jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7, long jarg8);
  public final static native long MovableObject_getShadowVolumeRenderableIterator__SWIG_1(long jarg1, MovableObject jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7);
  public final static native long MovableObject_getLightCapBounds(long jarg1, MovableObject jarg1_);
  public final static native long MovableObject_getDarkCapBounds(long jarg1, MovableObject jarg1_, long jarg2, Light jarg2_, float jarg3);
  public final static native void MovableObject_setCastShadows(long jarg1, MovableObject jarg1_, boolean jarg2);
  public final static native boolean MovableObject_getCastShadows(long jarg1, MovableObject jarg1_);
  public final static native boolean MovableObject_getReceivesShadows(long jarg1, MovableObject jarg1_);
  public final static native float MovableObject_getPointExtrusionDistance(long jarg1, MovableObject jarg1_, long jarg2, Light jarg2_);
  public final static native long MovableObject_getTypeFlags(long jarg1, MovableObject jarg1_);
  public final static native void MovableObject_visitRenderables__SWIG_0(long jarg1, MovableObject jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void MovableObject_visitRenderables__SWIG_1(long jarg1, MovableObject jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void MovableObject_setDebugDisplayEnabled(long jarg1, MovableObject jarg1_, boolean jarg2);
  public final static native boolean MovableObject_isDebugDisplayEnabled(long jarg1, MovableObject jarg1_);
  public final static native void delete_MovableObjectFactory(long jarg1);
  public final static native long MovableObjectFactory_createInstance__SWIG_0(long jarg1, MovableObjectFactory jarg1_, String jarg2, long jarg3, SceneManager jarg3_, long jarg4);
  public final static native long MovableObjectFactory_createInstance__SWIG_1(long jarg1, MovableObjectFactory jarg1_, String jarg2, long jarg3, SceneManager jarg3_);
  public final static native void MovableObjectFactory_destroyInstance(long jarg1, MovableObjectFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native boolean MovableObjectFactory_requestTypeFlags(long jarg1, MovableObjectFactory jarg1_);
  public final static native void MovableObjectFactory__notifyTypeFlags(long jarg1, MovableObjectFactory jarg1_, long jarg2);
  public final static native long MovableObjectFactory_getTypeFlags(long jarg1, MovableObjectFactory jarg1_);
  public final static native long new_MovablePlane__SWIG_0(String jarg1);
  public final static native long new_MovablePlane__SWIG_1(long jarg1, Plane jarg1_);
  public final static native long new_MovablePlane__SWIG_2(long jarg1, Vector3 jarg1_, float jarg2);
  public final static native long new_MovablePlane__SWIG_3(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long new_MovablePlane__SWIG_4(long jarg1, Vector3 jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void delete_MovablePlane(long jarg1);
  public final static native void MovablePlane__notifyCurrentCamera(long jarg1, MovablePlane jarg1_, long jarg2, Camera jarg2_);
  public final static native long MovablePlane_getBoundingBox(long jarg1, MovablePlane jarg1_);
  public final static native float MovablePlane_getBoundingRadius(long jarg1, MovablePlane jarg1_);
  public final static native void MovablePlane__updateRenderQueue(long jarg1, MovablePlane jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native String MovablePlane_getMovableType(long jarg1, MovablePlane jarg1_);
  public final static native long MovablePlane__getDerivedPlane(long jarg1, MovablePlane jarg1_);
  public final static native void MovablePlane_visitRenderables__SWIG_0(long jarg1, MovablePlane jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void MovablePlane_visitRenderables__SWIG_1(long jarg1, MovablePlane jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void Light_tempSquareDist_set(long jarg1, Light jarg1_, float jarg2);
  public final static native float Light_tempSquareDist_get(long jarg1, Light jarg1_);
  public final static native void Light__calcTempSquareDist(long jarg1, Light jarg1_, long jarg2, Vector3 jarg2_);
  public final static native int Light_LT_POINT_get();
  public final static native int Light_LT_DIRECTIONAL_get();
  public final static native int Light_LT_SPOTLIGHT_get();
  public final static native long new_Light__SWIG_0();
  public final static native long new_Light__SWIG_1(String jarg1);
  public final static native void delete_Light(long jarg1);
  public final static native void Light_setType(long jarg1, Light jarg1_, int jarg2);
  public final static native void Light_setDiffuseColour__SWIG_0(long jarg1, Light jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Light_setDiffuseColour__SWIG_1(long jarg1, Light jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Light_getDiffuseColour(long jarg1, Light jarg1_);
  public final static native void Light_setSpecularColour__SWIG_0(long jarg1, Light jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Light_setSpecularColour__SWIG_1(long jarg1, Light jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Light_getSpecularColour(long jarg1, Light jarg1_);
  public final static native void Light_setAttenuation(long jarg1, Light jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native float Light_getAttenuationRange(long jarg1, Light jarg1_);
  public final static native float Light_getAttenuationConstant(long jarg1, Light jarg1_);
  public final static native float Light_getAttenuationLinear(long jarg1, Light jarg1_);
  public final static native float Light_getAttenuationQuadric(long jarg1, Light jarg1_);
  public final static native void Light_setDirection__SWIG_0(long jarg1, Light jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Light_setDirection__SWIG_1(long jarg1, Light jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Light_getDirection(long jarg1, Light jarg1_);
  public final static native void Light_setSpotlightRange__SWIG_0(long jarg1, Light jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_, float jarg4);
  public final static native void Light_setSpotlightRange__SWIG_1(long jarg1, Light jarg1_, long jarg2, Radian jarg2_, long jarg3, Radian jarg3_);
  public final static native long Light_getSpotlightInnerAngle(long jarg1, Light jarg1_);
  public final static native long Light_getSpotlightOuterAngle(long jarg1, Light jarg1_);
  public final static native float Light_getSpotlightFalloff(long jarg1, Light jarg1_);
  public final static native void Light_setSpotlightInnerAngle(long jarg1, Light jarg1_, long jarg2, Radian jarg2_);
  public final static native void Light_setSpotlightOuterAngle(long jarg1, Light jarg1_, long jarg2, Radian jarg2_);
  public final static native void Light_setSpotlightFalloff(long jarg1, Light jarg1_, float jarg2);
  public final static native void Light_setSpotlightNearClipDistance(long jarg1, Light jarg1_, float jarg2);
  public final static native float Light_getSpotlightNearClipDistance(long jarg1, Light jarg1_);
  public final static native void Light_setPowerScale(long jarg1, Light jarg1_, float jarg2);
  public final static native float Light_getPowerScale(long jarg1, Light jarg1_);
  public final static native void Light__notifyAttached__SWIG_0(long jarg1, Light jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void Light__notifyAttached__SWIG_1(long jarg1, Light jarg1_, long jarg2, Node jarg2_);
  public final static native void Light__notifyMoved(long jarg1, Light jarg1_);
  public final static native long Light_getBoundingBox(long jarg1, Light jarg1_);
  public final static native void Light__updateRenderQueue(long jarg1, Light jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native String Light_getMovableType(long jarg1, Light jarg1_);
  public final static native long Light_getDerivedPosition__SWIG_0(long jarg1, Light jarg1_, boolean jarg2);
  public final static native long Light_getDerivedPosition__SWIG_1(long jarg1, Light jarg1_);
  public final static native long Light_getDerivedDirection(long jarg1, Light jarg1_);
  public final static native void Light_setVisible(long jarg1, Light jarg1_, boolean jarg2);
  public final static native float Light_getBoundingRadius(long jarg1, Light jarg1_);
  public final static native long Light_getAs4DVector__SWIG_0(long jarg1, Light jarg1_, boolean jarg2);
  public final static native long Light_getAs4DVector__SWIG_1(long jarg1, Light jarg1_);
  public final static native long Light__getNearClipVolume(long jarg1, Light jarg1_, long jarg2, Camera jarg2_);
  public final static native long Light__getFrustumClipVolumes(long jarg1, Light jarg1_, long jarg2, Camera jarg2_);
  public final static native long Light_getTypeFlags(long jarg1, Light jarg1_);
  public final static native long Light_createAnimableValue(long jarg1, Light jarg1_, String jarg2);
  public final static native void Light_setCustomShadowCameraSetup(long jarg1, Light jarg1_, long jarg2, ShadowCameraSetupPtr jarg2_);
  public final static native void Light_resetCustomShadowCameraSetup(long jarg1, Light jarg1_);
  public final static native long Light_getCustomShadowCameraSetup(long jarg1, Light jarg1_);
  public final static native void Light_visitRenderables__SWIG_0(long jarg1, Light jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void Light_visitRenderables__SWIG_1(long jarg1, Light jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native long Light__getIndexInFrame(long jarg1, Light jarg1_);
  public final static native void Light__notifyIndexInFrame(long jarg1, Light jarg1_, long jarg2);
  public final static native void Light_setShadowFarDistance(long jarg1, Light jarg1_, float jarg2);
  public final static native void Light_resetShadowFarDistance(long jarg1, Light jarg1_);
  public final static native float Light_getShadowFarDistance(long jarg1, Light jarg1_);
  public final static native float Light_getShadowFarDistanceSquared(long jarg1, Light jarg1_);
  public final static native void Light_setShadowNearClipDistance(long jarg1, Light jarg1_, float jarg2);
  public final static native float Light_getShadowNearClipDistance(long jarg1, Light jarg1_);
  public final static native float Light__deriveShadowNearClipDistance(long jarg1, Light jarg1_, long jarg2, Camera jarg2_);
  public final static native void Light_setShadowFarClipDistance(long jarg1, Light jarg1_, float jarg2);
  public final static native float Light_getShadowFarClipDistance(long jarg1, Light jarg1_);
  public final static native float Light__deriveShadowFarClipDistance(long jarg1, Light jarg1_, long jarg2, Camera jarg2_);
  public final static native void Light__setCameraRelative(long jarg1, Light jarg1_, long jarg2, Camera jarg2_);
  public final static native void Light_setCustomParameter(long jarg1, Light jarg1_, int jarg2, long jarg3, Vector4 jarg3_);
  public final static native long Light_getCustomParameter(long jarg1, Light jarg1_, int jarg2);
  public final static native void Light__updateCustomGpuParameter(long jarg1, Light jarg1_, int jarg2, long jarg3, GpuProgramParameters.AutoConstantEntry jarg3_, long jarg4, GpuProgramParameters jarg4_);
  public final static native boolean Light_isInLightRange__SWIG_0(long jarg1, Light jarg1_, long jarg2, Sphere jarg2_);
  public final static native boolean Light_isInLightRange__SWIG_1(long jarg1, Light jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void delete_LightFactory(long jarg1);
  public final static native void LightFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String LightFactory_FACTORY_TYPE_NAME_get();
  public final static native void LightFactory_destroyInstance(long jarg1, LightFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long new_Node_Listener();
  public final static native void delete_Node_Listener(long jarg1);
  public final static native void Node_Listener_nodeUpdated(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeUpdatedSwigExplicitListener(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeDestroyed(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeDestroyedSwigExplicitListener(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeAttached(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeAttachedSwigExplicitListener(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeDetached(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_nodeDetachedSwigExplicitListener(long jarg1, Node.Listener jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_Listener_director_connect(Node.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Node_Listener_change_ownership(Node.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_Node_DebugRenderable(long jarg1, Node jarg1_);
  public final static native void delete_Node_DebugRenderable(long jarg1);
  public final static native long Node_DebugRenderable_getMaterial(long jarg1, Node.DebugRenderable jarg1_);
  public final static native void Node_DebugRenderable_getRenderOperation(long jarg1, Node.DebugRenderable jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void Node_DebugRenderable_getWorldTransforms(long jarg1, Node.DebugRenderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native float Node_DebugRenderable_getSquaredViewDepth(long jarg1, Node.DebugRenderable jarg1_, long jarg2, Camera jarg2_);
  public final static native long Node_DebugRenderable_getLights(long jarg1, Node.DebugRenderable jarg1_);
  public final static native void Node_DebugRenderable_setScaling(long jarg1, Node.DebugRenderable jarg1_, float jarg2);
  public final static native void delete_Node(long jarg1);
  public final static native String Node_getName(long jarg1, Node jarg1_);
  public final static native long Node_getParent(long jarg1, Node jarg1_);
  public final static native long Node_getOrientation(long jarg1, Node jarg1_);
  public final static native void Node_setOrientation__SWIG_0(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_);
  public final static native void Node_setOrientation__SWIG_1(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Node_resetOrientation(long jarg1, Node jarg1_);
  public final static native void Node_setPosition__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Node_setPosition__SWIG_1(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long Node_getPosition(long jarg1, Node jarg1_);
  public final static native void Node_setScale__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Node_setScale__SWIG_1(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long Node_getScale(long jarg1, Node jarg1_);
  public final static native void Node_setInheritOrientation(long jarg1, Node jarg1_, boolean jarg2);
  public final static native boolean Node_getInheritOrientation(long jarg1, Node jarg1_);
  public final static native void Node_setInheritScale(long jarg1, Node jarg1_, boolean jarg2);
  public final static native boolean Node_getInheritScale(long jarg1, Node jarg1_);
  public final static native void Node_scale__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Node_scale__SWIG_1(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Node_translate__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, int jarg3);
  public final static native void Node_translate__SWIG_1(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Node_translate__SWIG_2(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4, int jarg5);
  public final static native void Node_translate__SWIG_3(long jarg1, Node jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Node_translate__SWIG_4(long jarg1, Node jarg1_, long jarg2, Matrix3 jarg2_, long jarg3, Vector3 jarg3_, int jarg4);
  public final static native void Node_translate__SWIG_5(long jarg1, Node jarg1_, long jarg2, Matrix3 jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void Node_translate__SWIG_6(long jarg1, Node jarg1_, long jarg2, Matrix3 jarg2_, float jarg3, float jarg4, float jarg5, int jarg6);
  public final static native void Node_translate__SWIG_7(long jarg1, Node jarg1_, long jarg2, Matrix3 jarg2_, float jarg3, float jarg4, float jarg5);
  public final static native void Node_roll__SWIG_0(long jarg1, Node jarg1_, long jarg2, Radian jarg2_, int jarg3);
  public final static native void Node_roll__SWIG_1(long jarg1, Node jarg1_, long jarg2, Radian jarg2_);
  public final static native void Node_pitch__SWIG_0(long jarg1, Node jarg1_, long jarg2, Radian jarg2_, int jarg3);
  public final static native void Node_pitch__SWIG_1(long jarg1, Node jarg1_, long jarg2, Radian jarg2_);
  public final static native void Node_yaw__SWIG_0(long jarg1, Node jarg1_, long jarg2, Radian jarg2_, int jarg3);
  public final static native void Node_yaw__SWIG_1(long jarg1, Node jarg1_, long jarg2, Radian jarg2_);
  public final static native void Node_rotate__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Radian jarg3_, int jarg4);
  public final static native void Node_rotate__SWIG_1(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Radian jarg3_);
  public final static native void Node_rotate__SWIG_2(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_, int jarg3);
  public final static native void Node_rotate__SWIG_3(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long Node_getLocalAxes(long jarg1, Node jarg1_);
  public final static native long Node_createChild__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Quaternion jarg3_);
  public final static native long Node_createChild__SWIG_1(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Node_createChild__SWIG_2(long jarg1, Node jarg1_);
  public final static native long Node_createChild__SWIG_3(long jarg1, Node jarg1_, String jarg2, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native long Node_createChild__SWIG_4(long jarg1, Node jarg1_, String jarg2, long jarg3, Vector3 jarg3_);
  public final static native long Node_createChild__SWIG_5(long jarg1, Node jarg1_, String jarg2);
  public final static native void Node_addChild(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native int Node_numChildren(long jarg1, Node jarg1_);
  public final static native long Node_getChild__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getChild__SWIG_1(long jarg1, Node jarg1_, String jarg2);
  public final static native long Node_getChildIterator__SWIG_0(long jarg1, Node jarg1_);
  public final static native long Node_getChildren(long jarg1, Node jarg1_);
  public final static native long Node_removeChild__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_removeChild__SWIG_1(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native long Node_removeChild__SWIG_2(long jarg1, Node jarg1_, String jarg2);
  public final static native void Node_removeAllChildren(long jarg1, Node jarg1_);
  public final static native void Node__setDerivedPosition(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void Node__setDerivedOrientation(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long Node__getDerivedOrientation(long jarg1, Node jarg1_);
  public final static native long Node__getDerivedPosition(long jarg1, Node jarg1_);
  public final static native long Node__getDerivedScale(long jarg1, Node jarg1_);
  public final static native long Node__getFullTransform(long jarg1, Node jarg1_);
  public final static native void Node__update(long jarg1, Node jarg1_, boolean jarg2, boolean jarg3);
  public final static native void Node_setListener(long jarg1, Node jarg1_, long jarg2, Node.Listener jarg2_);
  public final static native long Node_getListener(long jarg1, Node jarg1_);
  public final static native void Node_setInitialState(long jarg1, Node jarg1_);
  public final static native void Node_resetToInitialState(long jarg1, Node jarg1_);
  public final static native long Node_getInitialPosition(long jarg1, Node jarg1_);
  public final static native long Node_convertWorldToLocalPosition(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Node_convertLocalToWorldPosition(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Node_convertWorldToLocalDirection(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, boolean jarg3);
  public final static native long Node_convertLocalToWorldDirection(long jarg1, Node jarg1_, long jarg2, Vector3 jarg2_, boolean jarg3);
  public final static native long Node_convertWorldToLocalOrientation(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long Node_convertLocalToWorldOrientation(long jarg1, Node jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long Node_getInitialOrientation(long jarg1, Node jarg1_);
  public final static native long Node_getInitialScale(long jarg1, Node jarg1_);
  public final static native float Node_getSquaredViewDepth(long jarg1, Node jarg1_, long jarg2, Camera jarg2_);
  public final static native void Node_needUpdate__SWIG_0(long jarg1, Node jarg1_, boolean jarg2);
  public final static native void Node_needUpdate__SWIG_1(long jarg1, Node jarg1_);
  public final static native void Node_requestUpdate__SWIG_0(long jarg1, Node jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void Node_requestUpdate__SWIG_1(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_cancelUpdate(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native long Node_getDebugRenderable(long jarg1, Node jarg1_, float jarg2);
  public final static native void Node_queueNeedUpdate(long jarg1, Node jarg1_);
  public final static native void Node_processQueuedUpdates();
  public final static native long Node_getUserObjectBindings__SWIG_0(long jarg1, Node jarg1_);
  public final static native long new_Bone__SWIG_0(int jarg1, long jarg2, Skeleton jarg2_);
  public final static native long new_Bone__SWIG_1(String jarg1, int jarg2, long jarg3, Skeleton jarg3_);
  public final static native void delete_Bone(long jarg1);
  public final static native long Bone_createChild__SWIG_0(long jarg1, Bone jarg1_, int jarg2, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native long Bone_createChild__SWIG_1(long jarg1, Bone jarg1_, int jarg2, long jarg3, Vector3 jarg3_);
  public final static native long Bone_createChild__SWIG_2(long jarg1, Bone jarg1_, int jarg2);
  public final static native int Bone_getHandle(long jarg1, Bone jarg1_);
  public final static native void Bone_setBindingPose(long jarg1, Bone jarg1_);
  public final static native void Bone_reset(long jarg1, Bone jarg1_);
  public final static native void Bone_setManuallyControlled(long jarg1, Bone jarg1_, boolean jarg2);
  public final static native boolean Bone_isManuallyControlled(long jarg1, Bone jarg1_);
  public final static native void Bone__getOffsetTransform(long jarg1, Bone jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long Bone__getBindingPoseInverseScale(long jarg1, Bone jarg1_);
  public final static native long Bone__getBindingPoseInversePosition(long jarg1, Bone jarg1_);
  public final static native long Bone__getBindingPoseInverseOrientation(long jarg1, Bone jarg1_);
  public final static native void Bone_needUpdate__SWIG_0(long jarg1, Bone jarg1_, boolean jarg2);
  public final static native void Bone_needUpdate__SWIG_1(long jarg1, Bone jarg1_);
  public final static native long new_SceneNode__SWIG_0(long jarg1, SceneManager jarg1_);
  public final static native long new_SceneNode__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void delete_SceneNode(long jarg1);
  public final static native void SceneNode_attachObject(long jarg1, SceneNode jarg1_, long jarg2, MovableObject jarg2_);
  public final static native int SceneNode_numAttachedObjects(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getAttachedObject__SWIG_0(long jarg1, SceneNode jarg1_, int jarg2);
  public final static native long SceneNode_getAttachedObject__SWIG_1(long jarg1, SceneNode jarg1_, String jarg2);
  public final static native long SceneNode_detachObject__SWIG_0(long jarg1, SceneNode jarg1_, int jarg2);
  public final static native void SceneNode_detachObject__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long SceneNode_detachObject__SWIG_2(long jarg1, SceneNode jarg1_, String jarg2);
  public final static native void SceneNode_detachAllObjects(long jarg1, SceneNode jarg1_);
  public final static native boolean SceneNode_isInSceneGraph(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode__notifyRootNode(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode__update(long jarg1, SceneNode jarg1_, boolean jarg2, boolean jarg3);
  public final static native void SceneNode__updateBounds(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode__findVisibleObjects__SWIG_0(long jarg1, SceneNode jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, VisibleObjectsBoundsInfo jarg4_, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native void SceneNode__findVisibleObjects__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, VisibleObjectsBoundsInfo jarg4_, boolean jarg5, boolean jarg6);
  public final static native void SceneNode__findVisibleObjects__SWIG_2(long jarg1, SceneNode jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, VisibleObjectsBoundsInfo jarg4_, boolean jarg5);
  public final static native void SceneNode__findVisibleObjects__SWIG_3(long jarg1, SceneNode jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, VisibleObjectsBoundsInfo jarg4_);
  public final static native long SceneNode__getWorldAABB(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getAttachedObjectIterator__SWIG_0(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getAttachedObjects(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getCreator(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode_removeAndDestroyChild__SWIG_0(long jarg1, SceneNode jarg1_, String jarg2);
  public final static native void SceneNode_removeAndDestroyChild__SWIG_1(long jarg1, SceneNode jarg1_, int jarg2);
  public final static native void SceneNode_removeAndDestroyChild__SWIG_2(long jarg1, SceneNode jarg1_, long jarg2, SceneNode jarg2_);
  public final static native void SceneNode_removeAndDestroyAllChildren(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode_showBoundingBox(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native void SceneNode_hideBoundingBox(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native void SceneNode__addBoundingBoxToQueue(long jarg1, SceneNode jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native boolean SceneNode_getShowBoundingBox(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_createChildSceneNode__SWIG_0(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Quaternion jarg3_);
  public final static native long SceneNode_createChildSceneNode__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long SceneNode_createChildSceneNode__SWIG_2(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_createChildSceneNode__SWIG_3(long jarg1, SceneNode jarg1_, String jarg2, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native long SceneNode_createChildSceneNode__SWIG_4(long jarg1, SceneNode jarg1_, String jarg2, long jarg3, Vector3 jarg3_);
  public final static native long SceneNode_createChildSceneNode__SWIG_5(long jarg1, SceneNode jarg1_, String jarg2);
  public final static native void SceneNode_findLights__SWIG_0(long jarg1, SceneNode jarg1_, long jarg2, float jarg3, long jarg4);
  public final static native void SceneNode_findLights__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, float jarg3);
  public final static native void SceneNode_setFixedYawAxis__SWIG_0(long jarg1, SceneNode jarg1_, boolean jarg2, long jarg3, Vector3 jarg3_);
  public final static native void SceneNode_setFixedYawAxis__SWIG_1(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native void SceneNode_yaw__SWIG_0(long jarg1, SceneNode jarg1_, long jarg2, Radian jarg2_, int jarg3);
  public final static native void SceneNode_yaw__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, Radian jarg2_);
  public final static native void SceneNode_setDirection__SWIG_0(long jarg1, SceneNode jarg1_, float jarg2, float jarg3, float jarg4, int jarg5, long jarg6, Vector3 jarg6_);
  public final static native void SceneNode_setDirection__SWIG_1(long jarg1, SceneNode jarg1_, float jarg2, float jarg3, float jarg4, int jarg5);
  public final static native void SceneNode_setDirection__SWIG_2(long jarg1, SceneNode jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void SceneNode_setDirection__SWIG_3(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_, int jarg3, long jarg4, Vector3 jarg4_);
  public final static native void SceneNode_setDirection__SWIG_4(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_, int jarg3);
  public final static native void SceneNode_setDirection__SWIG_5(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void SceneNode_lookAt__SWIG_0(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_, int jarg3, long jarg4, Vector3 jarg4_);
  public final static native void SceneNode_lookAt__SWIG_1(long jarg1, SceneNode jarg1_, long jarg2, Vector3 jarg2_, int jarg3);
  public final static native void SceneNode_setAutoTracking__SWIG_0(long jarg1, SceneNode jarg1_, boolean jarg2, long jarg3, SceneNode jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_);
  public final static native void SceneNode_setAutoTracking__SWIG_1(long jarg1, SceneNode jarg1_, boolean jarg2, long jarg3, SceneNode jarg3_, long jarg4, Vector3 jarg4_);
  public final static native void SceneNode_setAutoTracking__SWIG_2(long jarg1, SceneNode jarg1_, boolean jarg2, long jarg3, SceneNode jarg3_);
  public final static native void SceneNode_setAutoTracking__SWIG_3(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native long SceneNode_getAutoTrackTarget(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getAutoTrackOffset(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getAutoTrackLocalDirection(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode__autoTrack(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getParentSceneNode(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode_setVisible__SWIG_0(long jarg1, SceneNode jarg1_, boolean jarg2, boolean jarg3);
  public final static native void SceneNode_setVisible__SWIG_1(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native void SceneNode_flipVisibility__SWIG_0(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native void SceneNode_flipVisibility__SWIG_1(long jarg1, SceneNode jarg1_);
  public final static native void SceneNode_setDebugDisplayEnabled__SWIG_0(long jarg1, SceneNode jarg1_, boolean jarg2, boolean jarg3);
  public final static native void SceneNode_setDebugDisplayEnabled__SWIG_1(long jarg1, SceneNode jarg1_, boolean jarg2);
  public final static native long SceneNode_getDebugRenderable__SWIG_0(long jarg1, SceneNode jarg1_);
  public final static native long SceneNode_getDebugRenderable__SWIG_1_0(long jarg1, SceneNode jarg1_, float jarg2);
  public final static native long new_ShadowCameraSetupPtr__SWIG_1();
  public final static native long new_ShadowCameraSetupPtr__SWIG_2(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native void delete_ShadowCameraSetupPtr(long jarg1);
  public final static native long ShadowCameraSetupPtr___ref__(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native long ShadowCameraSetupPtr___deref__(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native long ShadowCameraSetupPtr_get(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native boolean ShadowCameraSetupPtr_unique(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native int ShadowCameraSetupPtr_use_count(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native void ShadowCameraSetupPtr_reset__SWIG_0(long jarg1, ShadowCameraSetupPtr jarg1_);
  public final static native void ShadowCameraSetupPtr_reset__SWIG_1(long jarg1, ShadowCameraSetupPtr jarg1_, long jarg2, ShadowCameraSetup jarg2_);
  public final static native void ShadowCameraSetupPtr_getShadowCamera(long jarg1, ShadowCameraSetupPtr jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native void ShadowCameraSetup_getShadowCamera(long jarg1, ShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native void delete_ShadowCameraSetup(long jarg1);
  public final static native long new_DefaultShadowCameraSetup();
  public final static native void delete_DefaultShadowCameraSetup(long jarg1);
  public final static native void DefaultShadowCameraSetup_getShadowCamera(long jarg1, DefaultShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native long new_FocusedShadowCameraSetup();
  public final static native void delete_FocusedShadowCameraSetup(long jarg1);
  public final static native void FocusedShadowCameraSetup_getShadowCamera(long jarg1, FocusedShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native void FocusedShadowCameraSetup_setUseAggressiveFocusRegion(long jarg1, FocusedShadowCameraSetup jarg1_, boolean jarg2);
  public final static native boolean FocusedShadowCameraSetup_getUseAggressiveFocusRegion(long jarg1, FocusedShadowCameraSetup jarg1_);
  public final static native long new_LiSPSMShadowCameraSetup();
  public final static native void delete_LiSPSMShadowCameraSetup(long jarg1);
  public final static native void LiSPSMShadowCameraSetup_getShadowCamera(long jarg1, LiSPSMShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native void LiSPSMShadowCameraSetup_setOptimalAdjustFactor(long jarg1, LiSPSMShadowCameraSetup jarg1_, float jarg2);
  public final static native float LiSPSMShadowCameraSetup_getOptimalAdjustFactor(long jarg1, LiSPSMShadowCameraSetup jarg1_);
  public final static native void LiSPSMShadowCameraSetup_setUseSimpleOptimalAdjust(long jarg1, LiSPSMShadowCameraSetup jarg1_, boolean jarg2);
  public final static native boolean LiSPSMShadowCameraSetup_getUseSimpleOptimalAdjust(long jarg1, LiSPSMShadowCameraSetup jarg1_);
  public final static native void LiSPSMShadowCameraSetup_setCameraLightDirectionThreshold(long jarg1, LiSPSMShadowCameraSetup jarg1_, long jarg2, Degree jarg2_);
  public final static native long LiSPSMShadowCameraSetup_getCameraLightDirectionThreshold(long jarg1, LiSPSMShadowCameraSetup jarg1_);
  public final static native long new_PlaneOptimalShadowCameraSetup(long jarg1, MovablePlane jarg1_);
  public final static native void delete_PlaneOptimalShadowCameraSetup(long jarg1);
  public final static native void PlaneOptimalShadowCameraSetup_getShadowCamera(long jarg1, PlaneOptimalShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native long new_PSSMShadowCameraSetup();
  public final static native void delete_PSSMShadowCameraSetup(long jarg1);
  public final static native void PSSMShadowCameraSetup_calculateSplitPoints__SWIG_0(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void PSSMShadowCameraSetup_calculateSplitPoints__SWIG_1(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2, float jarg3, float jarg4);
  public final static native void PSSMShadowCameraSetup_setSplitPoints(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2);
  public final static native void PSSMShadowCameraSetup_setOptimalAdjustFactor(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2, float jarg3);
  public final static native void PSSMShadowCameraSetup_setSplitPadding(long jarg1, PSSMShadowCameraSetup jarg1_, float jarg2);
  public final static native float PSSMShadowCameraSetup_getSplitPadding(long jarg1, PSSMShadowCameraSetup jarg1_);
  public final static native long PSSMShadowCameraSetup_getSplitCount(long jarg1, PSSMShadowCameraSetup jarg1_);
  public final static native void PSSMShadowCameraSetup_getShadowCamera(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_, long jarg4, Viewport jarg4_, long jarg5, Light jarg5_, long jarg6, Camera jarg6_, long jarg7);
  public final static native long PSSMShadowCameraSetup_getSplitPoints(long jarg1, PSSMShadowCameraSetup jarg1_);
  public final static native float PSSMShadowCameraSetup_getOptimalAdjustFactor__SWIG_0(long jarg1, PSSMShadowCameraSetup jarg1_, long jarg2);
  public final static native float PSSMShadowCameraSetup_getOptimalAdjustFactor__SWIG_1(long jarg1, PSSMShadowCameraSetup jarg1_);
  public final static native int OR_DEGREE_0_get();
  public final static native int OR_DEGREE_90_get();
  public final static native int OR_DEGREE_180_get();
  public final static native int OR_DEGREE_270_get();
  public final static native int OR_PORTRAIT_get();
  public final static native int OR_LANDSCAPERIGHT_get();
  public final static native int OR_LANDSCAPELEFT_get();
  public final static native int FRUSTUM_PLANE_NEAR_get();
  public final static native int FRUSTUM_PLANE_FAR_get();
  public final static native int FRUSTUM_PLANE_LEFT_get();
  public final static native int FRUSTUM_PLANE_RIGHT_get();
  public final static native int FRUSTUM_PLANE_TOP_get();
  public final static native int FRUSTUM_PLANE_BOTTOM_get();
  public final static native long new_Frustum__SWIG_0(String jarg1);
  public final static native long new_Frustum__SWIG_1();
  public final static native void delete_Frustum(long jarg1);
  public final static native void Frustum_setFOVy(long jarg1, Frustum jarg1_, long jarg2, Radian jarg2_);
  public final static native long Frustum_getFOVy(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setNearClipDistance(long jarg1, Frustum jarg1_, float jarg2);
  public final static native float Frustum_getNearClipDistance(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setFarClipDistance(long jarg1, Frustum jarg1_, float jarg2);
  public final static native float Frustum_getFarClipDistance(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setAspectRatio(long jarg1, Frustum jarg1_, float jarg2);
  public final static native float Frustum_getAspectRatio(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setFrustumOffset__SWIG_0(long jarg1, Frustum jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void Frustum_setFrustumOffset__SWIG_1(long jarg1, Frustum jarg1_, float jarg2, float jarg3);
  public final static native void Frustum_setFrustumOffset__SWIG_2(long jarg1, Frustum jarg1_, float jarg2);
  public final static native void Frustum_setFrustumOffset__SWIG_3(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getFrustumOffset(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setFocalLength__SWIG_0(long jarg1, Frustum jarg1_, float jarg2);
  public final static native void Frustum_setFocalLength__SWIG_1(long jarg1, Frustum jarg1_);
  public final static native float Frustum_getFocalLength(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setFrustumExtents(long jarg1, Frustum jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Frustum_resetFrustumExtents(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getFrustumExtents(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getProjectionMatrixRS(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getProjectionMatrixWithRSDepth(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getProjectionMatrix(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getViewMatrix(long jarg1, Frustum jarg1_);
  public final static native void Frustum_calcViewMatrixRelative(long jarg1, Frustum jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Matrix4 jarg3_);
  public final static native void Frustum_setCustomViewMatrix__SWIG_0(long jarg1, Frustum jarg1_, boolean jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void Frustum_setCustomViewMatrix__SWIG_1(long jarg1, Frustum jarg1_, boolean jarg2);
  public final static native boolean Frustum_isCustomViewMatrixEnabled(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setCustomProjectionMatrix__SWIG_0(long jarg1, Frustum jarg1_, boolean jarg2, long jarg3, Matrix4 jarg3_);
  public final static native void Frustum_setCustomProjectionMatrix__SWIG_1(long jarg1, Frustum jarg1_, boolean jarg2);
  public final static native boolean Frustum_isCustomProjectionMatrixEnabled(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getFrustumPlanes(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getFrustumPlane(long jarg1, Frustum jarg1_, int jarg2);
  public final static native boolean Frustum_isVisible__SWIG_0_0(long jarg1, Frustum jarg1_);
  public final static native boolean Frustum_isVisible__SWIG_1(long jarg1, Frustum jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3);
  public final static native boolean Frustum_isVisible__SWIG_2(long jarg1, Frustum jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean Frustum_isVisible__SWIG_3(long jarg1, Frustum jarg1_, long jarg2, Sphere jarg2_, long jarg3);
  public final static native boolean Frustum_isVisible__SWIG_4(long jarg1, Frustum jarg1_, long jarg2, Sphere jarg2_);
  public final static native boolean Frustum_isVisible__SWIG_5(long jarg1, Frustum jarg1_, long jarg2, Vector3 jarg2_, long jarg3);
  public final static native boolean Frustum_isVisible__SWIG_6(long jarg1, Frustum jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Frustum_getTypeFlags(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getBoundingBox(long jarg1, Frustum jarg1_);
  public final static native float Frustum_getBoundingRadius(long jarg1, Frustum jarg1_);
  public final static native void Frustum__updateRenderQueue(long jarg1, Frustum jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native String Frustum_getMovableType(long jarg1, Frustum jarg1_);
  public final static native void Frustum__notifyCurrentCamera(long jarg1, Frustum jarg1_, long jarg2, Camera jarg2_);
  public final static native void Frustum_setMaterial(long jarg1, Frustum jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native long Frustum_getMaterial(long jarg1, Frustum jarg1_);
  public final static native void Frustum_getRenderOperation(long jarg1, Frustum jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void Frustum_getWorldTransforms(long jarg1, Frustum jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native float Frustum_getSquaredViewDepth(long jarg1, Frustum jarg1_, long jarg2, Camera jarg2_);
  public final static native long Frustum_getLights(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getWorldSpaceCorners(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setProjectionType(long jarg1, Frustum jarg1_, int jarg2);
  public final static native int Frustum_getProjectionType(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setOrthoWindow(long jarg1, Frustum jarg1_, float jarg2, float jarg3);
  public final static native void Frustum_setOrthoWindowHeight(long jarg1, Frustum jarg1_, float jarg2);
  public final static native void Frustum_setOrthoWindowWidth(long jarg1, Frustum jarg1_, float jarg2);
  public final static native float Frustum_getOrthoWindowHeight(long jarg1, Frustum jarg1_);
  public final static native float Frustum_getOrthoWindowWidth(long jarg1, Frustum jarg1_);
  public final static native void Frustum_enableReflection__SWIG_0(long jarg1, Frustum jarg1_, long jarg2, Plane jarg2_);
  public final static native void Frustum_enableReflection__SWIG_1(long jarg1, Frustum jarg1_, long jarg2, MovablePlane jarg2_);
  public final static native void Frustum_disableReflection(long jarg1, Frustum jarg1_);
  public final static native boolean Frustum_isReflected(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getReflectionMatrix(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getReflectionPlane(long jarg1, Frustum jarg1_);
  public final static native boolean Frustum_projectSphere(long jarg1, Frustum jarg1_, long jarg2, Sphere jarg2_, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void Frustum_enableCustomNearClipPlane__SWIG_0(long jarg1, Frustum jarg1_, long jarg2, MovablePlane jarg2_);
  public final static native void Frustum_enableCustomNearClipPlane__SWIG_1(long jarg1, Frustum jarg1_, long jarg2, Plane jarg2_);
  public final static native void Frustum_disableCustomNearClipPlane(long jarg1, Frustum jarg1_);
  public final static native boolean Frustum_isCustomNearClipPlaneEnabled(long jarg1, Frustum jarg1_);
  public final static native void Frustum_visitRenderables__SWIG_0(long jarg1, Frustum jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void Frustum_visitRenderables__SWIG_1(long jarg1, Frustum jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native float Frustum_INFINITE_FAR_PLANE_ADJUST_get();
  public final static native long Frustum_getPositionForViewUpdate(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getOrientationForViewUpdate(long jarg1, Frustum jarg1_);
  public final static native long Frustum_getPlaneBoundedVolume(long jarg1, Frustum jarg1_);
  public final static native void Frustum_setOrientationMode(long jarg1, Frustum jarg1_, int jarg2);
  public final static native int Frustum_getOrientationMode(long jarg1, Frustum jarg1_);
  public final static native long new_Camera_Listener();
  public final static native void delete_Camera_Listener(long jarg1);
  public final static native void Camera_Listener_cameraPreRenderScene(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_cameraPreRenderSceneSwigExplicitListener(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_cameraPostRenderScene(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_cameraPostRenderSceneSwigExplicitListener(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_cameraDestroyed(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_cameraDestroyedSwigExplicitListener(long jarg1, Camera.Listener jarg1_, long jarg2, Camera jarg2_);
  public final static native void Camera_Listener_director_connect(Camera.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Camera_Listener_change_ownership(Camera.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_Camera(String jarg1, long jarg2, SceneManager jarg2_);
  public final static native void delete_Camera(long jarg1);
  public final static native void Camera_addListener(long jarg1, Camera jarg1_, long jarg2, Camera.Listener jarg2_);
  public final static native void Camera_removeListener(long jarg1, Camera jarg1_, long jarg2, Camera.Listener jarg2_);
  public final static native long Camera_getSceneManager(long jarg1, Camera jarg1_);
  public final static native void Camera_setPolygonMode(long jarg1, Camera jarg1_, int jarg2);
  public final static native int Camera_getPolygonMode(long jarg1, Camera jarg1_);
  public final static native void Camera__renderScene(long jarg1, Camera jarg1_, long jarg2, Viewport jarg2_, boolean jarg3);
  public final static native void Camera__notifyRenderedFaces(long jarg1, Camera jarg1_, long jarg2);
  public final static native void Camera__notifyRenderedBatches(long jarg1, Camera jarg1_, long jarg2);
  public final static native long Camera__getNumRenderedFaces(long jarg1, Camera jarg1_);
  public final static native long Camera__getNumRenderedBatches(long jarg1, Camera jarg1_);
  public final static native long Camera_getDerivedOrientation(long jarg1, Camera jarg1_);
  public final static native long Camera_getDerivedPosition(long jarg1, Camera jarg1_);
  public final static native long Camera_getDerivedDirection(long jarg1, Camera jarg1_);
  public final static native long Camera_getDerivedUp(long jarg1, Camera jarg1_);
  public final static native long Camera_getDerivedRight(long jarg1, Camera jarg1_);
  public final static native long Camera_getRealOrientation(long jarg1, Camera jarg1_);
  public final static native long Camera_getRealPosition(long jarg1, Camera jarg1_);
  public final static native long Camera_getRealDirection(long jarg1, Camera jarg1_);
  public final static native long Camera_getRealUp(long jarg1, Camera jarg1_);
  public final static native long Camera_getRealRight(long jarg1, Camera jarg1_);
  public final static native void Camera_getWorldTransforms(long jarg1, Camera jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native String Camera_getMovableType(long jarg1, Camera jarg1_);
  public final static native void Camera_setLodBias__SWIG_0(long jarg1, Camera jarg1_, float jarg2);
  public final static native void Camera_setLodBias__SWIG_1(long jarg1, Camera jarg1_);
  public final static native float Camera_getLodBias(long jarg1, Camera jarg1_);
  public final static native void Camera_setLodCamera(long jarg1, Camera jarg1_, long jarg2, Camera jarg2_);
  public final static native long Camera_getLodCamera(long jarg1, Camera jarg1_);
  public final static native long Camera_getCameraToViewportRay__SWIG_0(long jarg1, Camera jarg1_, float jarg2, float jarg3);
  public final static native void Camera_getCameraToViewportRay__SWIG_1(long jarg1, Camera jarg1_, float jarg2, float jarg3, long jarg4, Ray jarg4_);
  public final static native long Camera_getCameraToViewportBoxVolume__SWIG_0(long jarg1, Camera jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, boolean jarg6);
  public final static native long Camera_getCameraToViewportBoxVolume__SWIG_1(long jarg1, Camera jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Camera_getCameraToViewportBoxVolume__SWIG_2(long jarg1, Camera jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, long jarg6, PlaneBoundedVolume jarg6_, boolean jarg7);
  public final static native void Camera_getCameraToViewportBoxVolume__SWIG_3(long jarg1, Camera jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, long jarg6, PlaneBoundedVolume jarg6_);
  public final static native float Camera__getLodBiasInverse(long jarg1, Camera jarg1_);
  public final static native void Camera__autoTrack(long jarg1, Camera jarg1_);
  public final static native void Camera_setWindow(long jarg1, Camera jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Camera_resetWindow(long jarg1, Camera jarg1_);
  public final static native boolean Camera_isWindowSet(long jarg1, Camera jarg1_);
  public final static native long Camera_getWindowPlanes(long jarg1, Camera jarg1_);
  public final static native float Camera_getBoundingRadius(long jarg1, Camera jarg1_);
  public final static native long Camera_getAutoTrackTarget(long jarg1, Camera jarg1_);
  public final static native long Camera_getAutoTrackOffset(long jarg1, Camera jarg1_);
  public final static native long Camera_getViewport(long jarg1, Camera jarg1_);
  public final static native void Camera__notifyViewport(long jarg1, Camera jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Camera_setAutoAspectRatio(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native boolean Camera_getAutoAspectRatio(long jarg1, Camera jarg1_);
  public final static native void Camera_setCullingFrustum(long jarg1, Camera jarg1_, long jarg2, Frustum jarg2_);
  public final static native long Camera_getCullingFrustum(long jarg1, Camera jarg1_);
  public final static native void Camera_forwardIntersect(long jarg1, Camera jarg1_, long jarg2, Plane jarg2_, long jarg3);
  public final static native boolean Camera_isVisible__SWIG_0(long jarg1, Camera jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3);
  public final static native boolean Camera_isVisible__SWIG_1(long jarg1, Camera jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native boolean Camera_isVisible__SWIG_2(long jarg1, Camera jarg1_, long jarg2, Sphere jarg2_, long jarg3);
  public final static native boolean Camera_isVisible__SWIG_3(long jarg1, Camera jarg1_, long jarg2, Sphere jarg2_);
  public final static native boolean Camera_isVisible__SWIG_4(long jarg1, Camera jarg1_, long jarg2, Vector3 jarg2_, long jarg3);
  public final static native boolean Camera_isVisible__SWIG_5(long jarg1, Camera jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long Camera_getWorldSpaceCorners(long jarg1, Camera jarg1_);
  public final static native long Camera_getFrustumPlane(long jarg1, Camera jarg1_, int jarg2);
  public final static native boolean Camera_projectSphere(long jarg1, Camera jarg1_, long jarg2, Sphere jarg2_, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native float Camera_getNearClipDistance(long jarg1, Camera jarg1_);
  public final static native float Camera_getFarClipDistance(long jarg1, Camera jarg1_);
  public final static native long Camera_getViewMatrix__SWIG_0(long jarg1, Camera jarg1_);
  public final static native long Camera_getViewMatrix__SWIG_1(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native void Camera_setUseRenderingDistance(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native boolean Camera_getUseRenderingDistance(long jarg1, Camera jarg1_);
  public final static native void Camera_synchroniseBaseSettingsWith(long jarg1, Camera jarg1_, long jarg2, Camera jarg2_);
  public final static native long Camera_getPositionForViewUpdate(long jarg1, Camera jarg1_);
  public final static native long Camera_getOrientationForViewUpdate(long jarg1, Camera jarg1_);
  public final static native void Camera_setUseMinPixelSize(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native boolean Camera_getUseMinPixelSize(long jarg1, Camera jarg1_);
  public final static native float Camera_getPixelDisplayRatio(long jarg1, Camera jarg1_);
  public final static native String Camera_toString(long jarg1, Camera jarg1_);
  public final static native long new_ManualObject(String jarg1);
  public final static native void delete_ManualObject(long jarg1);
  public final static native void ManualObject__releaseManualHardwareResources(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_clear(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_estimateVertexCount(long jarg1, ManualObject jarg1_, long jarg2);
  public final static native void ManualObject_estimateIndexCount(long jarg1, ManualObject jarg1_, long jarg2);
  public final static native void ManualObject_begin__SWIG_0(long jarg1, ManualObject jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native void ManualObject_begin__SWIG_1(long jarg1, ManualObject jarg1_, String jarg2, int jarg3);
  public final static native void ManualObject_begin__SWIG_2(long jarg1, ManualObject jarg1_, String jarg2);
  public final static native void ManualObject_setDynamic(long jarg1, ManualObject jarg1_, boolean jarg2);
  public final static native boolean ManualObject_getDynamic(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_beginUpdate(long jarg1, ManualObject jarg1_, long jarg2);
  public final static native void ManualObject_position__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void ManualObject_position__SWIG_1(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ManualObject_normal__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void ManualObject_normal__SWIG_1(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ManualObject_tangent__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void ManualObject_tangent__SWIG_1(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ManualObject_textureCoord__SWIG_0(long jarg1, ManualObject jarg1_, float jarg2);
  public final static native void ManualObject_textureCoord__SWIG_1(long jarg1, ManualObject jarg1_, float jarg2, float jarg3);
  public final static native void ManualObject_textureCoord__SWIG_2(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ManualObject_textureCoord__SWIG_3(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void ManualObject_textureCoord__SWIG_4(long jarg1, ManualObject jarg1_, long jarg2, Vector2 jarg2_);
  public final static native void ManualObject_textureCoord__SWIG_5(long jarg1, ManualObject jarg1_, long jarg2, Vector3 jarg2_);
  public final static native void ManualObject_textureCoord__SWIG_6(long jarg1, ManualObject jarg1_, long jarg2, Vector4 jarg2_);
  public final static native void ManualObject_colour__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void ManualObject_colour__SWIG_1(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void ManualObject_colour__SWIG_2(long jarg1, ManualObject jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void ManualObject_index(long jarg1, ManualObject jarg1_, long jarg2);
  public final static native void ManualObject_triangle(long jarg1, ManualObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void ManualObject_quad(long jarg1, ManualObject jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long ManualObject_getCurrentVertexCount(long jarg1, ManualObject jarg1_);
  public final static native long ManualObject_getCurrentIndexCount(long jarg1, ManualObject jarg1_);
  public final static native long ManualObject_end(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_setMaterialName__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, String jarg3, String jarg4);
  public final static native void ManualObject_setMaterialName__SWIG_1(long jarg1, ManualObject jarg1_, long jarg2, String jarg3);
  public final static native long ManualObject_convertToMesh__SWIG_0(long jarg1, ManualObject jarg1_, String jarg2, String jarg3);
  public final static native long ManualObject_convertToMesh__SWIG_1(long jarg1, ManualObject jarg1_, String jarg2);
  public final static native void ManualObject_setUseIdentityProjection(long jarg1, ManualObject jarg1_, boolean jarg2);
  public final static native boolean ManualObject_getUseIdentityProjection(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_setUseIdentityView(long jarg1, ManualObject jarg1_, boolean jarg2);
  public final static native boolean ManualObject_getUseIdentityView(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_setBoundingBox(long jarg1, ManualObject jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long ManualObject_getSection(long jarg1, ManualObject jarg1_, long jarg2);
  public final static native long ManualObject_getNumSections(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject_setKeepDeclarationOrder(long jarg1, ManualObject jarg1_, boolean jarg2);
  public final static native boolean ManualObject_getKeepDeclarationOrder(long jarg1, ManualObject jarg1_);
  public final static native String ManualObject_getMovableType(long jarg1, ManualObject jarg1_);
  public final static native long ManualObject_getBoundingBox(long jarg1, ManualObject jarg1_);
  public final static native float ManualObject_getBoundingRadius(long jarg1, ManualObject jarg1_);
  public final static native void ManualObject__updateRenderQueue(long jarg1, ManualObject jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native long ManualObject_getEdgeList(long jarg1, ManualObject jarg1_);
  public final static native boolean ManualObject_hasEdgeList(long jarg1, ManualObject jarg1_);
  public final static native long ManualObject_getShadowVolumeRenderableIterator__SWIG_0(long jarg1, ManualObject jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7, long jarg8);
  public final static native long ManualObject_getShadowVolumeRenderableIterator__SWIG_1(long jarg1, ManualObject jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7);
  public final static native long new_ManualObject_ManualObjectSection__SWIG_0(long jarg1, ManualObject jarg1_, String jarg2, int jarg3, String jarg4);
  public final static native long new_ManualObject_ManualObjectSection__SWIG_1(long jarg1, ManualObject jarg1_, String jarg2, int jarg3);
  public final static native void delete_ManualObject_ManualObjectSection(long jarg1);
  public final static native long ManualObject_ManualObjectSection_getRenderOperation__SWIG_0(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native String ManualObject_ManualObjectSection_getMaterialName(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native String ManualObject_ManualObjectSection_getMaterialGroup(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native void ManualObject_ManualObjectSection_setMaterialName__SWIG_0(long jarg1, ManualObject.ManualObjectSection jarg1_, String jarg2, String jarg3);
  public final static native void ManualObject_ManualObjectSection_setMaterialName__SWIG_1(long jarg1, ManualObject.ManualObjectSection jarg1_, String jarg2);
  public final static native void ManualObject_ManualObjectSection_set32BitIndices(long jarg1, ManualObject.ManualObjectSection jarg1_, boolean jarg2);
  public final static native boolean ManualObject_ManualObjectSection_get32BitIndices(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native long ManualObject_ManualObjectSection_getMaterial(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native void ManualObject_ManualObjectSection_getRenderOperation__SWIG_1(long jarg1, ManualObject.ManualObjectSection jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void ManualObject_ManualObjectSection_getWorldTransforms(long jarg1, ManualObject.ManualObjectSection jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native float ManualObject_ManualObjectSection_getSquaredViewDepth(long jarg1, ManualObject.ManualObjectSection jarg1_, long jarg2, Camera jarg2_);
  public final static native long ManualObject_ManualObjectSection_getLights(long jarg1, ManualObject.ManualObjectSection jarg1_);
  public final static native long new_ManualObject_ManualObjectSectionShadowRenderable__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_, long jarg3, VertexData jarg3_, boolean jarg4, boolean jarg5);
  public final static native long new_ManualObject_ManualObjectSectionShadowRenderable__SWIG_1(long jarg1, ManualObject jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_, long jarg3, VertexData jarg3_, boolean jarg4);
  public final static native void delete_ManualObject_ManualObjectSectionShadowRenderable(long jarg1);
  public final static native void ManualObject_ManualObjectSectionShadowRenderable_getWorldTransforms(long jarg1, ManualObject.ManualObjectSectionShadowRenderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native long ManualObject_ManualObjectSectionShadowRenderable_getPositionBuffer(long jarg1, ManualObject.ManualObjectSectionShadowRenderable jarg1_);
  public final static native long ManualObject_ManualObjectSectionShadowRenderable_getWBuffer(long jarg1, ManualObject.ManualObjectSectionShadowRenderable jarg1_);
  public final static native void ManualObject_ManualObjectSectionShadowRenderable_rebindIndexBuffer(long jarg1, ManualObject.ManualObjectSectionShadowRenderable jarg1_, long jarg2, HardwareIndexBufferPtr jarg2_);
  public final static native void ManualObject_visitRenderables__SWIG_0(long jarg1, ManualObject jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void ManualObject_visitRenderables__SWIG_1(long jarg1, ManualObject jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void delete_ManualObjectFactory(long jarg1);
  public final static native void ManualObjectFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String ManualObjectFactory_FACTORY_TYPE_NAME_get();
  public final static native void ManualObjectFactory_destroyInstance(long jarg1, ManualObjectFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native long new_SubEntityList__SWIG_0();
  public final static native long new_SubEntityList__SWIG_1(long jarg1, SubEntityList jarg1_);
  public final static native long SubEntityList_capacity(long jarg1, SubEntityList jarg1_);
  public final static native void SubEntityList_reserve(long jarg1, SubEntityList jarg1_, long jarg2);
  public final static native boolean SubEntityList_isEmpty(long jarg1, SubEntityList jarg1_);
  public final static native void SubEntityList_clear(long jarg1, SubEntityList jarg1_);
  public final static native long new_SubEntityList__SWIG_2(int jarg1);
  public final static native long new_SubEntityList__SWIG_3(int jarg1, long jarg2, SubEntity jarg2_);
  public final static native int SubEntityList_doSize(long jarg1, SubEntityList jarg1_);
  public final static native void SubEntityList_doAdd__SWIG_0(long jarg1, SubEntityList jarg1_, long jarg2, SubEntity jarg2_);
  public final static native void SubEntityList_doAdd__SWIG_1(long jarg1, SubEntityList jarg1_, int jarg2, long jarg3, SubEntity jarg3_);
  public final static native long SubEntityList_doRemove(long jarg1, SubEntityList jarg1_, int jarg2);
  public final static native long SubEntityList_doGet(long jarg1, SubEntityList jarg1_, int jarg2);
  public final static native long SubEntityList_doSet(long jarg1, SubEntityList jarg1_, int jarg2, long jarg3, SubEntity jarg3_);
  public final static native void SubEntityList_doRemoveRange(long jarg1, SubEntityList jarg1_, int jarg2, int jarg3);
  public final static native void delete_SubEntityList(long jarg1);
  public final static native void delete_Entity(long jarg1);
  public final static native long Entity_getMesh(long jarg1, Entity jarg1_);
  public final static native long Entity_getSubEntity__SWIG_0(long jarg1, Entity jarg1_, long jarg2);
  public final static native long Entity_getSubEntity__SWIG_1(long jarg1, Entity jarg1_, String jarg2);
  public final static native long Entity_getNumSubEntities(long jarg1, Entity jarg1_);
  public final static native long Entity_getSubEntities(long jarg1, Entity jarg1_);
  public final static native long Entity_clone(long jarg1, Entity jarg1_, String jarg2);
  public final static native void Entity_setMaterialName__SWIG_0(long jarg1, Entity jarg1_, String jarg2, String jarg3);
  public final static native void Entity_setMaterialName__SWIG_1(long jarg1, Entity jarg1_, String jarg2);
  public final static native void Entity_setMaterial(long jarg1, Entity jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void Entity__releaseManualHardwareResources(long jarg1, Entity jarg1_);
  public final static native void Entity__restoreManualHardwareResources(long jarg1, Entity jarg1_);
  public final static native void Entity__notifyCurrentCamera(long jarg1, Entity jarg1_, long jarg2, Camera jarg2_);
  public final static native void Entity_setRenderQueueGroup(long jarg1, Entity jarg1_, short jarg2);
  public final static native void Entity_setRenderQueueGroupAndPriority(long jarg1, Entity jarg1_, short jarg2, int jarg3);
  public final static native long Entity_getBoundingBox(long jarg1, Entity jarg1_);
  public final static native long Entity_getChildObjectsBoundingBox(long jarg1, Entity jarg1_);
  public final static native void Entity__updateRenderQueue(long jarg1, Entity jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native String Entity_getMovableType(long jarg1, Entity jarg1_);
  public final static native long Entity_getAnimationState(long jarg1, Entity jarg1_, String jarg2);
  public final static native boolean Entity_hasAnimationState(long jarg1, Entity jarg1_, String jarg2);
  public final static native long Entity_getAllAnimationStates(long jarg1, Entity jarg1_);
  public final static native void Entity_setDisplaySkeleton(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native boolean Entity_getDisplaySkeleton(long jarg1, Entity jarg1_);
  public final static native long Entity_getNumManualLodLevels(long jarg1, Entity jarg1_);
  public final static native int Entity_getCurrentLodIndex(long jarg1, Entity jarg1_);
  public final static native long Entity_getManualLodLevel(long jarg1, Entity jarg1_, long jarg2);
  public final static native void Entity_setMeshLodBias__SWIG_0(long jarg1, Entity jarg1_, float jarg2, int jarg3, int jarg4);
  public final static native void Entity_setMeshLodBias__SWIG_1(long jarg1, Entity jarg1_, float jarg2, int jarg3);
  public final static native void Entity_setMeshLodBias__SWIG_2(long jarg1, Entity jarg1_, float jarg2);
  public final static native void Entity_setMaterialLodBias__SWIG_0(long jarg1, Entity jarg1_, float jarg2, int jarg3, int jarg4);
  public final static native void Entity_setMaterialLodBias__SWIG_1(long jarg1, Entity jarg1_, float jarg2, int jarg3);
  public final static native void Entity_setMaterialLodBias__SWIG_2(long jarg1, Entity jarg1_, float jarg2);
  public final static native void Entity_setPolygonModeOverrideable(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native long Entity_attachObjectToBone__SWIG_0(long jarg1, Entity jarg1_, String jarg2, long jarg3, MovableObject jarg3_, long jarg4, Quaternion jarg4_, long jarg5, Vector3 jarg5_);
  public final static native long Entity_attachObjectToBone__SWIG_1(long jarg1, Entity jarg1_, String jarg2, long jarg3, MovableObject jarg3_, long jarg4, Quaternion jarg4_);
  public final static native long Entity_attachObjectToBone__SWIG_2(long jarg1, Entity jarg1_, String jarg2, long jarg3, MovableObject jarg3_);
  public final static native long Entity_detachObjectFromBone__SWIG_0(long jarg1, Entity jarg1_, String jarg2);
  public final static native void Entity_detachObjectFromBone__SWIG_1(long jarg1, Entity jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void Entity_detachAllObjectsFromBone(long jarg1, Entity jarg1_);
  public final static native long Entity_getAttachedObjectIterator(long jarg1, Entity jarg1_);
  public final static native float Entity_getBoundingRadius(long jarg1, Entity jarg1_);
  public final static native long Entity_getWorldBoundingBox__SWIG_0(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native long Entity_getWorldBoundingBox__SWIG_1(long jarg1, Entity jarg1_);
  public final static native long Entity_getWorldBoundingSphere__SWIG_0(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native long Entity_getWorldBoundingSphere__SWIG_1(long jarg1, Entity jarg1_);
  public final static native long Entity_getEdgeList(long jarg1, Entity jarg1_);
  public final static native boolean Entity_hasEdgeList(long jarg1, Entity jarg1_);
  public final static native long Entity_getShadowVolumeRenderableIterator__SWIG_0(long jarg1, Entity jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7, long jarg8);
  public final static native long Entity_getShadowVolumeRenderableIterator__SWIG_1(long jarg1, Entity jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7);
  public final static native long Entity__getBoneMatrices(long jarg1, Entity jarg1_);
  public final static native int Entity__getNumBoneMatrices(long jarg1, Entity jarg1_);
  public final static native boolean Entity_hasSkeleton(long jarg1, Entity jarg1_);
  public final static native long Entity_getSkeleton(long jarg1, Entity jarg1_);
  public final static native boolean Entity_isHardwareAnimationEnabled(long jarg1, Entity jarg1_);
  public final static native void Entity__notifyAttached__SWIG_0(long jarg1, Entity jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void Entity__notifyAttached__SWIG_1(long jarg1, Entity jarg1_, long jarg2, Node jarg2_);
  public final static native int Entity_getSoftwareAnimationRequests(long jarg1, Entity jarg1_);
  public final static native int Entity_getSoftwareAnimationNormalsRequests(long jarg1, Entity jarg1_);
  public final static native void Entity_addSoftwareAnimationRequest(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native void Entity_removeSoftwareAnimationRequest(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native void Entity_shareSkeletonInstanceWith(long jarg1, Entity jarg1_, long jarg2, Entity jarg2_);
  public final static native boolean Entity_hasVertexAnimation(long jarg1, Entity jarg1_);
  public final static native void Entity_stopSharingSkeletonInstance(long jarg1, Entity jarg1_);
  public final static native boolean Entity_sharesSkeletonInstance(long jarg1, Entity jarg1_);
  public final static native long Entity_getSkeletonInstanceSharingSet(long jarg1, Entity jarg1_);
  public final static native void Entity_refreshAvailableAnimationState(long jarg1, Entity jarg1_);
  public final static native void Entity__updateAnimation(long jarg1, Entity jarg1_);
  public final static native boolean Entity__isAnimated(long jarg1, Entity jarg1_);
  public final static native boolean Entity__isSkeletonAnimated(long jarg1, Entity jarg1_);
  public final static native long Entity__getSkelAnimVertexData(long jarg1, Entity jarg1_);
  public final static native long Entity__getSoftwareVertexAnimVertexData(long jarg1, Entity jarg1_);
  public final static native long Entity__getHardwareVertexAnimVertexData(long jarg1, Entity jarg1_);
  public final static native long Entity__getSkelAnimTempBufferInfo(long jarg1, Entity jarg1_);
  public final static native long Entity__getVertexAnimTempBufferInfo(long jarg1, Entity jarg1_);
  public final static native long Entity_getTypeFlags(long jarg1, Entity jarg1_);
  public final static native long Entity_getVertexDataForBinding(long jarg1, Entity jarg1_);
  public final static native int Entity_chooseVertexDataForBinding(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native boolean Entity__getBuffersMarkedForAnimation(long jarg1, Entity jarg1_);
  public final static native void Entity__markBuffersUsedForAnimation(long jarg1, Entity jarg1_);
  public final static native boolean Entity_isInitialised(long jarg1, Entity jarg1_);
  public final static native void Entity__initialise__SWIG_0(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native void Entity__initialise__SWIG_1(long jarg1, Entity jarg1_);
  public final static native void Entity__deinitialise(long jarg1, Entity jarg1_);
  public final static native void Entity_backgroundLoadingComplete(long jarg1, Entity jarg1_, long jarg2, Resource jarg2_);
  public final static native void Entity_visitRenderables__SWIG_0(long jarg1, Entity jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void Entity_visitRenderables__SWIG_1(long jarg1, Entity jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native float Entity__getMeshLodFactorTransformed(long jarg1, Entity jarg1_);
  public final static native void Entity_setSkipAnimationStateUpdate(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native boolean Entity_getSkipAnimationStateUpdate(long jarg1, Entity jarg1_);
  public final static native void Entity_setAlwaysUpdateMainSkeleton(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native boolean Entity_getAlwaysUpdateMainSkeleton(long jarg1, Entity jarg1_);
  public final static native void Entity_setUpdateBoundingBoxFromSkeleton(long jarg1, Entity jarg1_, boolean jarg2);
  public final static native boolean Entity_getUpdateBoundingBoxFromSkeleton(long jarg1, Entity jarg1_);
  public final static native void delete_EntityFactory(long jarg1);
  public final static native void EntityFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String EntityFactory_FACTORY_TYPE_NAME_get();
  public final static native void EntityFactory_destroyInstance(long jarg1, EntityFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native String SubEntity_getMaterialName(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_setMaterialName__SWIG_0(long jarg1, SubEntity jarg1_, String jarg2, String jarg3);
  public final static native void SubEntity_setMaterialName__SWIG_1(long jarg1, SubEntity jarg1_, String jarg2);
  public final static native void SubEntity_setMaterial(long jarg1, SubEntity jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void SubEntity_setVisible(long jarg1, SubEntity jarg1_, boolean jarg2);
  public final static native boolean SubEntity_isVisible(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_setRenderQueueGroup(long jarg1, SubEntity jarg1_, short jarg2);
  public final static native void SubEntity_setRenderQueueGroupAndPriority(long jarg1, SubEntity jarg1_, short jarg2, int jarg3);
  public final static native short SubEntity_getRenderQueueGroup(long jarg1, SubEntity jarg1_);
  public final static native int SubEntity_getRenderQueuePriority(long jarg1, SubEntity jarg1_);
  public final static native boolean SubEntity_isRenderQueueGroupSet(long jarg1, SubEntity jarg1_);
  public final static native boolean SubEntity_isRenderQueuePrioritySet(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity_getSubMesh(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity_getParent(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity_getMaterial(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity_getTechnique(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_getRenderOperation(long jarg1, SubEntity jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void SubEntity_setIndexDataStartIndex(long jarg1, SubEntity jarg1_, long jarg2);
  public final static native long SubEntity_getIndexDataStartIndex(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_setIndexDataEndIndex(long jarg1, SubEntity jarg1_, long jarg2);
  public final static native long SubEntity_getIndexDataEndIndex(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_resetIndexDataStartEndIndex(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity_getWorldTransforms(long jarg1, SubEntity jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native int SubEntity_getNumWorldTransforms(long jarg1, SubEntity jarg1_);
  public final static native float SubEntity_getSquaredViewDepth(long jarg1, SubEntity jarg1_, long jarg2, Camera jarg2_);
  public final static native long SubEntity_getLights(long jarg1, SubEntity jarg1_);
  public final static native boolean SubEntity_getCastsShadows(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity__getSkelAnimVertexData(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity__getSoftwareVertexAnimVertexData(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity__getHardwareVertexAnimVertexData(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity__getSkelAnimTempBufferInfo(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity__getVertexAnimTempBufferInfo(long jarg1, SubEntity jarg1_);
  public final static native long SubEntity_getVertexDataForBinding(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity__markBuffersUnusedForAnimation(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity__markBuffersUsedForAnimation(long jarg1, SubEntity jarg1_);
  public final static native boolean SubEntity__getBuffersMarkedForAnimation(long jarg1, SubEntity jarg1_);
  public final static native void SubEntity__restoreBuffersForUnusedAnimation(long jarg1, SubEntity jarg1_, boolean jarg2);
  public final static native void SubEntity__updateCustomGpuParameter(long jarg1, SubEntity jarg1_, long jarg2, GpuProgramParameters.AutoConstantEntry jarg2_, long jarg3, GpuProgramParameters jarg3_);
  public final static native void SubEntity__invalidateCameraCache(long jarg1, SubEntity jarg1_);
  public final static native long new_ParticleSystem__SWIG_0();
  public final static native long new_ParticleSystem__SWIG_1(String jarg1, String jarg2);
  public final static native void delete_ParticleSystem(long jarg1);
  public final static native void ParticleSystem_setRenderer(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native long ParticleSystem_getRenderer(long jarg1, ParticleSystem jarg1_);
  public final static native String ParticleSystem_getRendererName(long jarg1, ParticleSystem jarg1_);
  public final static native long ParticleSystem_addEmitter(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native long ParticleSystem_getEmitter(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native int ParticleSystem_getNumEmitters(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_removeEmitter__SWIG_0(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native void ParticleSystem_removeAllEmitters(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_removeEmitter__SWIG_1(long jarg1, ParticleSystem jarg1_, long jarg2, ParticleEmitter jarg2_);
  public final static native long ParticleSystem_addAffector(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native long ParticleSystem_getAffector(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native int ParticleSystem_getNumAffectors(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_removeAffector(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native void ParticleSystem_removeAllAffectors(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_clear(long jarg1, ParticleSystem jarg1_);
  public final static native long ParticleSystem_getNumParticles(long jarg1, ParticleSystem jarg1_);
  public final static native long ParticleSystem_createParticle(long jarg1, ParticleSystem jarg1_);
  public final static native long ParticleSystem_createEmitterParticle(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native long ParticleSystem_getParticle(long jarg1, ParticleSystem jarg1_, long jarg2);
  public final static native long ParticleSystem_getParticleQuota(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setParticleQuota(long jarg1, ParticleSystem jarg1_, long jarg2);
  public final static native long ParticleSystem_getEmittedEmitterQuota(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setEmittedEmitterQuota(long jarg1, ParticleSystem jarg1_, long jarg2);
  public final static native void ParticleSystem__update(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native long ParticleSystem__getIterator(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setMaterialName__SWIG_0(long jarg1, ParticleSystem jarg1_, String jarg2, String jarg3);
  public final static native void ParticleSystem_setMaterialName__SWIG_1(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native String ParticleSystem_getMaterialName(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__notifyCurrentCamera(long jarg1, ParticleSystem jarg1_, long jarg2, Camera jarg2_);
  public final static native void ParticleSystem__notifyAttached__SWIG_0(long jarg1, ParticleSystem jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void ParticleSystem__notifyAttached__SWIG_1(long jarg1, ParticleSystem jarg1_, long jarg2, Node jarg2_);
  public final static native long ParticleSystem_getBoundingBox(long jarg1, ParticleSystem jarg1_);
  public final static native float ParticleSystem_getBoundingRadius(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__updateRenderQueue(long jarg1, ParticleSystem jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void ParticleSystem_visitRenderables__SWIG_0(long jarg1, ParticleSystem jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void ParticleSystem_visitRenderables__SWIG_1(long jarg1, ParticleSystem jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void ParticleSystem_fastForward__SWIG_0(long jarg1, ParticleSystem jarg1_, float jarg2, float jarg3);
  public final static native void ParticleSystem_fastForward__SWIG_1(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native void ParticleSystem_setSpeedFactor(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native float ParticleSystem_getSpeedFactor(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setIterationInterval(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native float ParticleSystem_getIterationInterval(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setDefaultIterationInterval(float jarg1);
  public final static native float ParticleSystem_getDefaultIterationInterval();
  public final static native void ParticleSystem_setNonVisibleUpdateTimeout(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native float ParticleSystem_getNonVisibleUpdateTimeout(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setDefaultNonVisibleUpdateTimeout(float jarg1);
  public final static native float ParticleSystem_getDefaultNonVisibleUpdateTimeout();
  public final static native String ParticleSystem_getMovableType(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__notifyParticleResized(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__notifyParticleRotated(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setDefaultDimensions(long jarg1, ParticleSystem jarg1_, float jarg2, float jarg3);
  public final static native void ParticleSystem_setDefaultWidth(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native float ParticleSystem_getDefaultWidth(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setDefaultHeight(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native float ParticleSystem_getDefaultHeight(long jarg1, ParticleSystem jarg1_);
  public final static native boolean ParticleSystem_getCullIndividually(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setCullIndividually(long jarg1, ParticleSystem jarg1_, boolean jarg2);
  public final static native String ParticleSystem_getResourceGroupName(long jarg1, ParticleSystem jarg1_);
  public final static native String ParticleSystem_getOrigin(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__notifyOrigin(long jarg1, ParticleSystem jarg1_, String jarg2);
  public final static native void ParticleSystem_setRenderQueueGroup(long jarg1, ParticleSystem jarg1_, short jarg2);
  public final static native void ParticleSystem_setRenderQueueGroupAndPriority(long jarg1, ParticleSystem jarg1_, short jarg2, int jarg3);
  public final static native void ParticleSystem_setSortingEnabled(long jarg1, ParticleSystem jarg1_, boolean jarg2);
  public final static native boolean ParticleSystem_getSortingEnabled(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setBounds(long jarg1, ParticleSystem jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void ParticleSystem_setBoundsAutoUpdated__SWIG_0(long jarg1, ParticleSystem jarg1_, boolean jarg2, float jarg3);
  public final static native void ParticleSystem_setBoundsAutoUpdated__SWIG_1(long jarg1, ParticleSystem jarg1_, boolean jarg2);
  public final static native void ParticleSystem_setKeepParticlesInLocalSpace(long jarg1, ParticleSystem jarg1_, boolean jarg2);
  public final static native boolean ParticleSystem_getKeepParticlesInLocalSpace(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem__updateBounds(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setEmitting(long jarg1, ParticleSystem jarg1_, boolean jarg2);
  public final static native boolean ParticleSystem_getEmitting(long jarg1, ParticleSystem jarg1_);
  public final static native long ParticleSystem_getTypeFlags(long jarg1, ParticleSystem jarg1_);
  public final static native long new_InstancedEntity__SWIG_0(long jarg1, InstanceBatch jarg1_, long jarg2, long jarg3, InstancedEntity jarg3_);
  public final static native long new_InstancedEntity__SWIG_1(long jarg1, InstanceBatch jarg1_, long jarg2);
  public final static native void delete_InstancedEntity(long jarg1);
  public final static native boolean InstancedEntity_shareTransformWith(long jarg1, InstancedEntity jarg1_, long jarg2, InstancedEntity jarg2_);
  public final static native void InstancedEntity_stopSharingTransform(long jarg1, InstancedEntity jarg1_);
  public final static native long InstancedEntity__getOwner(long jarg1, InstancedEntity jarg1_);
  public final static native String InstancedEntity_getMovableType(long jarg1, InstancedEntity jarg1_);
  public final static native long InstancedEntity_getBoundingBox(long jarg1, InstancedEntity jarg1_);
  public final static native float InstancedEntity_getBoundingRadius(long jarg1, InstancedEntity jarg1_);
  public final static native float InstancedEntity_getSquaredViewDepth(long jarg1, InstancedEntity jarg1_, long jarg2, Camera jarg2_);
  public final static native void InstancedEntity__notifyMoved(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity__notifyAttached__SWIG_0(long jarg1, InstancedEntity jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void InstancedEntity__notifyAttached__SWIG_1(long jarg1, InstancedEntity jarg1_, long jarg2, Node jarg2_);
  public final static native void InstancedEntity__updateRenderQueue(long jarg1, InstancedEntity jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void InstancedEntity_visitRenderables__SWIG_0(long jarg1, InstancedEntity jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void InstancedEntity_visitRenderables__SWIG_1(long jarg1, InstancedEntity jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native boolean InstancedEntity_hasSkeleton(long jarg1, InstancedEntity jarg1_);
  public final static native long InstancedEntity_getSkeleton(long jarg1, InstancedEntity jarg1_);
  public final static native long InstancedEntity_getAnimationState(long jarg1, InstancedEntity jarg1_, String jarg2);
  public final static native long InstancedEntity_getAllAnimationStates(long jarg1, InstancedEntity jarg1_);
  public final static native boolean InstancedEntity__updateAnimation(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setTransformLookupNumber(long jarg1, InstancedEntity jarg1_, int jarg2);
  public final static native long InstancedEntity_getPosition(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setPosition__SWIG_0(long jarg1, InstancedEntity jarg1_, long jarg2, Vector3 jarg2_, boolean jarg3);
  public final static native void InstancedEntity_setPosition__SWIG_1(long jarg1, InstancedEntity jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long InstancedEntity_getOrientation(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setOrientation__SWIG_0(long jarg1, InstancedEntity jarg1_, long jarg2, Quaternion jarg2_, boolean jarg3);
  public final static native void InstancedEntity_setOrientation__SWIG_1(long jarg1, InstancedEntity jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long InstancedEntity_getScale(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setScale__SWIG_0(long jarg1, InstancedEntity jarg1_, long jarg2, Vector3 jarg2_, boolean jarg3);
  public final static native void InstancedEntity_setScale__SWIG_1(long jarg1, InstancedEntity jarg1_, long jarg2, Vector3 jarg2_);
  public final static native float InstancedEntity_getMaxScaleCoef(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_updateTransforms(long jarg1, InstancedEntity jarg1_);
  public final static native boolean InstancedEntity_isInUse(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setInUse(long jarg1, InstancedEntity jarg1_, boolean jarg2);
  public final static native long InstancedEntity__getParentNodeFullTransform(long jarg1, InstancedEntity jarg1_);
  public final static native long InstancedEntity__getDerivedPosition(long jarg1, InstancedEntity jarg1_);
  public final static native boolean InstancedEntity_isInScene(long jarg1, InstancedEntity jarg1_);
  public final static native void InstancedEntity_setCustomParam(long jarg1, InstancedEntity jarg1_, short jarg2, long jarg3, Vector4 jarg3_);
  public final static native long InstancedEntity_getCustomParam(long jarg1, InstancedEntity jarg1_, short jarg2);
  public final static native void delete_InstanceBatch(long jarg1);
  public final static native long InstanceBatch__getMeshRef(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__setInstancesPerBatch(long jarg1, InstanceBatch jarg1_, long jarg2);
  public final static native long InstanceBatch__getIndexToBoneMap(long jarg1, InstanceBatch jarg1_);
  public final static native boolean InstanceBatch__supportsSkeletalAnimation(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__updateBounds(long jarg1, InstanceBatch jarg1_);
  public final static native long InstanceBatch_calculateMaxNumInstances(long jarg1, InstanceBatch jarg1_, long jarg2, SubMesh jarg2_, int jarg3);
  public final static native long InstanceBatch_build(long jarg1, InstanceBatch jarg1_, long jarg2, SubMesh jarg2_);
  public final static native void InstanceBatch_buildFrom(long jarg1, InstanceBatch jarg1_, long jarg2, SubMesh jarg2_, long jarg3, RenderOperation jarg3_);
  public final static native long InstanceBatch__getMeshReference(long jarg1, InstanceBatch jarg1_);
  public final static native boolean InstanceBatch_isBatchFull(long jarg1, InstanceBatch jarg1_);
  public final static native boolean InstanceBatch_isBatchUnused(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch_getInstancedEntitiesInUse(long jarg1, InstanceBatch jarg1_, long jarg2, long jarg3);
  public final static native void InstanceBatch__defragmentBatch(long jarg1, InstanceBatch jarg1_, boolean jarg2, long jarg3, long jarg4);
  public final static native void InstanceBatch__defragmentBatchDiscard(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__boundsDirty(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch_setStaticAndUpdate(long jarg1, InstanceBatch jarg1_, boolean jarg2);
  public final static native boolean InstanceBatch_isStatic(long jarg1, InstanceBatch jarg1_);
  public final static native long InstanceBatch_createInstancedEntity(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch_removeInstancedEntity(long jarg1, InstanceBatch jarg1_, long jarg2, InstancedEntity jarg2_);
  public final static native boolean InstanceBatch_useBoneWorldMatrices(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__markTransformSharingDirty(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__setCustomParam(long jarg1, InstanceBatch jarg1_, long jarg2, InstancedEntity jarg2_, short jarg3, long jarg4, Vector4 jarg4_);
  public final static native long InstanceBatch__getCustomParam(long jarg1, InstanceBatch jarg1_, long jarg2, InstancedEntity jarg2_, short jarg3);
  public final static native long InstanceBatch_getMaterial(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch_getRenderOperation(long jarg1, InstanceBatch jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native float InstanceBatch_getSquaredViewDepth(long jarg1, InstanceBatch jarg1_, long jarg2, Camera jarg2_);
  public final static native long InstanceBatch_getLights(long jarg1, InstanceBatch jarg1_);
  public final static native long InstanceBatch_getTechnique(long jarg1, InstanceBatch jarg1_);
  public final static native String InstanceBatch_getMovableType(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__notifyCurrentCamera(long jarg1, InstanceBatch jarg1_, long jarg2, Camera jarg2_);
  public final static native long InstanceBatch_getBoundingBox(long jarg1, InstanceBatch jarg1_);
  public final static native float InstanceBatch_getBoundingRadius(long jarg1, InstanceBatch jarg1_);
  public final static native void InstanceBatch__updateRenderQueue(long jarg1, InstanceBatch jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void InstanceBatch_visitRenderables__SWIG_0(long jarg1, InstanceBatch jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void InstanceBatch_visitRenderables__SWIG_1(long jarg1, InstanceBatch jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native void SimpleRenderable_setMaterial(long jarg1, SimpleRenderable jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native long SimpleRenderable_getMaterial(long jarg1, SimpleRenderable jarg1_);
  public final static native void SimpleRenderable_setRenderOperation(long jarg1, SimpleRenderable jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void SimpleRenderable_getRenderOperation(long jarg1, SimpleRenderable jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void SimpleRenderable_setTransform(long jarg1, SimpleRenderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void SimpleRenderable_getWorldTransforms(long jarg1, SimpleRenderable jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void SimpleRenderable__notifyCurrentCamera(long jarg1, SimpleRenderable jarg1_, long jarg2, Camera jarg2_);
  public final static native void SimpleRenderable_setBoundingBox(long jarg1, SimpleRenderable jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long SimpleRenderable_getBoundingBox(long jarg1, SimpleRenderable jarg1_);
  public final static native void SimpleRenderable__updateRenderQueue(long jarg1, SimpleRenderable jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void SimpleRenderable_visitRenderables__SWIG_0(long jarg1, SimpleRenderable jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void SimpleRenderable_visitRenderables__SWIG_1(long jarg1, SimpleRenderable jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native String SimpleRenderable_getMovableType(long jarg1, SimpleRenderable jarg1_);
  public final static native long SimpleRenderable_getLights(long jarg1, SimpleRenderable jarg1_);
  public final static native void delete_SimpleRenderable(long jarg1);
  public final static native long new_Rectangle2D__SWIG_0(boolean jarg1, int jarg2);
  public final static native long new_Rectangle2D__SWIG_1(boolean jarg1);
  public final static native long new_Rectangle2D__SWIG_2();
  public final static native long new_Rectangle2D__SWIG_3(String jarg1, boolean jarg2, int jarg3);
  public final static native long new_Rectangle2D__SWIG_4(String jarg1, boolean jarg2);
  public final static native long new_Rectangle2D__SWIG_5(String jarg1);
  public final static native void delete_Rectangle2D(long jarg1);
  public final static native void Rectangle2D_setCorners__SWIG_0(long jarg1, Rectangle2D jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, boolean jarg6);
  public final static native void Rectangle2D_setCorners__SWIG_1(long jarg1, Rectangle2D jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Rectangle2D_setNormals(long jarg1, Rectangle2D jarg1_, long jarg2, Vector3 jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Vector3 jarg4_, long jarg5, Vector3 jarg5_);
  public final static native void Rectangle2D_setUVs(long jarg1, Rectangle2D jarg1_, long jarg2, Vector2 jarg2_, long jarg3, Vector2 jarg3_, long jarg4, Vector2 jarg4_, long jarg5, Vector2 jarg5_);
  public final static native void Rectangle2D_setDefaultUVs(long jarg1, Rectangle2D jarg1_);
  public final static native float Rectangle2D_getSquaredViewDepth(long jarg1, Rectangle2D jarg1_, long jarg2, Camera jarg2_);
  public final static native float Rectangle2D_getBoundingRadius(long jarg1, Rectangle2D jarg1_);
  public final static native long new_WireBoundingBox__SWIG_0();
  public final static native long new_WireBoundingBox__SWIG_1(String jarg1);
  public final static native void delete_WireBoundingBox(long jarg1);
  public final static native void WireBoundingBox_setupBoundingBox(long jarg1, WireBoundingBox jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native float WireBoundingBox_getSquaredViewDepth(long jarg1, WireBoundingBox jarg1_, long jarg2, Camera jarg2_);
  public final static native float WireBoundingBox_getBoundingRadius(long jarg1, WireBoundingBox jarg1_);
  public final static native long new_ParticleSystemManager();
  public final static native void delete_ParticleSystemManager(long jarg1);
  public final static native void ParticleSystemManager_addEmitterFactory(long jarg1, ParticleSystemManager jarg1_, long jarg2, ParticleEmitterFactory jarg2_);
  public final static native void ParticleSystemManager_addAffectorFactory(long jarg1, ParticleSystemManager jarg1_, long jarg2, ParticleAffectorFactory jarg2_);
  public final static native void ParticleSystemManager_addRendererFactory(long jarg1, ParticleSystemManager jarg1_, long jarg2);
  public final static native void ParticleSystemManager_addTemplate(long jarg1, ParticleSystemManager jarg1_, String jarg2, long jarg3, ParticleSystem jarg3_);
  public final static native void ParticleSystemManager_removeTemplate__SWIG_0(long jarg1, ParticleSystemManager jarg1_, String jarg2, boolean jarg3);
  public final static native void ParticleSystemManager_removeTemplate__SWIG_1(long jarg1, ParticleSystemManager jarg1_, String jarg2);
  public final static native void ParticleSystemManager_removeAllTemplates__SWIG_0(long jarg1, ParticleSystemManager jarg1_, boolean jarg2);
  public final static native void ParticleSystemManager_removeAllTemplates__SWIG_1(long jarg1, ParticleSystemManager jarg1_);
  public final static native void ParticleSystemManager_removeTemplatesByResourceGroup(long jarg1, ParticleSystemManager jarg1_, String jarg2);
  public final static native long ParticleSystemManager_createTemplate(long jarg1, ParticleSystemManager jarg1_, String jarg2, String jarg3);
  public final static native long ParticleSystemManager_getTemplate(long jarg1, ParticleSystemManager jarg1_, String jarg2);
  public final static native long ParticleSystemManager__createEmitter(long jarg1, ParticleSystemManager jarg1_, String jarg2, long jarg3, ParticleSystem jarg3_);
  public final static native void ParticleSystemManager__destroyEmitter(long jarg1, ParticleSystemManager jarg1_, long jarg2, ParticleEmitter jarg2_);
  public final static native long ParticleSystemManager__createAffector(long jarg1, ParticleSystemManager jarg1_, String jarg2, long jarg3, ParticleSystem jarg3_);
  public final static native void ParticleSystemManager__destroyAffector(long jarg1, ParticleSystemManager jarg1_, long jarg2, ParticleAffector jarg2_);
  public final static native long ParticleSystemManager__createRenderer(long jarg1, ParticleSystemManager jarg1_, String jarg2);
  public final static native void ParticleSystemManager__destroyRenderer(long jarg1, ParticleSystemManager jarg1_, long jarg2);
  public final static native void ParticleSystemManager__initialise(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getScriptPatterns(long jarg1, ParticleSystemManager jarg1_);
  public final static native void ParticleSystemManager_parseScript(long jarg1, ParticleSystemManager jarg1_, long jarg2, String jarg3);
  public final static native float ParticleSystemManager_getLoadingOrder(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getAffectorFactoryIterator(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getEmitterFactoryIterator(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getRendererFactoryIterator(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getTemplateIterator(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager__getFactory(long jarg1, ParticleSystemManager jarg1_);
  public final static native long ParticleSystemManager_getSingleton();
  public final static native void delete_ParticleSystemFactory(long jarg1);
  public final static native void ParticleSystemFactory_FACTORY_TYPE_NAME_set(String jarg1);
  public final static native String ParticleSystemFactory_FACTORY_TYPE_NAME_get();
  public final static native void ParticleSystemFactory_destroyInstance(long jarg1, ParticleSystemFactory jarg1_, long jarg2, MovableObject jarg2_);
  public final static native int InstanceManager_CAST_SHADOWS_get();
  public final static native long new_InstanceManager__SWIG_0(String jarg1, long jarg2, SceneManager jarg2_, String jarg3, String jarg4, int jarg5, int jarg6, long jarg7, int jarg8, boolean jarg9);
  public final static native long new_InstanceManager__SWIG_1(String jarg1, long jarg2, SceneManager jarg2_, String jarg3, String jarg4, int jarg5, int jarg6, long jarg7, int jarg8);
  public final static native void delete_InstanceManager(long jarg1);
  public final static native String InstanceManager_getName(long jarg1, InstanceManager jarg1_);
  public final static native long InstanceManager_getSceneManager(long jarg1, InstanceManager jarg1_);
  public final static native void InstanceManager_setInstancesPerBatch(long jarg1, InstanceManager jarg1_, long jarg2);
  public final static native void InstanceManager_setMaxLookupTableInstances(long jarg1, InstanceManager jarg1_, long jarg2);
  public final static native void InstanceManager_setNumCustomParams(long jarg1, InstanceManager jarg1_, short jarg2);
  public final static native short InstanceManager_getNumCustomParams(long jarg1, InstanceManager jarg1_);
  public final static native int InstanceManager_getInstancingTechnique(long jarg1, InstanceManager jarg1_);
  public final static native long InstanceManager_getMaxOrBestNumInstancesPerBatch(long jarg1, InstanceManager jarg1_, String jarg2, long jarg3, int jarg4);
  public final static native long InstanceManager_createInstancedEntity(long jarg1, InstanceManager jarg1_, String jarg2);
  public final static native void InstanceManager_cleanupEmptyBatches(long jarg1, InstanceManager jarg1_);
  public final static native void InstanceManager_defragmentBatches(long jarg1, InstanceManager jarg1_, boolean jarg2);
  public final static native void InstanceManager_setSetting__SWIG_0(long jarg1, InstanceManager jarg1_, int jarg2, boolean jarg3, String jarg4);
  public final static native void InstanceManager_setSetting__SWIG_1(long jarg1, InstanceManager jarg1_, int jarg2, boolean jarg3);
  public final static native boolean InstanceManager_getSetting(long jarg1, InstanceManager jarg1_, int jarg2, String jarg3);
  public final static native boolean InstanceManager_hasSettings(long jarg1, InstanceManager jarg1_, String jarg2);
  public final static native void InstanceManager_setBatchesAsStaticAndUpdate(long jarg1, InstanceManager jarg1_, boolean jarg2);
  public final static native void InstanceManager__addDirtyBatch(long jarg1, InstanceManager jarg1_, long jarg2, InstanceBatch jarg2_);
  public final static native void InstanceManager__updateDirtyBatches(long jarg1, InstanceManager jarg1_);
  public final static native long InstanceManager_getInstanceBatchMapIterator(long jarg1, InstanceManager jarg1_);
  public final static native long InstanceManager_getInstanceBatchIterator(long jarg1, InstanceManager jarg1_, String jarg2);
  public final static native void VertexBoneAssignment_vertexIndex_set(long jarg1, VertexBoneAssignment jarg1_, long jarg2);
  public final static native long VertexBoneAssignment_vertexIndex_get(long jarg1, VertexBoneAssignment jarg1_);
  public final static native void VertexBoneAssignment_boneIndex_set(long jarg1, VertexBoneAssignment jarg1_, int jarg2);
  public final static native int VertexBoneAssignment_boneIndex_get(long jarg1, VertexBoneAssignment jarg1_);
  public final static native void VertexBoneAssignment_weight_set(long jarg1, VertexBoneAssignment jarg1_, float jarg2);
  public final static native float VertexBoneAssignment_weight_get(long jarg1, VertexBoneAssignment jarg1_);
  public final static native long new_VertexBoneAssignment();
  public final static native void delete_VertexBoneAssignment(long jarg1);
  public final static native long new_PoseList__SWIG_0();
  public final static native long new_PoseList__SWIG_1(long jarg1, PoseList jarg1_);
  public final static native long PoseList_capacity(long jarg1, PoseList jarg1_);
  public final static native void PoseList_reserve(long jarg1, PoseList jarg1_, long jarg2);
  public final static native boolean PoseList_isEmpty(long jarg1, PoseList jarg1_);
  public final static native void PoseList_clear(long jarg1, PoseList jarg1_);
  public final static native long new_PoseList__SWIG_2(int jarg1);
  public final static native long new_PoseList__SWIG_3(int jarg1, long jarg2, Pose jarg2_);
  public final static native int PoseList_doSize(long jarg1, PoseList jarg1_);
  public final static native void PoseList_doAdd__SWIG_0(long jarg1, PoseList jarg1_, long jarg2, Pose jarg2_);
  public final static native void PoseList_doAdd__SWIG_1(long jarg1, PoseList jarg1_, int jarg2, long jarg3, Pose jarg3_);
  public final static native long PoseList_doRemove(long jarg1, PoseList jarg1_, int jarg2);
  public final static native long PoseList_doGet(long jarg1, PoseList jarg1_, int jarg2);
  public final static native long PoseList_doSet(long jarg1, PoseList jarg1_, int jarg2, long jarg3, Pose jarg3_);
  public final static native void PoseList_doRemoveRange(long jarg1, PoseList jarg1_, int jarg2, int jarg3);
  public final static native void delete_PoseList(long jarg1);
  public final static native long new_SubMeshList__SWIG_0();
  public final static native long new_SubMeshList__SWIG_1(long jarg1, SubMeshList jarg1_);
  public final static native long SubMeshList_capacity(long jarg1, SubMeshList jarg1_);
  public final static native void SubMeshList_reserve(long jarg1, SubMeshList jarg1_, long jarg2);
  public final static native boolean SubMeshList_isEmpty(long jarg1, SubMeshList jarg1_);
  public final static native void SubMeshList_clear(long jarg1, SubMeshList jarg1_);
  public final static native long new_SubMeshList__SWIG_2(int jarg1);
  public final static native long new_SubMeshList__SWIG_3(int jarg1, long jarg2, SubMesh jarg2_);
  public final static native int SubMeshList_doSize(long jarg1, SubMeshList jarg1_);
  public final static native void SubMeshList_doAdd__SWIG_0(long jarg1, SubMeshList jarg1_, long jarg2, SubMesh jarg2_);
  public final static native void SubMeshList_doAdd__SWIG_1(long jarg1, SubMeshList jarg1_, int jarg2, long jarg3, SubMesh jarg3_);
  public final static native long SubMeshList_doRemove(long jarg1, SubMeshList jarg1_, int jarg2);
  public final static native long SubMeshList_doGet(long jarg1, SubMeshList jarg1_, int jarg2);
  public final static native long SubMeshList_doSet(long jarg1, SubMeshList jarg1_, int jarg2, long jarg3, SubMesh jarg3_);
  public final static native void SubMeshList_doRemoveRange(long jarg1, SubMeshList jarg1_, int jarg2, int jarg3);
  public final static native void delete_SubMeshList(long jarg1);
  public final static native long new_MeshPtr__SWIG_1();
  public final static native long new_MeshPtr__SWIG_2(long jarg1, MeshPtr jarg1_);
  public final static native void delete_MeshPtr(long jarg1);
  public final static native long MeshPtr___ref__(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr___deref__(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_get(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_unique(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr_use_count(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_reset__SWIG_0(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_reset__SWIG_1(long jarg1, MeshPtr jarg1_, long jarg2, Mesh jarg2_);
  public final static native long MeshPtr_createSubMesh__SWIG_0(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_createSubMesh__SWIG_1(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_nameSubMesh(long jarg1, MeshPtr jarg1_, String jarg2, int jarg3);
  public final static native void MeshPtr_unnameSubMesh(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native int MeshPtr__getSubMeshIndex(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native long MeshPtr_getNumSubMeshes(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getSubMesh__SWIG_0(long jarg1, MeshPtr jarg1_, long jarg2);
  public final static native long MeshPtr_getSubMesh__SWIG_1(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_destroySubMesh__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_destroySubMesh__SWIG_1(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native long MeshPtr_getSubMeshes(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_sharedVertexData_set(long jarg1, MeshPtr jarg1_, long jarg2, VertexData jarg2_);
  public final static native long MeshPtr_sharedVertexData_get(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_sharedBlendIndexToBoneIndexMap_set(long jarg1, MeshPtr jarg1_, long jarg2);
  public final static native long MeshPtr_sharedBlendIndexToBoneIndexMap_get(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_clone__SWIG_0(long jarg1, MeshPtr jarg1_, String jarg2, String jarg3);
  public final static native long MeshPtr_clone__SWIG_1(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_reload__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_reload__SWIG_1(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getBounds(long jarg1, MeshPtr jarg1_);
  public final static native float MeshPtr_getBoundingSphereRadius(long jarg1, MeshPtr jarg1_);
  public final static native float MeshPtr_getBoneBoundingRadius(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__setBounds__SWIG_0(long jarg1, MeshPtr jarg1_, long jarg2, AxisAlignedBox jarg2_, boolean jarg3);
  public final static native void MeshPtr__setBounds__SWIG_1(long jarg1, MeshPtr jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void MeshPtr__setBoundingSphereRadius(long jarg1, MeshPtr jarg1_, float jarg2);
  public final static native void MeshPtr__setBoneBoundingRadius(long jarg1, MeshPtr jarg1_, float jarg2);
  public final static native void MeshPtr__computeBoneBoundingRadius(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__updateBoundsFromVertexBuffers__SWIG_0(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr__updateBoundsFromVertexBuffers__SWIG_1(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__calcBoundsFromVertexBuffer__SWIG_0(long jarg1, MeshPtr jarg1_, long jarg2, VertexData jarg2_, long jarg3, AxisAlignedBox jarg3_, long jarg4, boolean jarg5);
  public final static native void MeshPtr__calcBoundsFromVertexBuffer__SWIG_1(long jarg1, MeshPtr jarg1_, long jarg2, VertexData jarg2_, long jarg3, AxisAlignedBox jarg3_, long jarg4);
  public final static native void MeshPtr_setSkeletonName(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native boolean MeshPtr_hasSkeleton(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_hasVertexAnimation(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getSkeleton(long jarg1, MeshPtr jarg1_);
  public final static native String MeshPtr_getSkeletonName(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__initAnimationState(long jarg1, MeshPtr jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void MeshPtr__refreshAnimationState(long jarg1, MeshPtr jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void MeshPtr_addBoneAssignment(long jarg1, MeshPtr jarg1_, long jarg2, VertexBoneAssignment jarg2_);
  public final static native void MeshPtr_clearBoneAssignments(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__notifySkeleton(long jarg1, MeshPtr jarg1_, long jarg2, SkeletonPtr jarg2_);
  public final static native long MeshPtr_getBoneAssignmentIterator(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getBoneAssignments(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr_getNumLodLevels(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getLodLevel(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native int MeshPtr_getLodIndex(long jarg1, MeshPtr jarg1_, float jarg2);
  public final static native boolean MeshPtr_hasManualLodLevel(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_updateManualLodLevel(long jarg1, MeshPtr jarg1_, int jarg2, String jarg3);
  public final static native void MeshPtr__setLodInfo(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr__setLodUsage(long jarg1, MeshPtr jarg1_, int jarg2, long jarg3, MeshLodUsage jarg3_);
  public final static native void MeshPtr__setSubMeshLodFaceList(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3, long jarg4, IndexData jarg4_);
  public final static native boolean MeshPtr__isManualLodLevel(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_removeLodLevels(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_setHardwareBufferManager(long jarg1, MeshPtr jarg1_, long jarg2, HardwareBufferManagerBase jarg2_);
  public final static native long MeshPtr_getHardwareBufferManager(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_setVertexBufferPolicy__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2, boolean jarg3);
  public final static native void MeshPtr_setVertexBufferPolicy__SWIG_1(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_setIndexBufferPolicy__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2, boolean jarg3);
  public final static native void MeshPtr_setIndexBufferPolicy__SWIG_1(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native int MeshPtr_getVertexBufferUsage(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr_getIndexBufferUsage(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isVertexBufferShadowed(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isIndexBufferShadowed(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr__rationaliseBoneAssignments(long jarg1, MeshPtr jarg1_, long jarg2, long jarg3);
  public final static native void MeshPtr__compileBoneAssignments(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__updateCompiledBoneAssignments(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_buildTangentVectors__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native void MeshPtr_buildTangentVectors__SWIG_1(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5, boolean jarg6);
  public final static native void MeshPtr_buildTangentVectors__SWIG_2(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5);
  public final static native void MeshPtr_buildTangentVectors__SWIG_3(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void MeshPtr_buildTangentVectors__SWIG_4(long jarg1, MeshPtr jarg1_, int jarg2, int jarg3);
  public final static native void MeshPtr_buildTangentVectors__SWIG_5(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_buildTangentVectors__SWIG_6(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_suggestTangentVectorBuildParams(long jarg1, MeshPtr jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void MeshPtr_buildEdgeList(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_freeEdgeList(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_prepareForShadowVolume(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getEdgeList__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native long MeshPtr_getEdgeList__SWIG_1(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isPreparedForShadowVolumes(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isEdgeListBuilt(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_prepareMatricesForVertexBlend(long jarg1, MeshPtr jarg1_, long jarg2, long jarg3, Matrix4 jarg3_, long jarg4);
  public final static native void MeshPtr_softwareVertexBlend(long jarg1, MeshPtr jarg1_, long jarg2, VertexData jarg2_, long jarg3, VertexData jarg3_, long jarg4, long jarg5, boolean jarg6);
  public final static native void MeshPtr_softwareVertexMorph(long jarg1, MeshPtr jarg1_, float jarg2, long jarg3, HardwareVertexBufferPtr jarg3_, long jarg4, HardwareVertexBufferPtr jarg4_, long jarg5, VertexData jarg5_);
  public final static native void MeshPtr_softwareVertexPoseBlend(long jarg1, MeshPtr jarg1_, float jarg2, long jarg3, long jarg4, long jarg5, VertexData jarg5_);
  public final static native long MeshPtr_getSubMeshNameMap(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_setAutoBuildEdgeLists(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native boolean MeshPtr_getAutoBuildEdgeLists(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr_getSharedVertexDataAnimationType(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_getSharedVertexDataAnimationIncludesNormals(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_createAnimation(long jarg1, MeshPtr jarg1_, String jarg2, float jarg3);
  public final static native long MeshPtr_getAnimation__SWIG_0(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native long MeshPtr_getAnimation__SWIG_1(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native long MeshPtr__getAnimationImpl(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native boolean MeshPtr_hasAnimation(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_removeAnimation(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native int MeshPtr_getNumAnimations(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_removeAllAnimations(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getVertexDataByTrackHandle(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_updateMaterialForAllSubMeshes(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__determineAnimationTypes(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr__getAnimationTypesDirty(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_createPose__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2, String jarg3);
  public final static native long MeshPtr_createPose__SWIG_1(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_removePose__SWIG_0(long jarg1, MeshPtr jarg1_, int jarg2);
  public final static native void MeshPtr_removePose__SWIG_1(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_removeAllPoses(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getPoseList(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getLodStrategy(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_setLodStrategy(long jarg1, MeshPtr jarg1_, long jarg2);
  public final static native void MeshPtr_prepare__SWIG_0(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr_prepare__SWIG_1(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_load__SWIG_0(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr_load__SWIG_1(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isReloadable(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isManuallyLoaded(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_unload(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getSize(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_touch(long jarg1, MeshPtr jarg1_);
  public final static native String MeshPtr_getName(long jarg1, MeshPtr jarg1_);
  public final static native java.math.BigInteger MeshPtr_getHandle(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isPrepared(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isLoaded(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isLoading(long jarg1, MeshPtr jarg1_);
  public final static native int MeshPtr_getLoadingState(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_isBackgroundLoaded(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_setBackgroundLoaded(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr_escalateLoading(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_addListener(long jarg1, MeshPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native void MeshPtr_removeListener(long jarg1, MeshPtr jarg1_, long jarg2, Resource.Listener jarg2_);
  public final static native String MeshPtr_getGroup(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr_changeGroupOwnership(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native long MeshPtr_getCreator(long jarg1, MeshPtr jarg1_);
  public final static native String MeshPtr_getOrigin(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__notifyOrigin(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native long MeshPtr_getStateCount(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__dirtyState(long jarg1, MeshPtr jarg1_);
  public final static native void MeshPtr__fireLoadingComplete(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr__firePreparingComplete(long jarg1, MeshPtr jarg1_, boolean jarg2);
  public final static native void MeshPtr__fireUnloadingComplete(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getParamDictionary__SWIG_0(long jarg1, MeshPtr jarg1_);
  public final static native long MeshPtr_getParameters(long jarg1, MeshPtr jarg1_);
  public final static native boolean MeshPtr_setParameter(long jarg1, MeshPtr jarg1_, String jarg2, String jarg3);
  public final static native void MeshPtr_setParameterList(long jarg1, MeshPtr jarg1_, long jarg2);
  public final static native String MeshPtr_getParameter(long jarg1, MeshPtr jarg1_, String jarg2);
  public final static native void MeshPtr_copyParametersTo(long jarg1, MeshPtr jarg1_, long jarg2, StringInterface jarg2_);
  public final static native void MeshPtr_cleanupDictionary(long jarg1, MeshPtr jarg1_);
  public final static native long new_Mesh__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_Mesh__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_Mesh__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_Mesh(long jarg1);
  public final static native long Mesh_createSubMesh__SWIG_0(long jarg1, Mesh jarg1_);
  public final static native long Mesh_createSubMesh__SWIG_1(long jarg1, Mesh jarg1_, String jarg2);
  public final static native void Mesh_nameSubMesh(long jarg1, Mesh jarg1_, String jarg2, int jarg3);
  public final static native void Mesh_unnameSubMesh(long jarg1, Mesh jarg1_, String jarg2);
  public final static native int Mesh__getSubMeshIndex(long jarg1, Mesh jarg1_, String jarg2);
  public final static native long Mesh_getNumSubMeshes(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getSubMesh__SWIG_0(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_getSubMesh__SWIG_1(long jarg1, Mesh jarg1_, String jarg2);
  public final static native void Mesh_destroySubMesh__SWIG_0(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_destroySubMesh__SWIG_1(long jarg1, Mesh jarg1_, String jarg2);
  public final static native long Mesh_getSubMeshes(long jarg1, Mesh jarg1_);
  public final static native void Mesh_sharedVertexData_set(long jarg1, Mesh jarg1_, long jarg2, VertexData jarg2_);
  public final static native long Mesh_sharedVertexData_get(long jarg1, Mesh jarg1_);
  public final static native void Mesh_sharedBlendIndexToBoneIndexMap_set(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_sharedBlendIndexToBoneIndexMap_get(long jarg1, Mesh jarg1_);
  public final static native long Mesh_clone__SWIG_0(long jarg1, Mesh jarg1_, String jarg2, String jarg3);
  public final static native long Mesh_clone__SWIG_1(long jarg1, Mesh jarg1_, String jarg2);
  public final static native void Mesh_reload__SWIG_0(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_reload__SWIG_1(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getBounds(long jarg1, Mesh jarg1_);
  public final static native float Mesh_getBoundingSphereRadius(long jarg1, Mesh jarg1_);
  public final static native float Mesh_getBoneBoundingRadius(long jarg1, Mesh jarg1_);
  public final static native void Mesh__setBounds__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, AxisAlignedBox jarg2_, boolean jarg3);
  public final static native void Mesh__setBounds__SWIG_1(long jarg1, Mesh jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native void Mesh__setBoundingSphereRadius(long jarg1, Mesh jarg1_, float jarg2);
  public final static native void Mesh__setBoneBoundingRadius(long jarg1, Mesh jarg1_, float jarg2);
  public final static native void Mesh__computeBoneBoundingRadius(long jarg1, Mesh jarg1_);
  public final static native void Mesh__updateBoundsFromVertexBuffers__SWIG_0(long jarg1, Mesh jarg1_, boolean jarg2);
  public final static native void Mesh__updateBoundsFromVertexBuffers__SWIG_1(long jarg1, Mesh jarg1_);
  public final static native void Mesh__calcBoundsFromVertexBuffer__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, VertexData jarg2_, long jarg3, AxisAlignedBox jarg3_, long jarg4, boolean jarg5);
  public final static native void Mesh__calcBoundsFromVertexBuffer__SWIG_1(long jarg1, Mesh jarg1_, long jarg2, VertexData jarg2_, long jarg3, AxisAlignedBox jarg3_, long jarg4);
  public final static native void Mesh_setSkeletonName(long jarg1, Mesh jarg1_, String jarg2);
  public final static native boolean Mesh_hasSkeleton(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_hasVertexAnimation(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getSkeleton(long jarg1, Mesh jarg1_);
  public final static native String Mesh_getSkeletonName(long jarg1, Mesh jarg1_);
  public final static native void Mesh__initAnimationState(long jarg1, Mesh jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void Mesh__refreshAnimationState(long jarg1, Mesh jarg1_, long jarg2, AnimationStateSet jarg2_);
  public final static native void Mesh_addBoneAssignment(long jarg1, Mesh jarg1_, long jarg2, VertexBoneAssignment jarg2_);
  public final static native void Mesh_clearBoneAssignments(long jarg1, Mesh jarg1_);
  public final static native void Mesh__notifySkeleton(long jarg1, Mesh jarg1_, long jarg2, SkeletonPtr jarg2_);
  public final static native long Mesh_getBoneAssignmentIterator(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getBoneAssignments(long jarg1, Mesh jarg1_);
  public final static native int Mesh_getNumLodLevels(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getLodLevel(long jarg1, Mesh jarg1_, int jarg2);
  public final static native int Mesh_getLodIndex(long jarg1, Mesh jarg1_, float jarg2);
  public final static native boolean Mesh_hasManualLodLevel(long jarg1, Mesh jarg1_);
  public final static native void Mesh_updateManualLodLevel(long jarg1, Mesh jarg1_, int jarg2, String jarg3);
  public final static native void Mesh__setLodInfo(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh__setLodUsage(long jarg1, Mesh jarg1_, int jarg2, long jarg3, MeshLodUsage jarg3_);
  public final static native void Mesh__setSubMeshLodFaceList(long jarg1, Mesh jarg1_, int jarg2, int jarg3, long jarg4, IndexData jarg4_);
  public final static native boolean Mesh__isManualLodLevel(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_removeLodLevels(long jarg1, Mesh jarg1_);
  public final static native void Mesh_setHardwareBufferManager(long jarg1, Mesh jarg1_, long jarg2, HardwareBufferManagerBase jarg2_);
  public final static native long Mesh_getHardwareBufferManager(long jarg1, Mesh jarg1_);
  public final static native void Mesh_setVertexBufferPolicy__SWIG_0(long jarg1, Mesh jarg1_, int jarg2, boolean jarg3);
  public final static native void Mesh_setVertexBufferPolicy__SWIG_1(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_setIndexBufferPolicy__SWIG_0(long jarg1, Mesh jarg1_, int jarg2, boolean jarg3);
  public final static native void Mesh_setIndexBufferPolicy__SWIG_1(long jarg1, Mesh jarg1_, int jarg2);
  public final static native int Mesh_getVertexBufferUsage(long jarg1, Mesh jarg1_);
  public final static native int Mesh_getIndexBufferUsage(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_isVertexBufferShadowed(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_isIndexBufferShadowed(long jarg1, Mesh jarg1_);
  public final static native int Mesh__rationaliseBoneAssignments(long jarg1, Mesh jarg1_, long jarg2, long jarg3);
  public final static native void Mesh__compileBoneAssignments(long jarg1, Mesh jarg1_);
  public final static native void Mesh__updateCompiledBoneAssignments(long jarg1, Mesh jarg1_);
  public final static native void Mesh_mergeAdjacentTexcoords(long jarg1, Mesh jarg1_, int jarg2, int jarg3);
  public final static native void Mesh_buildTangentVectors__SWIG_0(long jarg1, Mesh jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native void Mesh_buildTangentVectors__SWIG_1(long jarg1, Mesh jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5, boolean jarg6);
  public final static native void Mesh_buildTangentVectors__SWIG_2(long jarg1, Mesh jarg1_, int jarg2, int jarg3, int jarg4, boolean jarg5);
  public final static native void Mesh_buildTangentVectors__SWIG_3(long jarg1, Mesh jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void Mesh_buildTangentVectors__SWIG_4(long jarg1, Mesh jarg1_, int jarg2, int jarg3);
  public final static native void Mesh_buildTangentVectors__SWIG_5(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_buildTangentVectors__SWIG_6(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_suggestTangentVectorBuildParams(long jarg1, Mesh jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void Mesh_buildEdgeList(long jarg1, Mesh jarg1_);
  public final static native void Mesh_freeEdgeList(long jarg1, Mesh jarg1_);
  public final static native void Mesh_prepareForShadowVolume(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getEdgeList__SWIG_1(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_isPreparedForShadowVolumes(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_isEdgeListBuilt(long jarg1, Mesh jarg1_);
  public final static native void Mesh_prepareMatricesForVertexBlend(long jarg1, long jarg2, Matrix4 jarg2_, long jarg3);
  public final static native void Mesh_softwareVertexBlend(long jarg1, VertexData jarg1_, long jarg2, VertexData jarg2_, long jarg3, long jarg4, boolean jarg5);
  public final static native void Mesh_softwareVertexMorph(float jarg1, long jarg2, HardwareVertexBufferPtr jarg2_, long jarg3, HardwareVertexBufferPtr jarg3_, long jarg4, VertexData jarg4_);
  public final static native void Mesh_softwareVertexPoseBlend(float jarg1, long jarg2, long jarg3, long jarg4, VertexData jarg4_);
  public final static native long Mesh_getSubMeshNameMap(long jarg1, Mesh jarg1_);
  public final static native void Mesh_setAutoBuildEdgeLists(long jarg1, Mesh jarg1_, boolean jarg2);
  public final static native boolean Mesh_getAutoBuildEdgeLists(long jarg1, Mesh jarg1_);
  public final static native int Mesh_getSharedVertexDataAnimationType(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh_getSharedVertexDataAnimationIncludesNormals(long jarg1, Mesh jarg1_);
  public final static native long Mesh_createAnimation(long jarg1, Mesh jarg1_, String jarg2, float jarg3);
  public final static native long Mesh_getAnimation__SWIG_0(long jarg1, Mesh jarg1_, String jarg2);
  public final static native long Mesh__getAnimationImpl(long jarg1, Mesh jarg1_, String jarg2);
  public final static native boolean Mesh_hasAnimation(long jarg1, Mesh jarg1_, String jarg2);
  public final static native void Mesh_removeAnimation(long jarg1, Mesh jarg1_, String jarg2);
  public final static native int Mesh_getNumAnimations(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getAnimation__SWIG_1(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_removeAllAnimations(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getVertexDataByTrackHandle(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_updateMaterialForAllSubMeshes(long jarg1, Mesh jarg1_);
  public final static native void Mesh__determineAnimationTypes(long jarg1, Mesh jarg1_);
  public final static native boolean Mesh__getAnimationTypesDirty(long jarg1, Mesh jarg1_);
  public final static native long Mesh_createPose__SWIG_0(long jarg1, Mesh jarg1_, int jarg2, String jarg3);
  public final static native long Mesh_createPose__SWIG_1(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_removePose__SWIG_0(long jarg1, Mesh jarg1_, int jarg2);
  public final static native void Mesh_removePose__SWIG_1(long jarg1, Mesh jarg1_, String jarg2);
  public final static native void Mesh_removeAllPoses(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getPoseList(long jarg1, Mesh jarg1_);
  public final static native long Mesh_getLodStrategy(long jarg1, Mesh jarg1_);
  public final static native void Mesh_setLodStrategy(long jarg1, Mesh jarg1_, long jarg2);
  public final static native void MeshLodUsage_userValue_set(long jarg1, MeshLodUsage jarg1_, float jarg2);
  public final static native float MeshLodUsage_userValue_get(long jarg1, MeshLodUsage jarg1_);
  public final static native void MeshLodUsage_value_set(long jarg1, MeshLodUsage jarg1_, float jarg2);
  public final static native float MeshLodUsage_value_get(long jarg1, MeshLodUsage jarg1_);
  public final static native void MeshLodUsage_manualName_set(long jarg1, MeshLodUsage jarg1_, String jarg2);
  public final static native String MeshLodUsage_manualName_get(long jarg1, MeshLodUsage jarg1_);
  public final static native void MeshLodUsage_manualMesh_set(long jarg1, MeshLodUsage jarg1_, long jarg2, MeshPtr jarg2_);
  public final static native long MeshLodUsage_manualMesh_get(long jarg1, MeshLodUsage jarg1_);
  public final static native void MeshLodUsage_edgeData_set(long jarg1, MeshLodUsage jarg1_, long jarg2);
  public final static native long MeshLodUsage_edgeData_get(long jarg1, MeshLodUsage jarg1_);
  public final static native long new_MeshLodUsage();
  public final static native void delete_MeshLodUsage(long jarg1);
  public final static native long new_SubMesh();
  public final static native void delete_SubMesh(long jarg1);
  public final static native void SubMesh_useSharedVertices_set(long jarg1, SubMesh jarg1_, boolean jarg2);
  public final static native boolean SubMesh_useSharedVertices_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_operationType_set(long jarg1, SubMesh jarg1_, int jarg2);
  public final static native int SubMesh_operationType_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_vertexData_set(long jarg1, SubMesh jarg1_, long jarg2, VertexData jarg2_);
  public final static native long SubMesh_vertexData_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_indexData_set(long jarg1, SubMesh jarg1_, long jarg2, IndexData jarg2_);
  public final static native long SubMesh_indexData_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_blendIndexToBoneIndexMap_set(long jarg1, SubMesh jarg1_, long jarg2);
  public final static native long SubMesh_blendIndexToBoneIndexMap_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_mLodFaceList_set(long jarg1, SubMesh jarg1_, long jarg2);
  public final static native long SubMesh_mLodFaceList_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_extremityPoints_set(long jarg1, SubMesh jarg1_, long jarg2);
  public final static native long SubMesh_extremityPoints_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_parent_set(long jarg1, SubMesh jarg1_, long jarg2, Mesh jarg2_);
  public final static native long SubMesh_parent_get(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_setMaterialName__SWIG_0(long jarg1, SubMesh jarg1_, String jarg2, String jarg3);
  public final static native void SubMesh_setMaterialName__SWIG_1(long jarg1, SubMesh jarg1_, String jarg2);
  public final static native String SubMesh_getMaterialName(long jarg1, SubMesh jarg1_);
  public final static native boolean SubMesh_isMatInitialised(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh__getRenderOperation__SWIG_0(long jarg1, SubMesh jarg1_, long jarg2, RenderOperation jarg2_, int jarg3);
  public final static native void SubMesh__getRenderOperation__SWIG_1(long jarg1, SubMesh jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void SubMesh_addBoneAssignment(long jarg1, SubMesh jarg1_, long jarg2, VertexBoneAssignment jarg2_);
  public final static native void SubMesh_clearBoneAssignments(long jarg1, SubMesh jarg1_);
  public final static native long SubMesh_getBoneAssignmentIterator(long jarg1, SubMesh jarg1_);
  public final static native long SubMesh_getBoneAssignments(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh__compileBoneAssignments(long jarg1, SubMesh jarg1_);
  public final static native long SubMesh_getAliasTextureIterator(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_addTextureAlias(long jarg1, SubMesh jarg1_, String jarg2, String jarg3);
  public final static native void SubMesh_removeTextureAlias(long jarg1, SubMesh jarg1_, String jarg2);
  public final static native void SubMesh_removeAllTextureAliases(long jarg1, SubMesh jarg1_);
  public final static native boolean SubMesh_hasTextureAliases(long jarg1, SubMesh jarg1_);
  public final static native long SubMesh_getTextureAliasCount(long jarg1, SubMesh jarg1_);
  public final static native boolean SubMesh_updateMaterialUsingTextureAliases(long jarg1, SubMesh jarg1_);
  public final static native int SubMesh_getVertexAnimationType(long jarg1, SubMesh jarg1_);
  public final static native boolean SubMesh_getVertexAnimationIncludesNormals(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_generateExtremes(long jarg1, SubMesh jarg1_, long jarg2);
  public final static native boolean SubMesh_isBuildEdgesEnabled(long jarg1, SubMesh jarg1_);
  public final static native void SubMesh_setBuildEdgesEnabled(long jarg1, SubMesh jarg1_, boolean jarg2);
  public final static native long SubMesh_clone__SWIG_0(long jarg1, SubMesh jarg1_, String jarg2, long jarg3, Mesh jarg3_);
  public final static native long SubMesh_clone__SWIG_1(long jarg1, SubMesh jarg1_, String jarg2);
  public final static native long new_StaticGeometry_OptimisedSubMeshGeometry();
  public final static native void delete_StaticGeometry_OptimisedSubMeshGeometry(long jarg1);
  public final static native void StaticGeometry_OptimisedSubMeshGeometry_vertexData_set(long jarg1, StaticGeometry.OptimisedSubMeshGeometry jarg1_, long jarg2, VertexData jarg2_);
  public final static native long StaticGeometry_OptimisedSubMeshGeometry_vertexData_get(long jarg1, StaticGeometry.OptimisedSubMeshGeometry jarg1_);
  public final static native void StaticGeometry_OptimisedSubMeshGeometry_indexData_set(long jarg1, StaticGeometry.OptimisedSubMeshGeometry jarg1_, long jarg2, IndexData jarg2_);
  public final static native long StaticGeometry_OptimisedSubMeshGeometry_indexData_get(long jarg1, StaticGeometry.OptimisedSubMeshGeometry jarg1_);
  public final static native void StaticGeometry_SubMeshLodGeometryLink_vertexData_set(long jarg1, StaticGeometry.SubMeshLodGeometryLink jarg1_, long jarg2, VertexData jarg2_);
  public final static native long StaticGeometry_SubMeshLodGeometryLink_vertexData_get(long jarg1, StaticGeometry.SubMeshLodGeometryLink jarg1_);
  public final static native void StaticGeometry_SubMeshLodGeometryLink_indexData_set(long jarg1, StaticGeometry.SubMeshLodGeometryLink jarg1_, long jarg2, IndexData jarg2_);
  public final static native long StaticGeometry_SubMeshLodGeometryLink_indexData_get(long jarg1, StaticGeometry.SubMeshLodGeometryLink jarg1_);
  public final static native long new_StaticGeometry_SubMeshLodGeometryLink();
  public final static native void delete_StaticGeometry_SubMeshLodGeometryLink(long jarg1);
  public final static native void StaticGeometry_QueuedSubMesh_submesh_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2, SubMesh jarg2_);
  public final static native long StaticGeometry_QueuedSubMesh_submesh_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_geometryLodList_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2);
  public final static native long StaticGeometry_QueuedSubMesh_geometryLodList_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_materialName_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, String jarg2);
  public final static native String StaticGeometry_QueuedSubMesh_materialName_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_position_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_QueuedSubMesh_position_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_orientation_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long StaticGeometry_QueuedSubMesh_orientation_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_scale_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_QueuedSubMesh_scale_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native void StaticGeometry_QueuedSubMesh_worldBounds_set(long jarg1, StaticGeometry.QueuedSubMesh jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long StaticGeometry_QueuedSubMesh_worldBounds_get(long jarg1, StaticGeometry.QueuedSubMesh jarg1_);
  public final static native long new_StaticGeometry_QueuedSubMesh();
  public final static native void delete_StaticGeometry_QueuedSubMesh(long jarg1);
  public final static native void StaticGeometry_QueuedGeometry_geometry_set(long jarg1, StaticGeometry.QueuedGeometry jarg1_, long jarg2, StaticGeometry.SubMeshLodGeometryLink jarg2_);
  public final static native long StaticGeometry_QueuedGeometry_geometry_get(long jarg1, StaticGeometry.QueuedGeometry jarg1_);
  public final static native void StaticGeometry_QueuedGeometry_position_set(long jarg1, StaticGeometry.QueuedGeometry jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_QueuedGeometry_position_get(long jarg1, StaticGeometry.QueuedGeometry jarg1_);
  public final static native void StaticGeometry_QueuedGeometry_orientation_set(long jarg1, StaticGeometry.QueuedGeometry jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long StaticGeometry_QueuedGeometry_orientation_get(long jarg1, StaticGeometry.QueuedGeometry jarg1_);
  public final static native void StaticGeometry_QueuedGeometry_scale_set(long jarg1, StaticGeometry.QueuedGeometry jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_QueuedGeometry_scale_get(long jarg1, StaticGeometry.QueuedGeometry jarg1_);
  public final static native long new_StaticGeometry_QueuedGeometry();
  public final static native void delete_StaticGeometry_QueuedGeometry(long jarg1);
  public final static native long new_StaticGeometry_GeometryBucket(long jarg1, StaticGeometry.MaterialBucket jarg1_, String jarg2, long jarg3, VertexData jarg3_, long jarg4, IndexData jarg4_);
  public final static native void delete_StaticGeometry_GeometryBucket(long jarg1);
  public final static native long StaticGeometry_GeometryBucket_getParent(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native long StaticGeometry_GeometryBucket_getVertexData(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native long StaticGeometry_GeometryBucket_getIndexData(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native long StaticGeometry_GeometryBucket_getMaterial(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native long StaticGeometry_GeometryBucket_getTechnique(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native void StaticGeometry_GeometryBucket_getRenderOperation(long jarg1, StaticGeometry.GeometryBucket jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void StaticGeometry_GeometryBucket_getWorldTransforms(long jarg1, StaticGeometry.GeometryBucket jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native float StaticGeometry_GeometryBucket_getSquaredViewDepth(long jarg1, StaticGeometry.GeometryBucket jarg1_, long jarg2, Camera jarg2_);
  public final static native long StaticGeometry_GeometryBucket_getLights(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native boolean StaticGeometry_GeometryBucket_getCastsShadows(long jarg1, StaticGeometry.GeometryBucket jarg1_);
  public final static native boolean StaticGeometry_GeometryBucket_assign(long jarg1, StaticGeometry.GeometryBucket jarg1_, long jarg2, StaticGeometry.QueuedGeometry jarg2_);
  public final static native void StaticGeometry_GeometryBucket_build(long jarg1, StaticGeometry.GeometryBucket jarg1_, boolean jarg2);
  public final static native void StaticGeometry_GeometryBucket_dump(long jarg1, StaticGeometry.GeometryBucket jarg1_, long jarg2);
  public final static native long new_StaticGeometry_MaterialBucket(long jarg1, StaticGeometry.LODBucket jarg1_, String jarg2);
  public final static native void delete_StaticGeometry_MaterialBucket(long jarg1);
  public final static native long StaticGeometry_MaterialBucket_getParent(long jarg1, StaticGeometry.MaterialBucket jarg1_);
  public final static native String StaticGeometry_MaterialBucket_getMaterialName(long jarg1, StaticGeometry.MaterialBucket jarg1_);
  public final static native void StaticGeometry_MaterialBucket_assign(long jarg1, StaticGeometry.MaterialBucket jarg1_, long jarg2, StaticGeometry.QueuedGeometry jarg2_);
  public final static native void StaticGeometry_MaterialBucket_build(long jarg1, StaticGeometry.MaterialBucket jarg1_, boolean jarg2);
  public final static native void StaticGeometry_MaterialBucket_addRenderables(long jarg1, StaticGeometry.MaterialBucket jarg1_, long jarg2, RenderQueue jarg2_, short jarg3, float jarg4);
  public final static native long StaticGeometry_MaterialBucket_getMaterial(long jarg1, StaticGeometry.MaterialBucket jarg1_);
  public final static native long StaticGeometry_MaterialBucket_getGeometryIterator(long jarg1, StaticGeometry.MaterialBucket jarg1_);
  public final static native long StaticGeometry_MaterialBucket_getCurrentTechnique(long jarg1, StaticGeometry.MaterialBucket jarg1_);
  public final static native void StaticGeometry_MaterialBucket_dump(long jarg1, StaticGeometry.MaterialBucket jarg1_, long jarg2);
  public final static native void StaticGeometry_MaterialBucket_visitRenderables(long jarg1, StaticGeometry.MaterialBucket jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native long new_StaticGeometry_LODBucket(long jarg1, StaticGeometry.Region jarg1_, int jarg2, float jarg3);
  public final static native void delete_StaticGeometry_LODBucket(long jarg1);
  public final static native long StaticGeometry_LODBucket_getParent(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native int StaticGeometry_LODBucket_getLod(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native float StaticGeometry_LODBucket_getLodValue(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native void StaticGeometry_LODBucket_assign(long jarg1, StaticGeometry.LODBucket jarg1_, long jarg2, StaticGeometry.QueuedSubMesh jarg2_, int jarg3);
  public final static native void StaticGeometry_LODBucket_build(long jarg1, StaticGeometry.LODBucket jarg1_, boolean jarg2);
  public final static native void StaticGeometry_LODBucket_addRenderables(long jarg1, StaticGeometry.LODBucket jarg1_, long jarg2, RenderQueue jarg2_, short jarg3, float jarg4);
  public final static native long StaticGeometry_LODBucket_getMaterialIterator(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native void StaticGeometry_LODBucket_dump(long jarg1, StaticGeometry.LODBucket jarg1_, long jarg2);
  public final static native void StaticGeometry_LODBucket_visitRenderables(long jarg1, StaticGeometry.LODBucket jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native long StaticGeometry_LODBucket_getEdgeList(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native long StaticGeometry_LODBucket_getShadowRenderableList(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native boolean StaticGeometry_LODBucket_isVertexProgramInUse(long jarg1, StaticGeometry.LODBucket jarg1_);
  public final static native void StaticGeometry_LODBucket_updateShadowRenderables__SWIG_0(long jarg1, StaticGeometry.LODBucket jarg1_, int jarg2, long jarg3, Vector4 jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, boolean jarg5, float jarg6, long jarg7);
  public final static native void StaticGeometry_LODBucket_updateShadowRenderables__SWIG_1(long jarg1, StaticGeometry.LODBucket jarg1_, int jarg2, long jarg3, Vector4 jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, boolean jarg5, float jarg6);
  public final static native long new_StaticGeometry_Region(long jarg1, StaticGeometry jarg1_, String jarg2, long jarg3, SceneManager jarg3_, long jarg4, long jarg5, Vector3 jarg5_);
  public final static native void delete_StaticGeometry_Region(long jarg1);
  public final static native long StaticGeometry_Region_getParent(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region_assign(long jarg1, StaticGeometry.Region jarg1_, long jarg2, StaticGeometry.QueuedSubMesh jarg2_);
  public final static native void StaticGeometry_Region_build(long jarg1, StaticGeometry.Region jarg1_, boolean jarg2);
  public final static native long StaticGeometry_Region_getID(long jarg1, StaticGeometry.Region jarg1_);
  public final static native long StaticGeometry_Region_getCentre(long jarg1, StaticGeometry.Region jarg1_);
  public final static native String StaticGeometry_Region_getMovableType(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region__notifyCurrentCamera(long jarg1, StaticGeometry.Region jarg1_, long jarg2, Camera jarg2_);
  public final static native long StaticGeometry_Region_getBoundingBox(long jarg1, StaticGeometry.Region jarg1_);
  public final static native float StaticGeometry_Region_getBoundingRadius(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region__updateRenderQueue(long jarg1, StaticGeometry.Region jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void StaticGeometry_Region_visitRenderables__SWIG_0(long jarg1, StaticGeometry.Region jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void StaticGeometry_Region_visitRenderables__SWIG_1(long jarg1, StaticGeometry.Region jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native boolean StaticGeometry_Region_isVisible(long jarg1, StaticGeometry.Region jarg1_);
  public final static native long StaticGeometry_Region_getTypeFlags(long jarg1, StaticGeometry.Region jarg1_);
  public final static native long StaticGeometry_Region_getLODIterator(long jarg1, StaticGeometry.Region jarg1_);
  public final static native long StaticGeometry_Region_getShadowVolumeRenderableIterator__SWIG_0(long jarg1, StaticGeometry.Region jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7, long jarg8);
  public final static native long StaticGeometry_Region_getShadowVolumeRenderableIterator__SWIG_1(long jarg1, StaticGeometry.Region jarg1_, int jarg2, long jarg3, Light jarg3_, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5, boolean jarg6, float jarg7);
  public final static native long StaticGeometry_Region_getEdgeList(long jarg1, StaticGeometry.Region jarg1_);
  public final static native boolean StaticGeometry_Region_hasEdgeList(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region__releaseManualHardwareResources(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region__restoreManualHardwareResources(long jarg1, StaticGeometry.Region jarg1_);
  public final static native void StaticGeometry_Region_dump(long jarg1, StaticGeometry.Region jarg1_, long jarg2);
  public final static native long new_StaticGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void delete_StaticGeometry(long jarg1);
  public final static native String StaticGeometry_getName(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_addEntity__SWIG_0(long jarg1, StaticGeometry jarg1_, long jarg2, Entity jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_, long jarg5, Vector3 jarg5_);
  public final static native void StaticGeometry_addEntity__SWIG_1(long jarg1, StaticGeometry jarg1_, long jarg2, Entity jarg2_, long jarg3, Vector3 jarg3_, long jarg4, Quaternion jarg4_);
  public final static native void StaticGeometry_addEntity__SWIG_2(long jarg1, StaticGeometry jarg1_, long jarg2, Entity jarg2_, long jarg3, Vector3 jarg3_);
  public final static native void StaticGeometry_addSceneNode(long jarg1, StaticGeometry jarg1_, long jarg2, SceneNode jarg2_);
  public final static native void StaticGeometry_build(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_destroy(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_reset(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setRenderingDistance(long jarg1, StaticGeometry jarg1_, float jarg2);
  public final static native float StaticGeometry_getRenderingDistance(long jarg1, StaticGeometry jarg1_);
  public final static native float StaticGeometry_getSquaredRenderingDistance(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setVisible(long jarg1, StaticGeometry jarg1_, boolean jarg2);
  public final static native boolean StaticGeometry_isVisible(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setCastShadows(long jarg1, StaticGeometry jarg1_, boolean jarg2);
  public final static native boolean StaticGeometry_getCastShadows(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setRegionDimensions(long jarg1, StaticGeometry jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_getRegionDimensions(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setOrigin(long jarg1, StaticGeometry jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long StaticGeometry_getOrigin(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setVisibilityFlags(long jarg1, StaticGeometry jarg1_, long jarg2);
  public final static native long StaticGeometry_getVisibilityFlags(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_setRenderQueueGroup(long jarg1, StaticGeometry jarg1_, short jarg2);
  public final static native short StaticGeometry_getRenderQueueGroup(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_visitRenderables__SWIG_0(long jarg1, StaticGeometry jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void StaticGeometry_visitRenderables__SWIG_1(long jarg1, StaticGeometry jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native long StaticGeometry_getRegionIterator(long jarg1, StaticGeometry jarg1_);
  public final static native void StaticGeometry_dump(long jarg1, StaticGeometry jarg1_, String jarg2);
  public final static native long new_PatchSurface();
  public final static native void delete_PatchSurface(long jarg1);
  public final static native int PatchSurface_AUTO_LEVEL_get();
  public final static native void PatchSurface_defineSurface__SWIG_0(long jarg1, PatchSurface jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8, int jarg9);
  public final static native void PatchSurface_defineSurface__SWIG_1(long jarg1, PatchSurface jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8);
  public final static native void PatchSurface_defineSurface__SWIG_2(long jarg1, PatchSurface jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void PatchSurface_defineSurface__SWIG_3(long jarg1, PatchSurface jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, int jarg6);
  public final static native void PatchSurface_defineSurface__SWIG_4(long jarg1, PatchSurface jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5);
  public final static native long PatchSurface_getRequiredVertexCount(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getRequiredIndexCount(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getCurrentIndexCount(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getIndexOffset(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getVertexOffset(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getBounds(long jarg1, PatchSurface jarg1_);
  public final static native float PatchSurface_getBoundingSphereRadius(long jarg1, PatchSurface jarg1_);
  public final static native void PatchSurface_build(long jarg1, PatchSurface jarg1_, long jarg2, HardwareVertexBufferPtr jarg2_, long jarg3, long jarg4, HardwareIndexBufferPtr jarg4_, long jarg5);
  public final static native void PatchSurface_setSubdivisionFactor(long jarg1, PatchSurface jarg1_, float jarg2);
  public final static native float PatchSurface_getSubdivisionFactor(long jarg1, PatchSurface jarg1_);
  public final static native long PatchSurface_getControlPointBuffer(long jarg1, PatchSurface jarg1_);
  public final static native void PatchSurface_notifyControlPointBufferDeallocated(long jarg1, PatchSurface jarg1_);
  public final static native long new_PatchMesh(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void PatchMesh_update(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void PatchMesh_define__SWIG_0(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, boolean jarg11, boolean jarg12);
  public final static native void PatchMesh_define__SWIG_1(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, boolean jarg11);
  public final static native void PatchMesh_define__SWIG_2(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native void PatchMesh_define__SWIG_3(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void PatchMesh_define__SWIG_4(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void PatchMesh_define__SWIG_5(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void PatchMesh_define__SWIG_6(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native void PatchMesh_define__SWIG_7(long jarg1, PatchMesh jarg1_, long jarg2, long jarg3, VertexDeclaration jarg3_, long jarg4, long jarg5);
  public final static native void PatchMesh_setSubdivision(long jarg1, PatchMesh jarg1_, float jarg2);
  public final static native void delete_PatchMesh(long jarg1);
  public final static native long new_MeshManager();
  public final static native void delete_MeshManager(long jarg1);
  public final static native void MeshManager__initialise(long jarg1, MeshManager jarg1_);
  public final static native long MeshManager_getByName(long jarg1, MeshManager jarg1_, String jarg2, String jarg3);
  public final static native long MeshManager_create__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long MeshManager_create__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long MeshManager_create__SWIG_2(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long MeshManager_create__SWIG_3(long jarg1, MeshManager jarg1_, String jarg2, String jarg3);
  public final static native long MeshManager_createManual__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, ManualResourceLoader jarg4_);
  public final static native long MeshManager_createManual__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3);
  public final static native long MeshManager_createPlane__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12, long jarg13, Vector3 jarg13_, int jarg14, int jarg15, boolean jarg16, boolean jarg17);
  public final static native long MeshManager_createPlane__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12, long jarg13, Vector3 jarg13_, int jarg14, int jarg15, boolean jarg16);
  public final static native long MeshManager_createPlane__SWIG_2(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12, long jarg13, Vector3 jarg13_, int jarg14, int jarg15);
  public final static native long MeshManager_createPlane__SWIG_3(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12, long jarg13, Vector3 jarg13_, int jarg14);
  public final static native long MeshManager_createPlane__SWIG_4(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12, long jarg13, Vector3 jarg13_);
  public final static native long MeshManager_createPlane__SWIG_5(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11, float jarg12);
  public final static native long MeshManager_createPlane__SWIG_6(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10, float jarg11);
  public final static native long MeshManager_createPlane__SWIG_7(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9, int jarg10);
  public final static native long MeshManager_createPlane__SWIG_8(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native long MeshManager_createPlane__SWIG_9(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7, int jarg8);
  public final static native long MeshManager_createPlane__SWIG_10(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, int jarg7);
  public final static native long MeshManager_createPlane__SWIG_11(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_, int jarg16, int jarg17, boolean jarg18, boolean jarg19, int jarg20);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_, int jarg16, int jarg17, boolean jarg18, boolean jarg19);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_2(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_, int jarg16, int jarg17, boolean jarg18);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_3(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_, int jarg16, int jarg17);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_4(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_, int jarg16);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_5(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, long jarg15, Quaternion jarg15_);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_6(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_7(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_8(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_9(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_10(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_11(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_12(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8);
  public final static native long MeshManager_createCurvedIllusionPlane__SWIG_13(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native long MeshManager_createCurvedPlane__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, int jarg15, int jarg16, boolean jarg17, boolean jarg18);
  public final static native long MeshManager_createCurvedPlane__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, int jarg15, int jarg16, boolean jarg17);
  public final static native long MeshManager_createCurvedPlane__SWIG_2(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, int jarg15, int jarg16);
  public final static native long MeshManager_createCurvedPlane__SWIG_3(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_, int jarg15);
  public final static native long MeshManager_createCurvedPlane__SWIG_4(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13, long jarg14, Vector3 jarg14_);
  public final static native long MeshManager_createCurvedPlane__SWIG_5(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12, float jarg13);
  public final static native long MeshManager_createCurvedPlane__SWIG_6(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11, float jarg12);
  public final static native long MeshManager_createCurvedPlane__SWIG_7(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10, int jarg11);
  public final static native long MeshManager_createCurvedPlane__SWIG_8(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9, boolean jarg10);
  public final static native long MeshManager_createCurvedPlane__SWIG_9(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8, int jarg9);
  public final static native long MeshManager_createCurvedPlane__SWIG_10(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7, int jarg8);
  public final static native long MeshManager_createCurvedPlane__SWIG_11(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native long MeshManager_createCurvedPlane__SWIG_12(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, Plane jarg4_, float jarg5, float jarg6);
  public final static native long MeshManager_createBezierPatch__SWIG_0(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11, int jarg12, boolean jarg13, boolean jarg14);
  public final static native long MeshManager_createBezierPatch__SWIG_1(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11, int jarg12, boolean jarg13);
  public final static native long MeshManager_createBezierPatch__SWIG_2(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11, int jarg12);
  public final static native long MeshManager_createBezierPatch__SWIG_3(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11);
  public final static native long MeshManager_createBezierPatch__SWIG_4(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native long MeshManager_createBezierPatch__SWIG_5(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long MeshManager_createBezierPatch__SWIG_6(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7, long jarg8);
  public final static native long MeshManager_createBezierPatch__SWIG_7(long jarg1, MeshManager jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, VertexDeclaration jarg5_, long jarg6, long jarg7);
  public final static native void MeshManager_setPrepareAllMeshesForShadowVolumes(long jarg1, MeshManager jarg1_, boolean jarg2);
  public final static native boolean MeshManager_getPrepareAllMeshesForShadowVolumes(long jarg1, MeshManager jarg1_);
  public final static native long MeshManager_getSingleton();
  public final static native int MeshManager_getBlendWeightsBaseElementType(long jarg1, MeshManager jarg1_);
  public final static native void MeshManager_setBlendWeightsBaseElementType(long jarg1, MeshManager jarg1_, int jarg2);
  public final static native float MeshManager_getBoundsPaddingFactor(long jarg1, MeshManager jarg1_);
  public final static native void MeshManager_setBoundsPaddingFactor(long jarg1, MeshManager jarg1_, float jarg2);
  public final static native void MeshManager_setListener(long jarg1, MeshManager jarg1_, long jarg2);
  public final static native long MeshManager_getListener(long jarg1, MeshManager jarg1_);
  public final static native void MeshManager_loadResource(long jarg1, MeshManager jarg1_, long jarg2, Resource jarg2_);
  public final static native long new_TextureUnitStates__SWIG_0();
  public final static native long new_TextureUnitStates__SWIG_1(long jarg1, TextureUnitStates jarg1_);
  public final static native long TextureUnitStates_capacity(long jarg1, TextureUnitStates jarg1_);
  public final static native void TextureUnitStates_reserve(long jarg1, TextureUnitStates jarg1_, long jarg2);
  public final static native boolean TextureUnitStates_isEmpty(long jarg1, TextureUnitStates jarg1_);
  public final static native void TextureUnitStates_clear(long jarg1, TextureUnitStates jarg1_);
  public final static native long new_TextureUnitStates__SWIG_2(int jarg1);
  public final static native long new_TextureUnitStates__SWIG_3(int jarg1, long jarg2, TextureUnitState jarg2_);
  public final static native int TextureUnitStates_doSize(long jarg1, TextureUnitStates jarg1_);
  public final static native void TextureUnitStates_doAdd__SWIG_0(long jarg1, TextureUnitStates jarg1_, long jarg2, TextureUnitState jarg2_);
  public final static native void TextureUnitStates_doAdd__SWIG_1(long jarg1, TextureUnitStates jarg1_, int jarg2, long jarg3, TextureUnitState jarg3_);
  public final static native long TextureUnitStates_doRemove(long jarg1, TextureUnitStates jarg1_, int jarg2);
  public final static native long TextureUnitStates_doGet(long jarg1, TextureUnitStates jarg1_, int jarg2);
  public final static native long TextureUnitStates_doSet(long jarg1, TextureUnitStates jarg1_, int jarg2, long jarg3, TextureUnitState jarg3_);
  public final static native void TextureUnitStates_doRemoveRange(long jarg1, TextureUnitStates jarg1_, int jarg2, int jarg3);
  public final static native void delete_TextureUnitStates(long jarg1);
  public final static native void delete_Pass_HashFunc(long jarg1);
  public final static native long new_Pass__SWIG_0(long jarg1, Technique jarg1_, int jarg2);
  public final static native long new_Pass__SWIG_1(long jarg1, Technique jarg1_, int jarg2, long jarg3, Pass jarg3_);
  public final static native void delete_Pass(long jarg1);
  public final static native boolean Pass_isProgrammable(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasVertexProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasFragmentProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasGeometryProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasTessellationHullProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasTessellationDomainProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasComputeProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasShadowCasterVertexProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasShadowCasterFragmentProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasShadowReceiverVertexProgram(long jarg1, Pass jarg1_);
  public final static native boolean Pass_hasShadowReceiverFragmentProgram(long jarg1, Pass jarg1_);
  public final static native long Pass_calculateSize(long jarg1, Pass jarg1_);
  public final static native int Pass_getIndex(long jarg1, Pass jarg1_);
  public final static native void Pass_setName(long jarg1, Pass jarg1_, String jarg2);
  public final static native String Pass_getName(long jarg1, Pass jarg1_);
  public final static native void Pass_setAmbient__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Pass_setAmbient__SWIG_1(long jarg1, Pass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Pass_setDiffuse__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Pass_setDiffuse__SWIG_1(long jarg1, Pass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Pass_setSpecular__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Pass_setSpecular__SWIG_1(long jarg1, Pass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Pass_setShininess(long jarg1, Pass jarg1_, float jarg2);
  public final static native void Pass_setSelfIllumination__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Pass_setEmissive__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Pass_setSelfIllumination__SWIG_1(long jarg1, Pass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Pass_setEmissive__SWIG_1(long jarg1, Pass jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Pass_setVertexColourTracking(long jarg1, Pass jarg1_, int jarg2);
  public final static native float Pass_getPointSize(long jarg1, Pass jarg1_);
  public final static native void Pass_setPointSize(long jarg1, Pass jarg1_, float jarg2);
  public final static native void Pass_setPointSpritesEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getPointSpritesEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setPointAttenuation__SWIG_0(long jarg1, Pass jarg1_, boolean jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Pass_setPointAttenuation__SWIG_1(long jarg1, Pass jarg1_, boolean jarg2, float jarg3, float jarg4);
  public final static native void Pass_setPointAttenuation__SWIG_2(long jarg1, Pass jarg1_, boolean jarg2, float jarg3);
  public final static native void Pass_setPointAttenuation__SWIG_3(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_isPointAttenuationEnabled(long jarg1, Pass jarg1_);
  public final static native float Pass_getPointAttenuationConstant(long jarg1, Pass jarg1_);
  public final static native float Pass_getPointAttenuationLinear(long jarg1, Pass jarg1_);
  public final static native float Pass_getPointAttenuationQuadratic(long jarg1, Pass jarg1_);
  public final static native void Pass_setPointMinSize(long jarg1, Pass jarg1_, float jarg2);
  public final static native float Pass_getPointMinSize(long jarg1, Pass jarg1_);
  public final static native void Pass_setPointMaxSize(long jarg1, Pass jarg1_, float jarg2);
  public final static native float Pass_getPointMaxSize(long jarg1, Pass jarg1_);
  public final static native long Pass_getAmbient(long jarg1, Pass jarg1_);
  public final static native long Pass_getDiffuse(long jarg1, Pass jarg1_);
  public final static native long Pass_getSpecular(long jarg1, Pass jarg1_);
  public final static native long Pass_getSelfIllumination(long jarg1, Pass jarg1_);
  public final static native long Pass_getEmissive(long jarg1, Pass jarg1_);
  public final static native float Pass_getShininess(long jarg1, Pass jarg1_);
  public final static native int Pass_getVertexColourTracking(long jarg1, Pass jarg1_);
  public final static native long Pass_createTextureUnitState__SWIG_0(long jarg1, Pass jarg1_, String jarg2, int jarg3);
  public final static native long Pass_createTextureUnitState__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native long Pass_createTextureUnitState__SWIG_2(long jarg1, Pass jarg1_);
  public final static native void Pass_addTextureUnitState(long jarg1, Pass jarg1_, long jarg2, TextureUnitState jarg2_);
  public final static native long Pass_getTextureUnitState__SWIG_0(long jarg1, Pass jarg1_, int jarg2);
  public final static native long Pass_getTextureUnitState__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native int Pass_getTextureUnitStateIndex(long jarg1, Pass jarg1_, long jarg2, TextureUnitState jarg2_);
  public final static native long Pass_getTextureUnitStates(long jarg1, Pass jarg1_);
  public final static native void Pass_removeTextureUnitState(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_removeAllTextureUnitStates(long jarg1, Pass jarg1_);
  public final static native int Pass_getNumTextureUnitStates(long jarg1, Pass jarg1_);
  public final static native void Pass_setSceneBlending__SWIG_0(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_setSeparateSceneBlending__SWIG_0(long jarg1, Pass jarg1_, int jarg2, int jarg3);
  public final static native void Pass_setSceneBlending__SWIG_1(long jarg1, Pass jarg1_, int jarg2, int jarg3);
  public final static native void Pass_setSeparateSceneBlending__SWIG_1(long jarg1, Pass jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native boolean Pass_hasSeparateSceneBlending(long jarg1, Pass jarg1_);
  public final static native int Pass_getSourceBlendFactor(long jarg1, Pass jarg1_);
  public final static native int Pass_getDestBlendFactor(long jarg1, Pass jarg1_);
  public final static native int Pass_getSourceBlendFactorAlpha(long jarg1, Pass jarg1_);
  public final static native int Pass_getDestBlendFactorAlpha(long jarg1, Pass jarg1_);
  public final static native void Pass_setSceneBlendingOperation(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_setSeparateSceneBlendingOperation(long jarg1, Pass jarg1_, int jarg2, int jarg3);
  public final static native boolean Pass_hasSeparateSceneBlendingOperations(long jarg1, Pass jarg1_);
  public final static native int Pass_getSceneBlendingOperation(long jarg1, Pass jarg1_);
  public final static native int Pass_getSceneBlendingOperationAlpha(long jarg1, Pass jarg1_);
  public final static native boolean Pass_isTransparent(long jarg1, Pass jarg1_);
  public final static native void Pass_setDepthCheckEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getDepthCheckEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setDepthWriteEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getDepthWriteEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setDepthFunction(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getDepthFunction(long jarg1, Pass jarg1_);
  public final static native void Pass_setColourWriteEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getColourWriteEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setCullingMode(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getCullingMode(long jarg1, Pass jarg1_);
  public final static native void Pass_setManualCullingMode(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getManualCullingMode(long jarg1, Pass jarg1_);
  public final static native void Pass_setLightingEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getLightingEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setMaxSimultaneousLights(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getMaxSimultaneousLights(long jarg1, Pass jarg1_);
  public final static native void Pass_setStartLight(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getStartLight(long jarg1, Pass jarg1_);
  public final static native void Pass_setLightMask(long jarg1, Pass jarg1_, long jarg2);
  public final static native long Pass_getLightMask(long jarg1, Pass jarg1_);
  public final static native void Pass_setShadingMode(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getShadingMode(long jarg1, Pass jarg1_);
  public final static native void Pass_setPolygonMode(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getPolygonMode(long jarg1, Pass jarg1_);
  public final static native void Pass_setPolygonModeOverrideable(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getPolygonModeOverrideable(long jarg1, Pass jarg1_);
  public final static native void Pass_setFog__SWIG_0(long jarg1, Pass jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native void Pass_setFog__SWIG_1(long jarg1, Pass jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6);
  public final static native void Pass_setFog__SWIG_2(long jarg1, Pass jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5);
  public final static native void Pass_setFog__SWIG_3(long jarg1, Pass jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_);
  public final static native void Pass_setFog__SWIG_4(long jarg1, Pass jarg1_, boolean jarg2, int jarg3);
  public final static native void Pass_setFog__SWIG_5(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getFogOverride(long jarg1, Pass jarg1_);
  public final static native int Pass_getFogMode(long jarg1, Pass jarg1_);
  public final static native long Pass_getFogColour(long jarg1, Pass jarg1_);
  public final static native float Pass_getFogStart(long jarg1, Pass jarg1_);
  public final static native float Pass_getFogEnd(long jarg1, Pass jarg1_);
  public final static native float Pass_getFogDensity(long jarg1, Pass jarg1_);
  public final static native void Pass_setDepthBias__SWIG_0(long jarg1, Pass jarg1_, float jarg2, float jarg3);
  public final static native void Pass_setDepthBias__SWIG_1(long jarg1, Pass jarg1_, float jarg2);
  public final static native float Pass_getDepthBiasConstant(long jarg1, Pass jarg1_);
  public final static native float Pass_getDepthBiasSlopeScale(long jarg1, Pass jarg1_);
  public final static native void Pass_setIterationDepthBias(long jarg1, Pass jarg1_, float jarg2);
  public final static native float Pass_getIterationDepthBias(long jarg1, Pass jarg1_);
  public final static native void Pass_setAlphaRejectSettings__SWIG_0(long jarg1, Pass jarg1_, int jarg2, short jarg3, boolean jarg4);
  public final static native void Pass_setAlphaRejectSettings__SWIG_1(long jarg1, Pass jarg1_, int jarg2, short jarg3);
  public final static native void Pass_setAlphaRejectFunction(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_setAlphaRejectValue(long jarg1, Pass jarg1_, short jarg2);
  public final static native int Pass_getAlphaRejectFunction(long jarg1, Pass jarg1_);
  public final static native short Pass_getAlphaRejectValue(long jarg1, Pass jarg1_);
  public final static native void Pass_setAlphaToCoverageEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_isAlphaToCoverageEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setTransparentSortingEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getTransparentSortingEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setTransparentSortingForced(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getTransparentSortingForced(long jarg1, Pass jarg1_);
  public final static native void Pass_setIteratePerLight__SWIG_0(long jarg1, Pass jarg1_, boolean jarg2, boolean jarg3, int jarg4);
  public final static native void Pass_setIteratePerLight__SWIG_1(long jarg1, Pass jarg1_, boolean jarg2, boolean jarg3);
  public final static native void Pass_setIteratePerLight__SWIG_2(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getIteratePerLight(long jarg1, Pass jarg1_);
  public final static native boolean Pass_getRunOnlyForOneLightType(long jarg1, Pass jarg1_);
  public final static native int Pass_getOnlyLightType(long jarg1, Pass jarg1_);
  public final static native void Pass_setLightCountPerIteration(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getLightCountPerIteration(long jarg1, Pass jarg1_);
  public final static native long Pass_getParent(long jarg1, Pass jarg1_);
  public final static native String Pass_getResourceGroup(long jarg1, Pass jarg1_);
  public final static native void Pass_setVertexProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setVertexProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native long Pass_getGpuProgram(long jarg1, Pass jarg1_, int jarg2);
  public final static native boolean Pass_hasGpuProgram(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_setVertexProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getVertexProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getVertexProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getVertexProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setShadowCasterVertexProgram(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setShadowCasterVertexProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getShadowCasterVertexProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowCasterVertexProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowCasterVertexProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setShadowCasterFragmentProgram(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setShadowCasterFragmentProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getShadowCasterFragmentProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowCasterFragmentProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowCasterFragmentProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setShadowReceiverVertexProgram(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setShadowReceiverVertexProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native void Pass_setShadowReceiverFragmentProgram(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setShadowReceiverFragmentProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getShadowReceiverVertexProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowReceiverVertexProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowReceiverVertexProgram(long jarg1, Pass jarg1_);
  public final static native String Pass_getShadowReceiverFragmentProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowReceiverFragmentProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getShadowReceiverFragmentProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setFragmentProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setFragmentProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setFragmentProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getFragmentProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getFragmentProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getFragmentProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setGeometryProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setGeometryProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setGeometryProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getGeometryProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getGeometryProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getGeometryProgram(long jarg1, Pass jarg1_);
  public final static native long Pass__split(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass__notifyIndex(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass__prepare(long jarg1, Pass jarg1_);
  public final static native void Pass__unprepare(long jarg1, Pass jarg1_);
  public final static native void Pass__load(long jarg1, Pass jarg1_);
  public final static native void Pass__unload(long jarg1, Pass jarg1_);
  public final static native boolean Pass_isLoaded(long jarg1, Pass jarg1_);
  public final static native long Pass_getHash(long jarg1, Pass jarg1_);
  public final static native void Pass__dirtyHash(long jarg1, Pass jarg1_);
  public final static native void Pass__recalculateHash(long jarg1, Pass jarg1_);
  public final static native void Pass__notifyNeedsRecompile(long jarg1, Pass jarg1_);
  public final static native void Pass__updateAutoParams(long jarg1, Pass jarg1_, long jarg2, int jarg3);
  public final static native int Pass__getTextureUnitWithContentTypeIndex(long jarg1, Pass jarg1_, int jarg2, int jarg3);
  public final static native void Pass_setTextureFiltering(long jarg1, Pass jarg1_, int jarg2);
  public final static native void Pass_setTextureAnisotropy(long jarg1, Pass jarg1_, long jarg2);
  public final static native void Pass_setNormaliseNormals(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getNormaliseNormals(long jarg1, Pass jarg1_);
  public final static native long Pass_getDirtyHashList();
  public final static native long Pass_getPassGraveyard();
  public final static native void Pass_clearDirtyHashList();
  public final static native void Pass_processPendingPassUpdates();
  public final static native void Pass_queueForDeletion(long jarg1, Pass jarg1_);
  public final static native boolean Pass_isAmbientOnly(long jarg1, Pass jarg1_);
  public final static native void Pass_setPassIterationCount(long jarg1, Pass jarg1_, long jarg2);
  public final static native long Pass_getPassIterationCount(long jarg1, Pass jarg1_);
  public final static native boolean Pass_applyTextureAliases__SWIG_0(long jarg1, Pass jarg1_, long jarg2, boolean jarg3);
  public final static native boolean Pass_applyTextureAliases__SWIG_1(long jarg1, Pass jarg1_, long jarg2);
  public final static native void Pass_setLightScissoringEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getLightScissoringEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setLightClipPlanesEnabled(long jarg1, Pass jarg1_, boolean jarg2);
  public final static native boolean Pass_getLightClipPlanesEnabled(long jarg1, Pass jarg1_);
  public final static native void Pass_setIlluminationStage(long jarg1, Pass jarg1_, int jarg2);
  public final static native int Pass_getIlluminationStage(long jarg1, Pass jarg1_);
  public final static native void Pass_setHashFunction__SWIG_0(int jarg1);
  public final static native void Pass_setHashFunction__SWIG_1(long jarg1, Pass.HashFunc jarg1_);
  public final static native long Pass_getHashFunction();
  public final static native long Pass_getBuiltinHashFunction(int jarg1);
  public final static native long Pass_getUserObjectBindings__SWIG_0(long jarg1, Pass jarg1_);
  public final static native void Pass_setTessellationHullProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setTessellationHullProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setTessellationHullProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getTessellationHullProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getTessellationHullProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getTessellationHullProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setTessellationDomainProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setTessellationDomainProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setTessellationDomainProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getTessellationDomainProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getTessellationDomainProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getTessellationDomainProgram(long jarg1, Pass jarg1_);
  public final static native void Pass_setComputeProgram__SWIG_0(long jarg1, Pass jarg1_, String jarg2, boolean jarg3);
  public final static native void Pass_setComputeProgram__SWIG_1(long jarg1, Pass jarg1_, String jarg2);
  public final static native void Pass_setComputeProgramParameters(long jarg1, Pass jarg1_, long jarg2);
  public final static native String Pass_getComputeProgramName(long jarg1, Pass jarg1_);
  public final static native long Pass_getComputeProgramParameters(long jarg1, Pass jarg1_);
  public final static native long Pass_getComputeProgram(long jarg1, Pass jarg1_);
  public final static native void IlluminationPass_stage_set(long jarg1, IlluminationPass jarg1_, int jarg2);
  public final static native int IlluminationPass_stage_get(long jarg1, IlluminationPass jarg1_);
  public final static native void IlluminationPass_pass_set(long jarg1, IlluminationPass jarg1_, long jarg2, Pass jarg2_);
  public final static native long IlluminationPass_pass_get(long jarg1, IlluminationPass jarg1_);
  public final static native void IlluminationPass_destroyOnShutdown_set(long jarg1, IlluminationPass jarg1_, boolean jarg2);
  public final static native boolean IlluminationPass_destroyOnShutdown_get(long jarg1, IlluminationPass jarg1_);
  public final static native void IlluminationPass_originalPass_set(long jarg1, IlluminationPass jarg1_, long jarg2, Pass jarg2_);
  public final static native long IlluminationPass_originalPass_get(long jarg1, IlluminationPass jarg1_);
  public final static native long new_IlluminationPass();
  public final static native void delete_IlluminationPass(long jarg1);
  public final static native long new_Passes__SWIG_0();
  public final static native long new_Passes__SWIG_1(long jarg1, Passes jarg1_);
  public final static native long Passes_capacity(long jarg1, Passes jarg1_);
  public final static native void Passes_reserve(long jarg1, Passes jarg1_, long jarg2);
  public final static native boolean Passes_isEmpty(long jarg1, Passes jarg1_);
  public final static native void Passes_clear(long jarg1, Passes jarg1_);
  public final static native long new_Passes__SWIG_2(int jarg1);
  public final static native long new_Passes__SWIG_3(int jarg1, long jarg2, Pass jarg2_);
  public final static native int Passes_doSize(long jarg1, Passes jarg1_);
  public final static native void Passes_doAdd__SWIG_0(long jarg1, Passes jarg1_, long jarg2, Pass jarg2_);
  public final static native void Passes_doAdd__SWIG_1(long jarg1, Passes jarg1_, int jarg2, long jarg3, Pass jarg3_);
  public final static native long Passes_doRemove(long jarg1, Passes jarg1_, int jarg2);
  public final static native long Passes_doGet(long jarg1, Passes jarg1_, int jarg2);
  public final static native long Passes_doSet(long jarg1, Passes jarg1_, int jarg2, long jarg3, Pass jarg3_);
  public final static native void Passes_doRemoveRange(long jarg1, Passes jarg1_, int jarg2, int jarg3);
  public final static native void delete_Passes(long jarg1);
  public final static native long new_IlluminationPassList__SWIG_0();
  public final static native long new_IlluminationPassList__SWIG_1(long jarg1, IlluminationPassList jarg1_);
  public final static native long IlluminationPassList_capacity(long jarg1, IlluminationPassList jarg1_);
  public final static native void IlluminationPassList_reserve(long jarg1, IlluminationPassList jarg1_, long jarg2);
  public final static native boolean IlluminationPassList_isEmpty(long jarg1, IlluminationPassList jarg1_);
  public final static native void IlluminationPassList_clear(long jarg1, IlluminationPassList jarg1_);
  public final static native long new_IlluminationPassList__SWIG_2(int jarg1);
  public final static native long new_IlluminationPassList__SWIG_3(int jarg1, long jarg2, IlluminationPass jarg2_);
  public final static native int IlluminationPassList_doSize(long jarg1, IlluminationPassList jarg1_);
  public final static native void IlluminationPassList_doAdd__SWIG_0(long jarg1, IlluminationPassList jarg1_, long jarg2, IlluminationPass jarg2_);
  public final static native void IlluminationPassList_doAdd__SWIG_1(long jarg1, IlluminationPassList jarg1_, int jarg2, long jarg3, IlluminationPass jarg3_);
  public final static native long IlluminationPassList_doRemove(long jarg1, IlluminationPassList jarg1_, int jarg2);
  public final static native long IlluminationPassList_doGet(long jarg1, IlluminationPassList jarg1_, int jarg2);
  public final static native long IlluminationPassList_doSet(long jarg1, IlluminationPassList jarg1_, int jarg2, long jarg3, IlluminationPass jarg3_);
  public final static native void IlluminationPassList_doRemoveRange(long jarg1, IlluminationPassList jarg1_, int jarg2, int jarg3);
  public final static native void delete_IlluminationPassList(long jarg1);
  public final static native int Technique_INCLUDE_get();
  public final static native int Technique_EXCLUDE_get();
  public final static native void Technique_GPUVendorRule_vendor_set(long jarg1, Technique.GPUVendorRule jarg1_, int jarg2);
  public final static native int Technique_GPUVendorRule_vendor_get(long jarg1, Technique.GPUVendorRule jarg1_);
  public final static native void Technique_GPUVendorRule_includeOrExclude_set(long jarg1, Technique.GPUVendorRule jarg1_, int jarg2);
  public final static native int Technique_GPUVendorRule_includeOrExclude_get(long jarg1, Technique.GPUVendorRule jarg1_);
  public final static native long new_Technique_GPUVendorRule__SWIG_0();
  public final static native long new_Technique_GPUVendorRule__SWIG_1(int jarg1, int jarg2);
  public final static native void delete_Technique_GPUVendorRule(long jarg1);
  public final static native void Technique_GPUDeviceNameRule_devicePattern_set(long jarg1, Technique.GPUDeviceNameRule jarg1_, String jarg2);
  public final static native String Technique_GPUDeviceNameRule_devicePattern_get(long jarg1, Technique.GPUDeviceNameRule jarg1_);
  public final static native void Technique_GPUDeviceNameRule_includeOrExclude_set(long jarg1, Technique.GPUDeviceNameRule jarg1_, int jarg2);
  public final static native int Technique_GPUDeviceNameRule_includeOrExclude_get(long jarg1, Technique.GPUDeviceNameRule jarg1_);
  public final static native void Technique_GPUDeviceNameRule_caseSensitive_set(long jarg1, Technique.GPUDeviceNameRule jarg1_, boolean jarg2);
  public final static native boolean Technique_GPUDeviceNameRule_caseSensitive_get(long jarg1, Technique.GPUDeviceNameRule jarg1_);
  public final static native long new_Technique_GPUDeviceNameRule__SWIG_0();
  public final static native long new_Technique_GPUDeviceNameRule__SWIG_1(String jarg1, int jarg2, boolean jarg3);
  public final static native void delete_Technique_GPUDeviceNameRule(long jarg1);
  public final static native long new_Technique__SWIG_0(long jarg1, Material jarg1_);
  public final static native long new_Technique__SWIG_1(long jarg1, Material jarg1_, long jarg2, Technique jarg2_);
  public final static native void delete_Technique(long jarg1);
  public final static native boolean Technique_isSupported(long jarg1, Technique jarg1_);
  public final static native String Technique__compile(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native boolean Technique_checkGPURules(long jarg1, Technique jarg1_, long jarg2);
  public final static native boolean Technique_checkHardwareSupport(long jarg1, Technique jarg1_, boolean jarg2, long jarg3);
  public final static native void Technique__compileIlluminationPasses(long jarg1, Technique jarg1_);
  public final static native long Technique_calculateSize(long jarg1, Technique jarg1_);
  public final static native long Technique_createPass(long jarg1, Technique jarg1_);
  public final static native long Technique_getPass__SWIG_0(long jarg1, Technique jarg1_, int jarg2);
  public final static native long Technique_getPass__SWIG_1(long jarg1, Technique jarg1_, String jarg2);
  public final static native int Technique_getNumPasses(long jarg1, Technique jarg1_);
  public final static native void Technique_removePass(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_removeAllPasses(long jarg1, Technique jarg1_);
  public final static native boolean Technique_movePass(long jarg1, Technique jarg1_, int jarg2, int jarg3);
  public final static native long Technique_getPasses(long jarg1, Technique jarg1_);
  public final static native long Technique_getIlluminationPasses(long jarg1, Technique jarg1_);
  public final static native long Technique_getParent(long jarg1, Technique jarg1_);
  public final static native String Technique_getResourceGroup(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isTransparent(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isTransparentSortingEnabled(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isTransparentSortingForced(long jarg1, Technique jarg1_);
  public final static native void Technique__prepare(long jarg1, Technique jarg1_);
  public final static native void Technique__unprepare(long jarg1, Technique jarg1_);
  public final static native void Technique__load(long jarg1, Technique jarg1_);
  public final static native void Technique__unload(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isLoaded(long jarg1, Technique jarg1_);
  public final static native void Technique__notifyNeedsRecompile(long jarg1, Technique jarg1_);
  public final static native long Technique_getShadowCasterMaterial(long jarg1, Technique jarg1_);
  public final static native void Technique_setShadowCasterMaterial__SWIG_0(long jarg1, Technique jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void Technique_setShadowCasterMaterial__SWIG_1(long jarg1, Technique jarg1_, String jarg2);
  public final static native long Technique_getShadowReceiverMaterial(long jarg1, Technique jarg1_);
  public final static native void Technique_setShadowReceiverMaterial__SWIG_0(long jarg1, Technique jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void Technique_setShadowReceiverMaterial__SWIG_1(long jarg1, Technique jarg1_, String jarg2);
  public final static native void Technique_setPointSize(long jarg1, Technique jarg1_, float jarg2);
  public final static native void Technique_setAmbient__SWIG_0(long jarg1, Technique jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Technique_setAmbient__SWIG_1(long jarg1, Technique jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Technique_setDiffuse__SWIG_0(long jarg1, Technique jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Technique_setDiffuse__SWIG_1(long jarg1, Technique jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Technique_setSpecular__SWIG_0(long jarg1, Technique jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Technique_setSpecular__SWIG_1(long jarg1, Technique jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Technique_setShininess(long jarg1, Technique jarg1_, float jarg2);
  public final static native void Technique_setSelfIllumination__SWIG_0(long jarg1, Technique jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void Technique_setSelfIllumination__SWIG_1(long jarg1, Technique jarg1_, long jarg2, ColourValue jarg2_);
  public final static native void Technique_setDepthCheckEnabled(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native void Technique_setDepthWriteEnabled(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native void Technique_setDepthFunction(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setColourWriteEnabled(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native void Technique_setCullingMode(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setManualCullingMode(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setLightingEnabled(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native void Technique_setShadingMode(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setFog__SWIG_0(long jarg1, Technique jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6, float jarg7);
  public final static native void Technique_setFog__SWIG_1(long jarg1, Technique jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5, float jarg6);
  public final static native void Technique_setFog__SWIG_2(long jarg1, Technique jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_, float jarg5);
  public final static native void Technique_setFog__SWIG_3(long jarg1, Technique jarg1_, boolean jarg2, int jarg3, long jarg4, ColourValue jarg4_);
  public final static native void Technique_setFog__SWIG_4(long jarg1, Technique jarg1_, boolean jarg2, int jarg3);
  public final static native void Technique_setFog__SWIG_5(long jarg1, Technique jarg1_, boolean jarg2);
  public final static native void Technique_setDepthBias(long jarg1, Technique jarg1_, float jarg2, float jarg3);
  public final static native void Technique_setTextureFiltering(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setTextureAnisotropy(long jarg1, Technique jarg1_, long jarg2);
  public final static native void Technique_setSceneBlending__SWIG_0(long jarg1, Technique jarg1_, int jarg2);
  public final static native void Technique_setSeparateSceneBlending__SWIG_0(long jarg1, Technique jarg1_, int jarg2, int jarg3);
  public final static native void Technique_setSceneBlending__SWIG_1(long jarg1, Technique jarg1_, int jarg2, int jarg3);
  public final static native void Technique_setSeparateSceneBlending__SWIG_1(long jarg1, Technique jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Technique_setLodIndex(long jarg1, Technique jarg1_, int jarg2);
  public final static native int Technique_getLodIndex(long jarg1, Technique jarg1_);
  public final static native void Technique_setSchemeName(long jarg1, Technique jarg1_, String jarg2);
  public final static native String Technique_getSchemeName(long jarg1, Technique jarg1_);
  public final static native int Technique__getSchemeIndex(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isDepthWriteEnabled(long jarg1, Technique jarg1_);
  public final static native boolean Technique_isDepthCheckEnabled(long jarg1, Technique jarg1_);
  public final static native boolean Technique_hasColourWriteDisabled(long jarg1, Technique jarg1_);
  public final static native void Technique_setName(long jarg1, Technique jarg1_, String jarg2);
  public final static native String Technique_getName(long jarg1, Technique jarg1_);
  public final static native boolean Technique_applyTextureAliases__SWIG_0(long jarg1, Technique jarg1_, long jarg2, boolean jarg3);
  public final static native boolean Technique_applyTextureAliases__SWIG_1(long jarg1, Technique jarg1_, long jarg2);
  public final static native void Technique_addGPUVendorRule__SWIG_0(long jarg1, Technique jarg1_, int jarg2, int jarg3);
  public final static native void Technique_addGPUVendorRule__SWIG_1(long jarg1, Technique jarg1_, long jarg2, Technique.GPUVendorRule jarg2_);
  public final static native void Technique_removeGPUVendorRule(long jarg1, Technique jarg1_, int jarg2);
  public final static native long Technique_getGPUVendorRules(long jarg1, Technique jarg1_);
  public final static native void Technique_addGPUDeviceNameRule__SWIG_0(long jarg1, Technique jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void Technique_addGPUDeviceNameRule__SWIG_1(long jarg1, Technique jarg1_, String jarg2, int jarg3);
  public final static native void Technique_addGPUDeviceNameRule__SWIG_2(long jarg1, Technique jarg1_, long jarg2, Technique.GPUDeviceNameRule jarg2_);
  public final static native void Technique_removeGPUDeviceNameRule(long jarg1, Technique jarg1_, String jarg2);
  public final static native long Technique_getGPUDeviceNameRules(long jarg1, Technique jarg1_);
  public final static native long Technique_getUserObjectBindings__SWIG_0(long jarg1, Technique jarg1_);
  public final static native int OGRE_NUM_RENDERTARGET_GROUPS_get();
  public final static native int OGRE_DEFAULT_RT_GROUP_get();
  public final static native int OGRE_REND_TO_TEX_RT_GROUP_get();
  public final static native int RenderTarget_SF_NONE_get();
  public final static native int RenderTarget_SF_FPS_get();
  public final static native int RenderTarget_SF_AVG_FPS_get();
  public final static native int RenderTarget_SF_BEST_FPS_get();
  public final static native int RenderTarget_SF_WORST_FPS_get();
  public final static native int RenderTarget_SF_TRIANGLE_COUNT_get();
  public final static native int RenderTarget_SF_ALL_get();
  public final static native void RenderTarget_FrameStats_lastFPS_set(long jarg1, RenderTarget.FrameStats jarg1_, float jarg2);
  public final static native float RenderTarget_FrameStats_lastFPS_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_avgFPS_set(long jarg1, RenderTarget.FrameStats jarg1_, float jarg2);
  public final static native float RenderTarget_FrameStats_avgFPS_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_bestFPS_set(long jarg1, RenderTarget.FrameStats jarg1_, float jarg2);
  public final static native float RenderTarget_FrameStats_bestFPS_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_worstFPS_set(long jarg1, RenderTarget.FrameStats jarg1_, float jarg2);
  public final static native float RenderTarget_FrameStats_worstFPS_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_bestFrameTime_set(long jarg1, RenderTarget.FrameStats jarg1_, long jarg2);
  public final static native long RenderTarget_FrameStats_bestFrameTime_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_worstFrameTime_set(long jarg1, RenderTarget.FrameStats jarg1_, long jarg2);
  public final static native long RenderTarget_FrameStats_worstFrameTime_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_triangleCount_set(long jarg1, RenderTarget.FrameStats jarg1_, long jarg2);
  public final static native long RenderTarget_FrameStats_triangleCount_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_batchCount_set(long jarg1, RenderTarget.FrameStats jarg1_, long jarg2);
  public final static native long RenderTarget_FrameStats_batchCount_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native void RenderTarget_FrameStats_vBlankMissCount_set(long jarg1, RenderTarget.FrameStats jarg1_, int jarg2);
  public final static native int RenderTarget_FrameStats_vBlankMissCount_get(long jarg1, RenderTarget.FrameStats jarg1_);
  public final static native long new_RenderTarget_FrameStats();
  public final static native void delete_RenderTarget_FrameStats(long jarg1);
  public final static native void delete_RenderTarget(long jarg1);
  public final static native String RenderTarget_getName(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_getMetrics(long jarg1, RenderTarget jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long RenderTarget_getWidth(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getHeight(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getColourDepth(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_setDepthBufferPool(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native int RenderTarget_getDepthBufferPool(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getDepthBuffer(long jarg1, RenderTarget jarg1_);
  public final static native boolean RenderTarget_attachDepthBuffer(long jarg1, RenderTarget jarg1_, long jarg2);
  public final static native void RenderTarget_detachDepthBuffer(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget__detachDepthBuffer(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_update__SWIG_0(long jarg1, RenderTarget jarg1_, boolean jarg2);
  public final static native void RenderTarget_update__SWIG_1(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_swapBuffers(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_addViewport__SWIG_0(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native long RenderTarget_addViewport__SWIG_1(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_, int jarg3, float jarg4, float jarg5, float jarg6);
  public final static native long RenderTarget_addViewport__SWIG_2(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_, int jarg3, float jarg4, float jarg5);
  public final static native long RenderTarget_addViewport__SWIG_3(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_, int jarg3, float jarg4);
  public final static native long RenderTarget_addViewport__SWIG_4(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_, int jarg3);
  public final static native long RenderTarget_addViewport__SWIG_5(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_);
  public final static native int RenderTarget_getNumViewports(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getViewport(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native long RenderTarget_getViewportByZOrder(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native boolean RenderTarget_hasViewportWithZOrder(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native void RenderTarget_removeViewport(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native void RenderTarget_removeAllViewports(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getStatistics(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_resetStatistics(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_getCustomAttribute(long jarg1, RenderTarget jarg1_, String jarg2, long jarg3);
  public final static native void RenderTarget_addListener(long jarg1, RenderTarget jarg1_, long jarg2, RenderTargetListener jarg2_);
  public final static native void RenderTarget_insertListener__SWIG_0(long jarg1, RenderTarget jarg1_, long jarg2, RenderTargetListener jarg2_, long jarg3);
  public final static native void RenderTarget_insertListener__SWIG_1(long jarg1, RenderTarget jarg1_, long jarg2, RenderTargetListener jarg2_);
  public final static native void RenderTarget_removeListener(long jarg1, RenderTarget jarg1_, long jarg2, RenderTargetListener jarg2_);
  public final static native void RenderTarget_removeAllListeners(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_setPriority(long jarg1, RenderTarget jarg1_, short jarg2);
  public final static native short RenderTarget_getPriority(long jarg1, RenderTarget jarg1_);
  public final static native boolean RenderTarget_isActive(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_setActive(long jarg1, RenderTarget jarg1_, boolean jarg2);
  public final static native void RenderTarget_setAutoUpdated(long jarg1, RenderTarget jarg1_, boolean jarg2);
  public final static native boolean RenderTarget_isAutoUpdated(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_copyContentsToMemory__SWIG_0(long jarg1, RenderTarget jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_, int jarg4);
  public final static native void RenderTarget_copyContentsToMemory__SWIG_1(long jarg1, RenderTarget jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_);
  public final static native int RenderTarget_suggestPixelFormat(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_writeContentsToFile(long jarg1, RenderTarget jarg1_, String jarg2);
  public final static native String RenderTarget_writeContentsToTimestampedFile(long jarg1, RenderTarget jarg1_, String jarg2, String jarg3);
  public final static native boolean RenderTarget_requiresTextureFlipping(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget__notifyCameraRemoved(long jarg1, RenderTarget jarg1_, long jarg2, Camera jarg2_);
  public final static native boolean RenderTarget_isPrimary(long jarg1, RenderTarget jarg1_);
  public final static native boolean RenderTarget_isStereoEnabled(long jarg1, RenderTarget jarg1_);
  public final static native boolean RenderTarget_isHardwareGammaEnabled(long jarg1, RenderTarget jarg1_);
  public final static native long RenderTarget_getFSAA(long jarg1, RenderTarget jarg1_);
  public final static native String RenderTarget_getFSAAHint(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget_setFSAA(long jarg1, RenderTarget jarg1_, long jarg2, String jarg3);
  public final static native long new_RenderTarget_Impl();
  public final static native long RenderTarget__getImpl(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget__beginUpdate(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget__updateViewport__SWIG_0(long jarg1, RenderTarget jarg1_, int jarg2, boolean jarg3);
  public final static native void RenderTarget__updateViewport__SWIG_1(long jarg1, RenderTarget jarg1_, int jarg2);
  public final static native void RenderTarget__updateViewport__SWIG_2(long jarg1, RenderTarget jarg1_, long jarg2, Viewport jarg2_, boolean jarg3);
  public final static native void RenderTarget__updateViewport__SWIG_3(long jarg1, RenderTarget jarg1_, long jarg2, Viewport jarg2_);
  public final static native void RenderTarget__updateAutoUpdatedViewports__SWIG_0(long jarg1, RenderTarget jarg1_, boolean jarg2);
  public final static native void RenderTarget__updateAutoUpdatedViewports__SWIG_1(long jarg1, RenderTarget jarg1_);
  public final static native void RenderTarget__endUpdate(long jarg1, RenderTarget jarg1_);
  public final static native float RenderWindow_getViewPointToPixelScale(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_create(long jarg1, RenderWindow jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5, long jarg6);
  public final static native void RenderWindow_setFullscreen(long jarg1, RenderWindow jarg1_, boolean jarg2, long jarg3, long jarg4);
  public final static native void RenderWindow_destroy(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_resize(long jarg1, RenderWindow jarg1_, long jarg2, long jarg3);
  public final static native void RenderWindow_windowMovedOrResized(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_reposition(long jarg1, RenderWindow jarg1_, int jarg2, int jarg3);
  public final static native boolean RenderWindow_isVisible(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_setVisible(long jarg1, RenderWindow jarg1_, boolean jarg2);
  public final static native boolean RenderWindow_isHidden(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_setHidden(long jarg1, RenderWindow jarg1_, boolean jarg2);
  public final static native void RenderWindow_setVSyncEnabled(long jarg1, RenderWindow jarg1_, boolean jarg2);
  public final static native boolean RenderWindow_isVSyncEnabled(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_setVSyncInterval(long jarg1, RenderWindow jarg1_, long jarg2);
  public final static native long RenderWindow_getVSyncInterval(long jarg1, RenderWindow jarg1_);
  public final static native boolean RenderWindow_isActive(long jarg1, RenderWindow jarg1_);
  public final static native boolean RenderWindow_isClosed(long jarg1, RenderWindow jarg1_);
  public final static native boolean RenderWindow_isPrimary(long jarg1, RenderWindow jarg1_);
  public final static native boolean RenderWindow_isFullScreen(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_getMetrics__SWIG_0(long jarg1, RenderWindow jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void RenderWindow_getMetrics__SWIG_1_0(long jarg1, RenderWindow jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int RenderWindow_suggestPixelFormat(long jarg1, RenderWindow jarg1_);
  public final static native boolean RenderWindow_isDeactivatedOnFocusChange(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow_setDeactivateOnFocusChange(long jarg1, RenderWindow jarg1_, boolean jarg2);
  public final static native void RenderWindow__notifySurfaceDestroyed(long jarg1, RenderWindow jarg1_);
  public final static native void RenderWindow__notifySurfaceCreated(long jarg1, RenderWindow jarg1_, Object jarg2);
  public final static native void delete_RenderWindow(long jarg1);
  public final static native void delete_RenderTexture(long jarg1);
  public final static native void RenderTexture_copyContentsToMemory__SWIG_0_0(long jarg1, RenderTexture jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_, int jarg4);
  public final static native void RenderTexture_copyContentsToMemory__SWIG_0_1(long jarg1, RenderTexture jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_);
  public final static native int RenderTexture_suggestPixelFormat(long jarg1, RenderTexture jarg1_);
  public final static native void MultiRenderTarget_bindSurface(long jarg1, MultiRenderTarget jarg1_, long jarg2, long jarg3, RenderTexture jarg3_);
  public final static native void MultiRenderTarget_unbindSurface(long jarg1, MultiRenderTarget jarg1_, long jarg2);
  public final static native void MultiRenderTarget_copyContentsToMemory__SWIG_0_0(long jarg1, MultiRenderTarget jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_, int jarg4);
  public final static native void MultiRenderTarget_copyContentsToMemory__SWIG_0_1(long jarg1, MultiRenderTarget jarg1_, long jarg2, Box jarg2_, long jarg3, PixelBox jarg3_);
  public final static native int MultiRenderTarget_suggestPixelFormat(long jarg1, MultiRenderTarget jarg1_);
  public final static native long MultiRenderTarget_getBoundSurfaceList(long jarg1, MultiRenderTarget jarg1_);
  public final static native long MultiRenderTarget_getBoundSurface(long jarg1, MultiRenderTarget jarg1_, long jarg2);
  public final static native void delete_MultiRenderTarget(long jarg1);
  public final static native void delete_Viewport_Listener(long jarg1);
  public final static native void Viewport_Listener_viewportCameraChanged(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Viewport_Listener_viewportCameraChangedSwigExplicitListener(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Viewport_Listener_viewportDimensionsChanged(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Viewport_Listener_viewportDimensionsChangedSwigExplicitListener(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Viewport_Listener_viewportDestroyed(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native void Viewport_Listener_viewportDestroyedSwigExplicitListener(long jarg1, Viewport.Listener jarg1_, long jarg2, Viewport jarg2_);
  public final static native long new_Viewport_Listener();
  public final static native void Viewport_Listener_director_connect(Viewport.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Viewport_Listener_change_ownership(Viewport.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_Viewport(long jarg1, Camera jarg1_, long jarg2, RenderTarget jarg2_, float jarg3, float jarg4, float jarg5, float jarg6, int jarg7);
  public final static native void delete_Viewport(long jarg1);
  public final static native void Viewport__updateDimensions(long jarg1, Viewport jarg1_);
  public final static native void Viewport_update(long jarg1, Viewport jarg1_);
  public final static native void Viewport_clear__SWIG_0(long jarg1, Viewport jarg1_, long jarg2, long jarg3, ColourValue jarg3_, float jarg4, int jarg5);
  public final static native void Viewport_clear__SWIG_1(long jarg1, Viewport jarg1_, long jarg2, long jarg3, ColourValue jarg3_, float jarg4);
  public final static native void Viewport_clear__SWIG_2(long jarg1, Viewport jarg1_, long jarg2, long jarg3, ColourValue jarg3_);
  public final static native void Viewport_clear__SWIG_3(long jarg1, Viewport jarg1_, long jarg2);
  public final static native void Viewport_clear__SWIG_4(long jarg1, Viewport jarg1_);
  public final static native long Viewport_getTarget(long jarg1, Viewport jarg1_);
  public final static native long Viewport_getCamera(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setCamera(long jarg1, Viewport jarg1_, long jarg2, Camera jarg2_);
  public final static native int Viewport_getZOrder(long jarg1, Viewport jarg1_);
  public final static native float Viewport_getLeft(long jarg1, Viewport jarg1_);
  public final static native float Viewport_getTop(long jarg1, Viewport jarg1_);
  public final static native float Viewport_getWidth(long jarg1, Viewport jarg1_);
  public final static native float Viewport_getHeight(long jarg1, Viewport jarg1_);
  public final static native int Viewport_getActualLeft(long jarg1, Viewport jarg1_);
  public final static native int Viewport_getActualTop(long jarg1, Viewport jarg1_);
  public final static native int Viewport_getActualWidth(long jarg1, Viewport jarg1_);
  public final static native int Viewport_getActualHeight(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setDimensions(long jarg1, Viewport jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Viewport_setOrientationMode__SWIG_0(long jarg1, Viewport jarg1_, int jarg2, boolean jarg3);
  public final static native void Viewport_setOrientationMode__SWIG_1(long jarg1, Viewport jarg1_, int jarg2);
  public final static native int Viewport_getOrientationMode(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setDefaultOrientationMode(int jarg1);
  public final static native int Viewport_getDefaultOrientationMode();
  public final static native void Viewport_setBackgroundColour(long jarg1, Viewport jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long Viewport_getBackgroundColour(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setDepthClear(long jarg1, Viewport jarg1_, float jarg2);
  public final static native float Viewport_getDepthClear(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setClearEveryFrame__SWIG_0(long jarg1, Viewport jarg1_, boolean jarg2, long jarg3);
  public final static native void Viewport_setClearEveryFrame__SWIG_1(long jarg1, Viewport jarg1_, boolean jarg2);
  public final static native boolean Viewport_getClearEveryFrame(long jarg1, Viewport jarg1_);
  public final static native long Viewport_getClearBuffers(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setAutoUpdated(long jarg1, Viewport jarg1_, boolean jarg2);
  public final static native boolean Viewport_isAutoUpdated(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setMaterialScheme(long jarg1, Viewport jarg1_, String jarg2);
  public final static native String Viewport_getMaterialScheme(long jarg1, Viewport jarg1_);
  public final static native void Viewport_getActualDimensions(long jarg1, Viewport jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native boolean Viewport__isUpdated(long jarg1, Viewport jarg1_);
  public final static native void Viewport__clearUpdatedFlag(long jarg1, Viewport jarg1_);
  public final static native long Viewport__getNumRenderedFaces(long jarg1, Viewport jarg1_);
  public final static native long Viewport__getNumRenderedBatches(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setOverlaysEnabled(long jarg1, Viewport jarg1_, boolean jarg2);
  public final static native boolean Viewport_getOverlaysEnabled(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setSkiesEnabled(long jarg1, Viewport jarg1_, boolean jarg2);
  public final static native boolean Viewport_getSkiesEnabled(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setShadowsEnabled(long jarg1, Viewport jarg1_, boolean jarg2);
  public final static native boolean Viewport_getShadowsEnabled(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setVisibilityMask(long jarg1, Viewport jarg1_, long jarg2);
  public final static native long Viewport_getVisibilityMask(long jarg1, Viewport jarg1_);
  public final static native void Viewport_setRenderQueueInvocationSequenceName(long jarg1, Viewport jarg1_, String jarg2);
  public final static native String Viewport_getRenderQueueInvocationSequenceName(long jarg1, Viewport jarg1_);
  public final static native long Viewport__getRenderQueueInvocationSequence(long jarg1, Viewport jarg1_);
  public final static native void Viewport_pointOrientedToScreen__SWIG_0(long jarg1, Viewport jarg1_, long jarg2, Vector2 jarg2_, int jarg3, long jarg4, Vector2 jarg4_);
  public final static native void Viewport_pointOrientedToScreen__SWIG_1(long jarg1, Viewport jarg1_, float jarg2, float jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void Viewport_addListener(long jarg1, Viewport jarg1_, long jarg2, Viewport.Listener jarg2_);
  public final static native void Viewport_removeListener(long jarg1, Viewport jarg1_, long jarg2, Viewport.Listener jarg2_);
  public final static native void Viewport_setDrawBuffer(long jarg1, Viewport jarg1_, int jarg2);
  public final static native int Viewport_getDrawBuffer(long jarg1, Viewport jarg1_);
  public final static native long new_CompositorChain(long jarg1, Viewport jarg1_);
  public final static native void delete_CompositorChain(long jarg1);
  public final static native long CompositorChain_LAST_get();
  public final static native long CompositorChain_BEST_get();
  public final static native long CompositorChain_addCompositor__SWIG_0(long jarg1, CompositorChain jarg1_, long jarg2, CompositorPtr jarg2_, long jarg3, String jarg4);
  public final static native long CompositorChain_addCompositor__SWIG_1(long jarg1, CompositorChain jarg1_, long jarg2, CompositorPtr jarg2_, long jarg3);
  public final static native long CompositorChain_addCompositor__SWIG_2(long jarg1, CompositorChain jarg1_, long jarg2, CompositorPtr jarg2_);
  public final static native void CompositorChain_removeCompositor__SWIG_0(long jarg1, CompositorChain jarg1_, long jarg2);
  public final static native void CompositorChain_removeCompositor__SWIG_1(long jarg1, CompositorChain jarg1_);
  public final static native long CompositorChain_getNumCompositors(long jarg1, CompositorChain jarg1_);
  public final static native void CompositorChain_removeAllCompositors(long jarg1, CompositorChain jarg1_);
  public final static native long CompositorChain_getCompositor__SWIG_0(long jarg1, CompositorChain jarg1_, long jarg2);
  public final static native long CompositorChain_getCompositor__SWIG_1(long jarg1, CompositorChain jarg1_, String jarg2);
  public final static native long CompositorChain__getOriginalSceneCompositor(long jarg1, CompositorChain jarg1_);
  public final static native long CompositorChain_getCompositors(long jarg1, CompositorChain jarg1_);
  public final static native void CompositorChain_setCompositorEnabled(long jarg1, CompositorChain jarg1_, long jarg2, boolean jarg3);
  public final static native void CompositorChain_preRenderTargetUpdate(long jarg1, CompositorChain jarg1_, long jarg2, RenderTargetEvent jarg2_);
  public final static native void CompositorChain_postRenderTargetUpdate(long jarg1, CompositorChain jarg1_, long jarg2, RenderTargetEvent jarg2_);
  public final static native void CompositorChain_preViewportUpdate(long jarg1, CompositorChain jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native void CompositorChain_postViewportUpdate(long jarg1, CompositorChain jarg1_, long jarg2, RenderTargetViewportEvent jarg2_);
  public final static native void CompositorChain_viewportCameraChanged(long jarg1, CompositorChain jarg1_, long jarg2, Viewport jarg2_);
  public final static native void CompositorChain_viewportDimensionsChanged(long jarg1, CompositorChain jarg1_, long jarg2, Viewport jarg2_);
  public final static native void CompositorChain_viewportDestroyed(long jarg1, CompositorChain jarg1_, long jarg2, Viewport jarg2_);
  public final static native void CompositorChain__markDirty(long jarg1, CompositorChain jarg1_);
  public final static native long CompositorChain_getViewport(long jarg1, CompositorChain jarg1_);
  public final static native void CompositorChain__notifyViewport(long jarg1, CompositorChain jarg1_, long jarg2, Viewport jarg2_);
  public final static native void CompositorChain__removeInstance(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance jarg2_);
  public final static native void CompositorChain__queuedOperation(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance.RenderSystemOperation jarg2_);
  public final static native void CompositorChain__compile(long jarg1, CompositorChain jarg1_);
  public final static native long CompositorChain_getPreviousInstance__SWIG_0(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance jarg2_, boolean jarg3);
  public final static native long CompositorChain_getPreviousInstance__SWIG_1(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance jarg2_);
  public final static native long CompositorChain_getNextInstance__SWIG_0(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance jarg2_, boolean jarg3);
  public final static native long CompositorChain_getNextInstance__SWIG_1(long jarg1, CompositorChain jarg1_, long jarg2, CompositorInstance jarg2_);
  public final static native void ShadowTextureConfig_width_set(long jarg1, ShadowTextureConfig jarg1_, long jarg2);
  public final static native long ShadowTextureConfig_width_get(long jarg1, ShadowTextureConfig jarg1_);
  public final static native void ShadowTextureConfig_height_set(long jarg1, ShadowTextureConfig jarg1_, long jarg2);
  public final static native long ShadowTextureConfig_height_get(long jarg1, ShadowTextureConfig jarg1_);
  public final static native void ShadowTextureConfig_format_set(long jarg1, ShadowTextureConfig jarg1_, int jarg2);
  public final static native int ShadowTextureConfig_format_get(long jarg1, ShadowTextureConfig jarg1_);
  public final static native void ShadowTextureConfig_fsaa_set(long jarg1, ShadowTextureConfig jarg1_, long jarg2);
  public final static native long ShadowTextureConfig_fsaa_get(long jarg1, ShadowTextureConfig jarg1_);
  public final static native void ShadowTextureConfig_depthBufferPoolId_set(long jarg1, ShadowTextureConfig jarg1_, int jarg2);
  public final static native int ShadowTextureConfig_depthBufferPoolId_get(long jarg1, ShadowTextureConfig jarg1_);
  public final static native long new_ShadowTextureConfig();
  public final static native void delete_ShadowTextureConfig(long jarg1);
  public final static native long new_ShadowTextureManager();
  public final static native void delete_ShadowTextureManager(long jarg1);
  public final static native void ShadowTextureManager_getShadowTextures(long jarg1, ShadowTextureManager jarg1_, long jarg2, long jarg3);
  public final static native long ShadowTextureManager_getNullShadowTexture(long jarg1, ShadowTextureManager jarg1_, int jarg2);
  public final static native void ShadowTextureManager_clearUnused(long jarg1, ShadowTextureManager jarg1_);
  public final static native void ShadowTextureManager_clear(long jarg1, ShadowTextureManager jarg1_);
  public final static native long ShadowTextureManager_getSingleton();
  public final static native void RenderablePass_renderable_set(long jarg1, RenderablePass jarg1_, long jarg2, Renderable jarg2_);
  public final static native long RenderablePass_renderable_get(long jarg1, RenderablePass jarg1_);
  public final static native void RenderablePass_pass_set(long jarg1, RenderablePass jarg1_, long jarg2, Pass jarg2_);
  public final static native long RenderablePass_pass_get(long jarg1, RenderablePass jarg1_);
  public final static native long new_RenderablePass(long jarg1, Renderable jarg1_, long jarg2, Pass jarg2_);
  public final static native void delete_RenderablePass(long jarg1);
  public final static native void delete_QueuedRenderableVisitor(long jarg1);
  public final static native void QueuedRenderableVisitor_visit__SWIG_0(long jarg1, QueuedRenderableVisitor jarg1_, long jarg2, RenderablePass jarg2_);
  public final static native boolean QueuedRenderableVisitor_visit__SWIG_1(long jarg1, QueuedRenderableVisitor jarg1_, long jarg2, Pass jarg2_);
  public final static native void QueuedRenderableVisitor_visit__SWIG_2(long jarg1, QueuedRenderableVisitor jarg1_, long jarg2, Renderable jarg2_);
  public final static native int QueuedRenderableCollection_OM_PASS_GROUP_get();
  public final static native int QueuedRenderableCollection_OM_SORT_DESCENDING_get();
  public final static native int QueuedRenderableCollection_OM_SORT_ASCENDING_get();
  public final static native long new_QueuedRenderableCollection();
  public final static native void QueuedRenderableCollection_clear(long jarg1, QueuedRenderableCollection jarg1_);
  public final static native void QueuedRenderableCollection_removePassGroup(long jarg1, QueuedRenderableCollection jarg1_, long jarg2, Pass jarg2_);
  public final static native void QueuedRenderableCollection_resetOrganisationModes(long jarg1, QueuedRenderableCollection jarg1_);
  public final static native void QueuedRenderableCollection_addOrganisationMode(long jarg1, QueuedRenderableCollection jarg1_, int jarg2);
  public final static native void QueuedRenderableCollection_addRenderable(long jarg1, QueuedRenderableCollection jarg1_, long jarg2, Pass jarg2_, long jarg3, Renderable jarg3_);
  public final static native void QueuedRenderableCollection_sort(long jarg1, QueuedRenderableCollection jarg1_, long jarg2, Camera jarg2_);
  public final static native void QueuedRenderableCollection_acceptVisitor(long jarg1, QueuedRenderableCollection jarg1_, long jarg2, QueuedRenderableVisitor jarg2_, int jarg3);
  public final static native void QueuedRenderableCollection_merge(long jarg1, QueuedRenderableCollection jarg1_, long jarg2, QueuedRenderableCollection jarg2_);
  public final static native void delete_QueuedRenderableCollection(long jarg1);
  public final static native long new_RenderPriorityGroup(long jarg1, RenderQueueGroup jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native void delete_RenderPriorityGroup(long jarg1);
  public final static native long RenderPriorityGroup_getSolidsBasic(long jarg1, RenderPriorityGroup jarg1_);
  public final static native long RenderPriorityGroup_getSolidsDiffuseSpecular(long jarg1, RenderPriorityGroup jarg1_);
  public final static native long RenderPriorityGroup_getSolidsDecal(long jarg1, RenderPriorityGroup jarg1_);
  public final static native long RenderPriorityGroup_getSolidsNoShadowReceive(long jarg1, RenderPriorityGroup jarg1_);
  public final static native long RenderPriorityGroup_getTransparentsUnsorted(long jarg1, RenderPriorityGroup jarg1_);
  public final static native long RenderPriorityGroup_getTransparents(long jarg1, RenderPriorityGroup jarg1_);
  public final static native void RenderPriorityGroup_resetOrganisationModes(long jarg1, RenderPriorityGroup jarg1_);
  public final static native void RenderPriorityGroup_addOrganisationMode(long jarg1, RenderPriorityGroup jarg1_, int jarg2);
  public final static native void RenderPriorityGroup_defaultOrganisationMode(long jarg1, RenderPriorityGroup jarg1_);
  public final static native void RenderPriorityGroup_addRenderable(long jarg1, RenderPriorityGroup jarg1_, long jarg2, Renderable jarg2_, long jarg3, Technique jarg3_);
  public final static native void RenderPriorityGroup_sort(long jarg1, RenderPriorityGroup jarg1_, long jarg2, Camera jarg2_);
  public final static native void RenderPriorityGroup_clear(long jarg1, RenderPriorityGroup jarg1_);
  public final static native void RenderPriorityGroup_setSplitPassesByLightingType(long jarg1, RenderPriorityGroup jarg1_, boolean jarg2);
  public final static native void RenderPriorityGroup_setSplitNoShadowPasses(long jarg1, RenderPriorityGroup jarg1_, boolean jarg2);
  public final static native void RenderPriorityGroup_setShadowCastersCannotBeReceivers(long jarg1, RenderPriorityGroup jarg1_, boolean jarg2);
  public final static native void RenderPriorityGroup_merge(long jarg1, RenderPriorityGroup jarg1_, long jarg2, RenderPriorityGroup jarg2_);
  public final static native long new_RenderQueueGroup(long jarg1, RenderQueue jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native void delete_RenderQueueGroup(long jarg1);
  public final static native long RenderQueueGroup_getIterator__SWIG_0(long jarg1, RenderQueueGroup jarg1_);
  public final static native void RenderQueueGroup_addRenderable(long jarg1, RenderQueueGroup jarg1_, long jarg2, Renderable jarg2_, long jarg3, Technique jarg3_, int jarg4);
  public final static native void RenderQueueGroup_clear__SWIG_0(long jarg1, RenderQueueGroup jarg1_, boolean jarg2);
  public final static native void RenderQueueGroup_clear__SWIG_1(long jarg1, RenderQueueGroup jarg1_);
  public final static native void RenderQueueGroup_setShadowsEnabled(long jarg1, RenderQueueGroup jarg1_, boolean jarg2);
  public final static native boolean RenderQueueGroup_getShadowsEnabled(long jarg1, RenderQueueGroup jarg1_);
  public final static native void RenderQueueGroup_setSplitPassesByLightingType(long jarg1, RenderQueueGroup jarg1_, boolean jarg2);
  public final static native void RenderQueueGroup_setSplitNoShadowPasses(long jarg1, RenderQueueGroup jarg1_, boolean jarg2);
  public final static native void RenderQueueGroup_setShadowCastersCannotBeReceivers(long jarg1, RenderQueueGroup jarg1_, boolean jarg2);
  public final static native void RenderQueueGroup_resetOrganisationModes(long jarg1, RenderQueueGroup jarg1_);
  public final static native void RenderQueueGroup_addOrganisationMode(long jarg1, RenderQueueGroup jarg1_, int jarg2);
  public final static native void RenderQueueGroup_defaultOrganisationMode(long jarg1, RenderQueueGroup jarg1_);
  public final static native void RenderQueueGroup_merge(long jarg1, RenderQueueGroup jarg1_, long jarg2, RenderQueueGroup jarg2_);
  public final static native long new_RenderQueueInvocation__SWIG_0(short jarg1, String jarg2);
  public final static native long new_RenderQueueInvocation__SWIG_1(short jarg1);
  public final static native void delete_RenderQueueInvocation(long jarg1);
  public final static native short RenderQueueInvocation_getRenderQueueGroupID(long jarg1, RenderQueueInvocation jarg1_);
  public final static native String RenderQueueInvocation_getInvocationName(long jarg1, RenderQueueInvocation jarg1_);
  public final static native void RenderQueueInvocation_setSolidsOrganisation(long jarg1, RenderQueueInvocation jarg1_, int jarg2);
  public final static native int RenderQueueInvocation_getSolidsOrganisation(long jarg1, RenderQueueInvocation jarg1_);
  public final static native void RenderQueueInvocation_setSuppressShadows(long jarg1, RenderQueueInvocation jarg1_, boolean jarg2);
  public final static native boolean RenderQueueInvocation_getSuppressShadows(long jarg1, RenderQueueInvocation jarg1_);
  public final static native void RenderQueueInvocation_setSuppressRenderStateChanges(long jarg1, RenderQueueInvocation jarg1_, boolean jarg2);
  public final static native boolean RenderQueueInvocation_getSuppressRenderStateChanges(long jarg1, RenderQueueInvocation jarg1_);
  public final static native void RenderQueueInvocation_invoke(long jarg1, RenderQueueInvocation jarg1_, long jarg2, RenderQueueGroup jarg2_, long jarg3, SceneManager jarg3_);
  public final static native void RenderQueueInvocation_RENDER_QUEUE_INVOCATION_SHADOWS_set(String jarg1);
  public final static native String RenderQueueInvocation_RENDER_QUEUE_INVOCATION_SHADOWS_get();
  public final static native long new_RenderQueueInvocationSequence(String jarg1);
  public final static native void delete_RenderQueueInvocationSequence(long jarg1);
  public final static native String RenderQueueInvocationSequence_getName(long jarg1, RenderQueueInvocationSequence jarg1_);
  public final static native long RenderQueueInvocationSequence_add__SWIG_0(long jarg1, RenderQueueInvocationSequence jarg1_, short jarg2, String jarg3);
  public final static native void RenderQueueInvocationSequence_add__SWIG_1(long jarg1, RenderQueueInvocationSequence jarg1_, long jarg2, RenderQueueInvocation jarg2_);
  public final static native long RenderQueueInvocationSequence_size(long jarg1, RenderQueueInvocationSequence jarg1_);
  public final static native void RenderQueueInvocationSequence_clear(long jarg1, RenderQueueInvocationSequence jarg1_);
  public final static native long RenderQueueInvocationSequence_get(long jarg1, RenderQueueInvocationSequence jarg1_, long jarg2);
  public final static native void RenderQueueInvocationSequence_remove(long jarg1, RenderQueueInvocationSequence jarg1_, long jarg2);
  public final static native long RenderQueueInvocationSequence_iterator(long jarg1, RenderQueueInvocationSequence jarg1_);
  public final static native void ViewPoint_position_set(long jarg1, ViewPoint jarg1_, long jarg2, Vector3 jarg2_);
  public final static native long ViewPoint_position_get(long jarg1, ViewPoint jarg1_);
  public final static native void ViewPoint_orientation_set(long jarg1, ViewPoint jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long ViewPoint_orientation_get(long jarg1, ViewPoint jarg1_);
  public final static native long new_ViewPoint();
  public final static native void delete_ViewPoint(long jarg1);
  public final static native void VisibleObjectsBoundsInfo_aabb_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long VisibleObjectsBoundsInfo_aabb_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_receiverAabb_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long VisibleObjectsBoundsInfo_receiverAabb_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_minDistance_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, float jarg2);
  public final static native float VisibleObjectsBoundsInfo_minDistance_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_maxDistance_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, float jarg2);
  public final static native float VisibleObjectsBoundsInfo_maxDistance_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_minDistanceInFrustum_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, float jarg2);
  public final static native float VisibleObjectsBoundsInfo_minDistanceInFrustum_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_maxDistanceInFrustum_set(long jarg1, VisibleObjectsBoundsInfo jarg1_, float jarg2);
  public final static native float VisibleObjectsBoundsInfo_maxDistanceInFrustum_get(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native long new_VisibleObjectsBoundsInfo();
  public final static native void VisibleObjectsBoundsInfo_reset(long jarg1, VisibleObjectsBoundsInfo jarg1_);
  public final static native void VisibleObjectsBoundsInfo_merge__SWIG_0(long jarg1, VisibleObjectsBoundsInfo jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3, Sphere jarg3_, long jarg4, Camera jarg4_, boolean jarg5);
  public final static native void VisibleObjectsBoundsInfo_merge__SWIG_1(long jarg1, VisibleObjectsBoundsInfo jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3, Sphere jarg3_, long jarg4, Camera jarg4_);
  public final static native void VisibleObjectsBoundsInfo_mergeNonRenderedButInFrustum(long jarg1, VisibleObjectsBoundsInfo jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3, Sphere jarg3_, long jarg4, Camera jarg4_);
  public final static native void delete_VisibleObjectsBoundsInfo(long jarg1);
  public final static native void SceneManager_WORLD_GEOMETRY_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_WORLD_GEOMETRY_TYPE_MASK_get();
  public final static native void SceneManager_ENTITY_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_ENTITY_TYPE_MASK_get();
  public final static native void SceneManager_FX_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_FX_TYPE_MASK_get();
  public final static native void SceneManager_STATICGEOMETRY_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_STATICGEOMETRY_TYPE_MASK_get();
  public final static native void SceneManager_LIGHT_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_LIGHT_TYPE_MASK_get();
  public final static native void SceneManager_FRUSTUM_TYPE_MASK_set(long jarg1);
  public final static native long SceneManager_FRUSTUM_TYPE_MASK_get();
  public final static native void SceneManager_USER_TYPE_MASK_LIMIT_set(long jarg1);
  public final static native long SceneManager_USER_TYPE_MASK_LIMIT_get();
  public final static native long new_SceneManager_materialLess();
  public final static native void delete_SceneManager_materialLess(long jarg1);
  public final static native long new_SceneManager_lightLess();
  public final static native void delete_SceneManager_lightLess(long jarg1);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeCurvature_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyDomeGenParameters_skyDomeCurvature_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeTiling_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyDomeGenParameters_skyDomeTiling_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeDistance_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyDomeGenParameters_skyDomeDistance_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeXSegments_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, int jarg2);
  public final static native int SceneManager_SkyDomeGenParameters_skyDomeXSegments_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeYSegments_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, int jarg2);
  public final static native int SceneManager_SkyDomeGenParameters_skyDomeYSegments_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native void SceneManager_SkyDomeGenParameters_skyDomeYSegments_keep_set(long jarg1, SceneManager.SkyDomeGenParameters jarg1_, int jarg2);
  public final static native int SceneManager_SkyDomeGenParameters_skyDomeYSegments_keep_get(long jarg1, SceneManager.SkyDomeGenParameters jarg1_);
  public final static native long new_SceneManager_SkyDomeGenParameters();
  public final static native void delete_SceneManager_SkyDomeGenParameters(long jarg1);
  public final static native void SceneManager_SkyPlaneGenParameters_skyPlaneScale_set(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyPlaneGenParameters_skyPlaneScale_get(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_);
  public final static native void SceneManager_SkyPlaneGenParameters_skyPlaneTiling_set(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyPlaneGenParameters_skyPlaneTiling_get(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_);
  public final static native void SceneManager_SkyPlaneGenParameters_skyPlaneBow_set(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyPlaneGenParameters_skyPlaneBow_get(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_);
  public final static native void SceneManager_SkyPlaneGenParameters_skyPlaneXSegments_set(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_, int jarg2);
  public final static native int SceneManager_SkyPlaneGenParameters_skyPlaneXSegments_get(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_);
  public final static native void SceneManager_SkyPlaneGenParameters_skyPlaneYSegments_set(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_, int jarg2);
  public final static native int SceneManager_SkyPlaneGenParameters_skyPlaneYSegments_get(long jarg1, SceneManager.SkyPlaneGenParameters jarg1_);
  public final static native long new_SceneManager_SkyPlaneGenParameters();
  public final static native void delete_SceneManager_SkyPlaneGenParameters(long jarg1);
  public final static native void SceneManager_SkyBoxGenParameters_skyBoxDistance_set(long jarg1, SceneManager.SkyBoxGenParameters jarg1_, float jarg2);
  public final static native float SceneManager_SkyBoxGenParameters_skyBoxDistance_get(long jarg1, SceneManager.SkyBoxGenParameters jarg1_);
  public final static native long new_SceneManager_SkyBoxGenParameters();
  public final static native void delete_SceneManager_SkyBoxGenParameters(long jarg1);
  public final static native long new_SceneManager_Listener();
  public final static native void delete_SceneManager_Listener(long jarg1);
  public final static native void SceneManager_Listener_preUpdateSceneGraph(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_);
  public final static native void SceneManager_Listener_preUpdateSceneGraphSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_);
  public final static native void SceneManager_Listener_postUpdateSceneGraph(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_);
  public final static native void SceneManager_Listener_postUpdateSceneGraphSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, long jarg3, Camera jarg3_);
  public final static native void SceneManager_Listener_preFindVisibleObjects(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, int jarg3, long jarg4, Viewport jarg4_);
  public final static native void SceneManager_Listener_preFindVisibleObjectsSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, int jarg3, long jarg4, Viewport jarg4_);
  public final static native void SceneManager_Listener_postFindVisibleObjects(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, int jarg3, long jarg4, Viewport jarg4_);
  public final static native void SceneManager_Listener_postFindVisibleObjectsSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_, int jarg3, long jarg4, Viewport jarg4_);
  public final static native void SceneManager_Listener_shadowTexturesUpdated(long jarg1, SceneManager.Listener jarg1_, long jarg2);
  public final static native void SceneManager_Listener_shadowTexturesUpdatedSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2);
  public final static native void SceneManager_Listener_shadowTextureCasterPreViewProj(long jarg1, SceneManager.Listener jarg1_, long jarg2, Light jarg2_, long jarg3, Camera jarg3_, long jarg4);
  public final static native void SceneManager_Listener_shadowTextureCasterPreViewProjSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, Light jarg2_, long jarg3, Camera jarg3_, long jarg4);
  public final static native void SceneManager_Listener_shadowTextureReceiverPreViewProj(long jarg1, SceneManager.Listener jarg1_, long jarg2, Light jarg2_, long jarg3, Frustum jarg3_);
  public final static native void SceneManager_Listener_shadowTextureReceiverPreViewProjSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, Light jarg2_, long jarg3, Frustum jarg3_);
  public final static native boolean SceneManager_Listener_sortLightsAffectingFrustum(long jarg1, SceneManager.Listener jarg1_, long jarg2);
  public final static native boolean SceneManager_Listener_sortLightsAffectingFrustumSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2);
  public final static native void SceneManager_Listener_sceneManagerDestroyed(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_);
  public final static native void SceneManager_Listener_sceneManagerDestroyedSwigExplicitListener(long jarg1, SceneManager.Listener jarg1_, long jarg2, SceneManager jarg2_);
  public final static native void SceneManager_Listener_director_connect(SceneManager.Listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void SceneManager_Listener_change_ownership(SceneManager.Listener obj, long cptr, boolean take_or_release);
  public final static native long new_SceneManager_SceneMgrQueuedRenderableVisitor();
  public final static native void delete_SceneManager_SceneMgrQueuedRenderableVisitor(long jarg1);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_visit__SWIG_0(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, long jarg2, Renderable jarg2_);
  public final static native boolean SceneManager_SceneMgrQueuedRenderableVisitor_visit__SWIG_1(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, long jarg2, Pass jarg2_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_visit__SWIG_2(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, long jarg2, RenderablePass jarg2_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_targetSceneMgr_set(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long SceneManager_SceneMgrQueuedRenderableVisitor_targetSceneMgr_get(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_transparentShadowCastersMode_set(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, boolean jarg2);
  public final static native boolean SceneManager_SceneMgrQueuedRenderableVisitor_transparentShadowCastersMode_get(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_autoLights_set(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, boolean jarg2);
  public final static native boolean SceneManager_SceneMgrQueuedRenderableVisitor_autoLights_get(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_manualLightList_set(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, long jarg2);
  public final static native long SceneManager_SceneMgrQueuedRenderableVisitor_manualLightList_get(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_);
  public final static native void SceneManager_SceneMgrQueuedRenderableVisitor_scissoring_set(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_, boolean jarg2);
  public final static native boolean SceneManager_SceneMgrQueuedRenderableVisitor_scissoring_get(long jarg1, SceneManager.SceneMgrQueuedRenderableVisitor jarg1_);
  public final static native void SceneManager_prepareShadowTextures__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_, long jarg3, Viewport jarg3_, long jarg4);
  public final static native void SceneManager_prepareShadowTextures__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_, long jarg3, Viewport jarg3_);
  public final static native void SceneManager_RenderContext_renderQueue_set(long jarg1, SceneManager.RenderContext jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native long SceneManager_RenderContext_renderQueue_get(long jarg1, SceneManager.RenderContext jarg1_);
  public final static native void SceneManager_RenderContext_viewport_set(long jarg1, SceneManager.RenderContext jarg1_, long jarg2, Viewport jarg2_);
  public final static native long SceneManager_RenderContext_viewport_get(long jarg1, SceneManager.RenderContext jarg1_);
  public final static native void SceneManager_RenderContext_camera_set(long jarg1, SceneManager.RenderContext jarg1_, long jarg2, Camera jarg2_);
  public final static native long SceneManager_RenderContext_camera_get(long jarg1, SceneManager.RenderContext jarg1_);
  public final static native void SceneManager_RenderContext_activeChain_set(long jarg1, SceneManager.RenderContext jarg1_, long jarg2, CompositorChain jarg2_);
  public final static native long SceneManager_RenderContext_activeChain_get(long jarg1, SceneManager.RenderContext jarg1_);
  public final static native void SceneManager_RenderContext_rsContext_set(long jarg1, SceneManager.RenderContext jarg1_, long jarg2, RenderSystem.RenderSystemContext jarg2_);
  public final static native long SceneManager_RenderContext_rsContext_get(long jarg1, SceneManager.RenderContext jarg1_);
  public final static native long new_SceneManager_RenderContext();
  public final static native void delete_SceneManager_RenderContext(long jarg1);
  public final static native long SceneManager__pauseRendering(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__resumeRendering(long jarg1, SceneManager jarg1_, long jarg2, SceneManager.RenderContext jarg2_);
  public final static native void delete_SceneManager(long jarg1);
  public final static native String SceneManager_getName(long jarg1, SceneManager jarg1_);
  public final static native String SceneManager_getTypeName(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createCamera(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getCamera(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasCamera(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyCamera__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_);
  public final static native void SceneManager_destroyCamera__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllCameras(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createLight__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createLight__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getLight(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasLight(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getLightClippingPlanes(long jarg1, SceneManager jarg1_, long jarg2, Light jarg2_);
  public final static native long SceneManager_getLightScissorRect(long jarg1, SceneManager jarg1_, long jarg2, Light jarg2_, long jarg3, Camera jarg3_);
  public final static native void SceneManager_invalidatePerFrameScissorRectCache(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_destroyLight__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyLight__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Light jarg2_);
  public final static native void SceneManager_destroyAllLights(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__notifyLightsDirty(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager__getLightsDirtyCounter(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager__getLightsAffectingFrustum(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__populateLightList__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Vector3 jarg2_, float jarg3, long jarg4, long jarg5);
  public final static native void SceneManager__populateLightList__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Vector3 jarg2_, float jarg3, long jarg4);
  public final static native void SceneManager__populateLightList__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2, SceneNode jarg2_, float jarg3, long jarg4, long jarg5);
  public final static native void SceneManager__populateLightList__SWIG_3(long jarg1, SceneManager jarg1_, long jarg2, SceneNode jarg2_, float jarg3, long jarg4);
  public final static native long SceneManager_createSceneNode__SWIG_0(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createSceneNode__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroySceneNode__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, SceneNode jarg2_);
  public final static native void SceneManager_destroySceneNode__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getRootSceneNode(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSceneNode(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasSceneNode(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createEntity__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long SceneManager_createEntity__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native long SceneManager_createEntity__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, long jarg3, MeshPtr jarg3_);
  public final static native long SceneManager_createEntity__SWIG_3(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createEntity__SWIG_4(long jarg1, SceneManager jarg1_, long jarg2, MeshPtr jarg2_);
  public final static native long SceneManager_createEntity__SWIG_5(long jarg1, SceneManager jarg1_, String jarg2, int jarg3);
  public final static native long SceneManager_createEntity__SWIG_6(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native long SceneManager_getEntity(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasEntity(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyEntity__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Entity jarg2_);
  public final static native void SceneManager_destroyEntity__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllEntities(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createManualObject__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createManualObject__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getManualObject(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasManualObject(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyManualObject__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, ManualObject jarg2_);
  public final static native void SceneManager_destroyManualObject__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllManualObjects(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createBillboardChain__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createBillboardChain__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getBillboardChain(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasBillboardChain(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyBillboardChain__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, BillboardChain jarg2_);
  public final static native void SceneManager_destroyBillboardChain__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllBillboardChains(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createRibbonTrail__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createRibbonTrail__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getRibbonTrail(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasRibbonTrail(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyRibbonTrail__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, RibbonTrail jarg2_);
  public final static native void SceneManager_destroyRibbonTrail__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllRibbonTrails(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createParticleSystem__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native long SceneManager_createParticleSystem__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long SceneManager_createParticleSystem__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, long jarg3);
  public final static native long SceneManager_createParticleSystem__SWIG_3(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_createParticleSystem__SWIG_4(long jarg1, SceneManager jarg1_, long jarg2, String jarg3);
  public final static native long SceneManager_createParticleSystem__SWIG_5(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_createParticleSystem__SWIG_6(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getParticleSystem(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasParticleSystem(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyParticleSystem__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, ParticleSystem jarg2_);
  public final static native void SceneManager_destroyParticleSystem__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllParticleSystems(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_clearScene(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setAmbientLight(long jarg1, SceneManager jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long SceneManager_getAmbientLight(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_prepareWorldGeometry__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_prepareWorldGeometry__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, String jarg3);
  public final static native void SceneManager_prepareWorldGeometry__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native void SceneManager_setWorldGeometry__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_setWorldGeometry__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, String jarg3);
  public final static native void SceneManager_setWorldGeometry__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_estimateWorldGeometry__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_estimateWorldGeometry__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, String jarg3);
  public final static native long SceneManager_estimateWorldGeometry__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_getSuggestedViewpoint__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native long SceneManager_getSuggestedViewpoint__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_setOption(long jarg1, SceneManager jarg1_, String jarg2, long jarg3);
  public final static native boolean SceneManager_getOption(long jarg1, SceneManager jarg1_, String jarg2, long jarg3);
  public final static native boolean SceneManager_hasOption(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_getOptionValues(long jarg1, SceneManager jarg1_, String jarg2, long jarg3, StringVector jarg3_);
  public final static native boolean SceneManager_getOptionKeys(long jarg1, SceneManager jarg1_, long jarg2, StringVector jarg2_);
  public final static native void SceneManager__updateSceneGraph(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_);
  public final static native void SceneManager__findVisibleObjects(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_, long jarg3, VisibleObjectsBoundsInfo jarg3_, boolean jarg4);
  public final static native void SceneManager__issueRenderOp(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_);
  public final static native void SceneManager__applySceneAnimations(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__renderVisibleObjects(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__renderScene(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_, long jarg3, Viewport jarg3_, boolean jarg4);
  public final static native void SceneManager__queueSkiesForRendering(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_);
  public final static native void SceneManager__setDestinationRenderSystem(long jarg1, SceneManager jarg1_, long jarg2, RenderSystem jarg2_);
  public final static native void SceneManager__releaseManualHardwareResources(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__restoreManualHardwareResources(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setSkyPlane__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, boolean jarg7, float jarg8, int jarg9, int jarg10, String jarg11);
  public final static native void SceneManager_setSkyPlane__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, boolean jarg7, float jarg8, int jarg9, int jarg10);
  public final static native void SceneManager_setSkyPlane__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, boolean jarg7, float jarg8, int jarg9);
  public final static native void SceneManager_setSkyPlane__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, boolean jarg7, float jarg8);
  public final static native void SceneManager_setSkyPlane__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, boolean jarg7);
  public final static native void SceneManager_setSkyPlane__SWIG_5(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6);
  public final static native void SceneManager_setSkyPlane__SWIG_6(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5);
  public final static native void SceneManager_setSkyPlane__SWIG_7(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4);
  public final static native void SceneManager__setSkyPlane__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, short jarg7, float jarg8, int jarg9, int jarg10, String jarg11);
  public final static native void SceneManager__setSkyPlane__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, short jarg7, float jarg8, int jarg9, int jarg10);
  public final static native void SceneManager__setSkyPlane__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, short jarg7, float jarg8, int jarg9);
  public final static native void SceneManager__setSkyPlane__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, short jarg7, float jarg8);
  public final static native void SceneManager__setSkyPlane__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6, short jarg7);
  public final static native void SceneManager__setSkyPlane__SWIG_5(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5, float jarg6);
  public final static native void SceneManager__setSkyPlane__SWIG_6(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4, float jarg5);
  public final static native void SceneManager__setSkyPlane__SWIG_7(long jarg1, SceneManager jarg1_, boolean jarg2, long jarg3, Plane jarg3_, String jarg4);
  public final static native void SceneManager_setSkyPlaneEnabled(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_isSkyPlaneEnabled(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyPlaneNode(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyPlaneGenParameters(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setSkyBox__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, boolean jarg5, long jarg6, Quaternion jarg6_, String jarg7);
  public final static native void SceneManager_setSkyBox__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, boolean jarg5, long jarg6, Quaternion jarg6_);
  public final static native void SceneManager_setSkyBox__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, boolean jarg5);
  public final static native void SceneManager_setSkyBox__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4);
  public final static native void SceneManager_setSkyBox__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3);
  public final static native void SceneManager__setSkyBox__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, short jarg5, long jarg6, Quaternion jarg6_, String jarg7);
  public final static native void SceneManager__setSkyBox__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, short jarg5, long jarg6, Quaternion jarg6_);
  public final static native void SceneManager__setSkyBox__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, short jarg5);
  public final static native void SceneManager__setSkyBox__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4);
  public final static native void SceneManager__setSkyBox__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3);
  public final static native void SceneManager_setSkyBoxEnabled(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_isSkyBoxEnabled(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyBoxNode(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyBoxGenParameters(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setSkyDome__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10, int jarg11, String jarg12);
  public final static native void SceneManager_setSkyDome__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10, int jarg11);
  public final static native void SceneManager_setSkyDome__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10);
  public final static native void SceneManager_setSkyDome__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7, long jarg8, Quaternion jarg8_, int jarg9);
  public final static native void SceneManager_setSkyDome__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7, long jarg8, Quaternion jarg8_);
  public final static native void SceneManager_setSkyDome__SWIG_5(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, boolean jarg7);
  public final static native void SceneManager_setSkyDome__SWIG_6(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void SceneManager_setSkyDome__SWIG_7(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5);
  public final static native void SceneManager_setSkyDome__SWIG_8(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4);
  public final static native void SceneManager_setSkyDome__SWIG_9(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3);
  public final static native void SceneManager__setSkyDome__SWIG_0(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10, int jarg11, String jarg12);
  public final static native void SceneManager__setSkyDome__SWIG_1(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10, int jarg11);
  public final static native void SceneManager__setSkyDome__SWIG_2(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7, long jarg8, Quaternion jarg8_, int jarg9, int jarg10);
  public final static native void SceneManager__setSkyDome__SWIG_3(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7, long jarg8, Quaternion jarg8_, int jarg9);
  public final static native void SceneManager__setSkyDome__SWIG_4(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7, long jarg8, Quaternion jarg8_);
  public final static native void SceneManager__setSkyDome__SWIG_5(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6, short jarg7);
  public final static native void SceneManager__setSkyDome__SWIG_6(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void SceneManager__setSkyDome__SWIG_7(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4, float jarg5);
  public final static native void SceneManager__setSkyDome__SWIG_8(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3, float jarg4);
  public final static native void SceneManager__setSkyDome__SWIG_9(long jarg1, SceneManager jarg1_, boolean jarg2, String jarg3);
  public final static native void SceneManager_setSkyDomeEnabled(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_isSkyDomeEnabled(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyDomeNode(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getSkyDomeGenParameters(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setFog__SWIG_0(long jarg1, SceneManager jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4, float jarg5, float jarg6);
  public final static native void SceneManager_setFog__SWIG_1(long jarg1, SceneManager jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4, float jarg5);
  public final static native void SceneManager_setFog__SWIG_2(long jarg1, SceneManager jarg1_, int jarg2, long jarg3, ColourValue jarg3_, float jarg4);
  public final static native void SceneManager_setFog__SWIG_3(long jarg1, SceneManager jarg1_, int jarg2, long jarg3, ColourValue jarg3_);
  public final static native void SceneManager_setFog__SWIG_4(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager_setFog__SWIG_5(long jarg1, SceneManager jarg1_);
  public final static native int SceneManager_getFogMode(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getFogColour(long jarg1, SceneManager jarg1_);
  public final static native float SceneManager_getFogStart(long jarg1, SceneManager jarg1_);
  public final static native float SceneManager_getFogEnd(long jarg1, SceneManager jarg1_);
  public final static native float SceneManager_getFogDensity(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createBillboardSet__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_createBillboardSet__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createBillboardSet__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, long jarg3);
  public final static native long SceneManager_createBillboardSet__SWIG_3(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getBillboardSet(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasBillboardSet(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyBillboardSet__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, BillboardSet jarg2_);
  public final static native void SceneManager_destroyBillboardSet__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllBillboardSets(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setDisplaySceneNodes(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getDisplaySceneNodes(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createAnimation(long jarg1, SceneManager jarg1_, String jarg2, float jarg3);
  public final static native long SceneManager_getAnimation(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasAnimation(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAnimation(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllAnimations(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createAnimationState(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getAnimationState(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasAnimationState(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAnimationState(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllAnimationStates(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_manualRender__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, RenderOperation jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, long jarg7, Matrix4 jarg7_, boolean jarg8);
  public final static native void SceneManager_manualRender__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, RenderOperation jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, long jarg7, Matrix4 jarg7_);
  public final static native void SceneManager_manualRender__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, boolean jarg7, boolean jarg8, boolean jarg9, long jarg10);
  public final static native void SceneManager_manualRender__SWIG_3(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, boolean jarg7, boolean jarg8, boolean jarg9);
  public final static native void SceneManager_manualRender__SWIG_4(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, boolean jarg7, boolean jarg8);
  public final static native void SceneManager_manualRender__SWIG_5(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_, boolean jarg7);
  public final static native void SceneManager_manualRender__SWIG_6(long jarg1, SceneManager jarg1_, long jarg2, Renderable jarg2_, long jarg3, Pass jarg3_, long jarg4, Viewport jarg4_, long jarg5, Matrix4 jarg5_, long jarg6, Matrix4 jarg6_);
  public final static native long SceneManager_getRenderQueue(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_addRenderQueueListener(long jarg1, SceneManager jarg1_, long jarg2, RenderQueueListener jarg2_);
  public final static native void SceneManager_removeRenderQueueListener(long jarg1, SceneManager jarg1_, long jarg2, RenderQueueListener jarg2_);
  public final static native void SceneManager_addRenderObjectListener(long jarg1, SceneManager jarg1_, long jarg2, RenderObjectListener jarg2_);
  public final static native void SceneManager_removeRenderObjectListener(long jarg1, SceneManager jarg1_, long jarg2, RenderObjectListener jarg2_);
  public final static native void SceneManager_addSpecialCaseRenderQueue(long jarg1, SceneManager jarg1_, short jarg2);
  public final static native void SceneManager_removeSpecialCaseRenderQueue(long jarg1, SceneManager jarg1_, short jarg2);
  public final static native void SceneManager_clearSpecialCaseRenderQueues(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setSpecialCaseRenderQueueMode(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native int SceneManager_getSpecialCaseRenderQueueMode(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isRenderQueueToBeProcessed(long jarg1, SceneManager jarg1_, short jarg2);
  public final static native void SceneManager_setWorldGeometryRenderQueue(long jarg1, SceneManager jarg1_, short jarg2);
  public final static native short SceneManager_getWorldGeometryRenderQueue(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_showBoundingBoxes(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getShowBoundingBoxes(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__notifyAutotrackingSceneNode(long jarg1, SceneManager jarg1_, long jarg2, SceneNode jarg2_, boolean jarg3);
  public final static native long SceneManager_createAABBQuery__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, AxisAlignedBox jarg2_, long jarg3);
  public final static native long SceneManager_createAABBQuery__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, AxisAlignedBox jarg2_);
  public final static native long SceneManager_createSphereQuery__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Sphere jarg2_, long jarg3);
  public final static native long SceneManager_createSphereQuery__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Sphere jarg2_);
  public final static native long SceneManager_createPlaneBoundedVolumeQuery__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, long jarg3);
  public final static native long SceneManager_createPlaneBoundedVolumeQuery__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_createRayQuery__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Ray jarg2_, long jarg3);
  public final static native long SceneManager_createRayQuery__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Ray jarg2_);
  public final static native long SceneManager_createIntersectionQuery__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_createIntersectionQuery__SWIG_1(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_destroyQuery(long jarg1, SceneManager jarg1_, long jarg2, SceneQuery jarg2_);
  public final static native long SceneManager_getCameras(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getAnimations(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getAnimationStates(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTechnique(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native int SceneManager_getShadowTechnique(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShowDebugShadows(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getShowDebugShadows(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowColour(long jarg1, SceneManager jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long SceneManager_getShadowColour(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowDirectionalLightExtrusionDistance(long jarg1, SceneManager jarg1_, float jarg2);
  public final static native float SceneManager_getShadowDirectionalLightExtrusionDistance(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowFarDistance(long jarg1, SceneManager jarg1_, float jarg2);
  public final static native float SceneManager_getShadowFarDistance(long jarg1, SceneManager jarg1_);
  public final static native float SceneManager_getShadowFarDistanceSquared(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowIndexBufferSize(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_getShadowIndexBufferSize(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTextureSize(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager_setShadowTextureConfig__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SceneManager_setShadowTextureConfig__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SceneManager_setShadowTextureConfig__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SceneManager_setShadowTextureConfig__SWIG_3(long jarg1, SceneManager jarg1_, long jarg2, long jarg3, ShadowTextureConfig jarg3_);
  public final static native long SceneManager_getShadowTextureConfigIterator(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTexturePixelFormat(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager_setShadowTextureFSAA(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager_setShadowTextureCount(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_getShadowTextureCount(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTextureCountPerLightType(long jarg1, SceneManager jarg1_, int jarg2, long jarg3);
  public final static native long SceneManager_getShadowTextureCountPerLightType(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager_setShadowTextureSettings__SWIG_0(long jarg1, SceneManager jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SceneManager_setShadowTextureSettings__SWIG_1(long jarg1, SceneManager jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SceneManager_setShadowTextureSettings__SWIG_2(long jarg1, SceneManager jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void SceneManager_setShadowTextureSettings__SWIG_3(long jarg1, SceneManager jarg1_, int jarg2, int jarg3);
  public final static native long SceneManager_getShadowTexture(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native void SceneManager_setShadowDirLightTextureOffset(long jarg1, SceneManager jarg1_, float jarg2);
  public final static native float SceneManager_getShadowDirLightTextureOffset(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTextureFadeStart(long jarg1, SceneManager jarg1_, float jarg2);
  public final static native void SceneManager_setShadowTextureFadeEnd(long jarg1, SceneManager jarg1_, float jarg2);
  public final static native void SceneManager_setShadowTextureSelfShadow(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getShadowTextureSelfShadow(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowTextureCasterMaterial(long jarg1, SceneManager jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void SceneManager_setShadowTextureReceiverMaterial(long jarg1, SceneManager jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void SceneManager_setShadowCasterRenderBackFaces(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getShadowCasterRenderBackFaces(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowCameraSetup(long jarg1, SceneManager jarg1_, long jarg2, ShadowCameraSetupPtr jarg2_);
  public final static native long SceneManager_getShadowCameraSetup(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowUseInfiniteFarPlane(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_isShadowTechniqueStencilBased(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isShadowTechniqueTextureBased(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isShadowTechniqueModulative(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isShadowTechniqueAdditive(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isShadowTechniqueIntegrated(long jarg1, SceneManager jarg1_);
  public final static native boolean SceneManager_isShadowTechniqueInUse(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setShadowUseLightClipPlanes(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getShadowUseLightClipPlanes(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__setActiveCompositorChain(long jarg1, SceneManager jarg1_, long jarg2, CompositorChain jarg2_);
  public final static native void SceneManager_setLateMaterialResolving(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_isLateMaterialResolving(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager__getActiveCompositorChain(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_addListener(long jarg1, SceneManager jarg1_, long jarg2, SceneManager.Listener jarg2_);
  public final static native void SceneManager_removeListener(long jarg1, SceneManager jarg1_, long jarg2, SceneManager.Listener jarg2_);
  public final static native long SceneManager_createStaticGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getStaticGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasStaticGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyStaticGeometry__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, StaticGeometry jarg2_);
  public final static native void SceneManager_destroyStaticGeometry__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllStaticGeometry(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createInstancedGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native long SceneManager_getInstancedGeometry(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyInstancedGeometry__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native void SceneManager_destroyInstancedGeometry__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllInstancedGeometry(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_createInstanceManager__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, int jarg7, int jarg8);
  public final static native long SceneManager_createInstanceManager__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, int jarg7);
  public final static native long SceneManager_createInstanceManager__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6);
  public final static native long SceneManager_getInstanceManager(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native boolean SceneManager_hasInstanceManager(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyInstanceManager__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyInstanceManager__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, InstanceManager jarg2_);
  public final static native void SceneManager_destroyAllInstanceManagers(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getNumInstancesPerBatch__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, int jarg7, int jarg8);
  public final static native long SceneManager_getNumInstancesPerBatch__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, int jarg7);
  public final static native long SceneManager_getNumInstancesPerBatch__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6);
  public final static native long SceneManager_createInstancedEntity(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native void SceneManager_destroyInstancedEntity(long jarg1, SceneManager jarg1_, long jarg2, InstancedEntity jarg2_);
  public final static native void SceneManager__addDirtyInstanceManager(long jarg1, SceneManager jarg1_, long jarg2, InstanceManager jarg2_);
  public final static native long SceneManager_createMovableObject__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native long SceneManager_createMovableObject__SWIG_1(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native long SceneManager_createMovableObject__SWIG_2(long jarg1, SceneManager jarg1_, String jarg2, long jarg3);
  public final static native long SceneManager_createMovableObject__SWIG_3(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyMovableObject__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native void SceneManager_destroyMovableObject__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void SceneManager_destroyAllMovableObjectsByType(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_destroyAllMovableObjects(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getMovableObject(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native boolean SceneManager_hasMovableObject(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native long SceneManager_getMovableObjectIterator(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_injectMovableObject(long jarg1, SceneManager jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void SceneManager_extractMovableObject__SWIG_0(long jarg1, SceneManager jarg1_, String jarg2, String jarg3);
  public final static native void SceneManager_extractMovableObject__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, MovableObject jarg2_);
  public final static native void SceneManager_extractAllMovableObjectsByType(long jarg1, SceneManager jarg1_, String jarg2);
  public final static native void SceneManager_setVisibilityMask(long jarg1, SceneManager jarg1_, long jarg2);
  public final static native long SceneManager_getVisibilityMask(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager__getCombinedVisibilityMask(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setFindVisibleObjects(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getFindVisibleObjects(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setNormaliseNormalsOnScale(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getNormaliseNormalsOnScale(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_setFlipCullingOnNegativeScale(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getFlipCullingOnNegativeScale(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__injectRenderWithPass__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, long jarg3, Renderable jarg3_, boolean jarg4, boolean jarg5, long jarg6);
  public final static native void SceneManager__injectRenderWithPass__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, long jarg3, Renderable jarg3_, boolean jarg4, boolean jarg5);
  public final static native void SceneManager__injectRenderWithPass__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, long jarg3, Renderable jarg3_, boolean jarg4);
  public final static native void SceneManager__injectRenderWithPass__SWIG_3(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, long jarg3, Renderable jarg3_);
  public final static native void SceneManager__suppressRenderStateChanges(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager__areRenderStateChangesSuppressed(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager__setPass__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, boolean jarg3, boolean jarg4);
  public final static native long SceneManager__setPass__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_, boolean jarg3);
  public final static native long SceneManager__setPass__SWIG_2(long jarg1, SceneManager jarg1_, long jarg2, Pass jarg2_);
  public final static native void SceneManager__markGpuParamsDirty(long jarg1, SceneManager jarg1_, int jarg2);
  public final static native void SceneManager__suppressShadows(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager__areShadowsSuppressed(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager__renderQueueGroupObjects(long jarg1, SceneManager jarg1_, long jarg2, RenderQueueGroup jarg2_, int jarg3);
  public final static native void SceneManager_setQueuedRenderableVisitor(long jarg1, SceneManager jarg1_, long jarg2, SceneManager.SceneMgrQueuedRenderableVisitor jarg2_);
  public final static native long SceneManager_getQueuedRenderableVisitor(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getDestinationRenderSystem(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getCurrentViewport(long jarg1, SceneManager jarg1_);
  public final static native long SceneManager_getVisibleObjectsBoundsInfo(long jarg1, SceneManager jarg1_, long jarg2, Camera jarg2_);
  public final static native long SceneManager_getShadowCasterBoundsInfo__SWIG_0(long jarg1, SceneManager jarg1_, long jarg2, Light jarg2_, long jarg3);
  public final static native long SceneManager_getShadowCasterBoundsInfo__SWIG_1(long jarg1, SceneManager jarg1_, long jarg2, Light jarg2_);
  public final static native void SceneManager_setCameraRelativeRendering(long jarg1, SceneManager jarg1_, boolean jarg2);
  public final static native boolean SceneManager_getCameraRelativeRendering(long jarg1, SceneManager jarg1_);
  public final static native void SceneManager_addLodListener(long jarg1, SceneManager jarg1_, long jarg2, LodListener jarg2_);
  public final static native void SceneManager_removeLodListener(long jarg1, SceneManager jarg1_, long jarg2, LodListener jarg2_);
  public final static native void SceneManager__notifyMovableObjectLodChanged(long jarg1, SceneManager jarg1_, long jarg2, MovableObjectLodChangedEvent jarg2_);
  public final static native void SceneManager__notifyEntityMeshLodChanged(long jarg1, SceneManager jarg1_, long jarg2, EntityMeshLodChangedEvent jarg2_);
  public final static native void SceneManager__notifyEntityMaterialLodChanged(long jarg1, SceneManager jarg1_, long jarg2, EntityMaterialLodChangedEvent jarg2_);
  public final static native void SceneManager__handleLodEvents(long jarg1, SceneManager jarg1_);
  public final static native int SceneManager__getCurrentRenderStage(long jarg1, SceneManager jarg1_);
  public final static native long new_DefaultIntersectionSceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_DefaultIntersectionSceneQuery(long jarg1);
  public final static native void DefaultIntersectionSceneQuery_execute(long jarg1, DefaultIntersectionSceneQuery jarg1_, long jarg2, IntersectionSceneQueryListener jarg2_);
  public final static native long new_DefaultRaySceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_DefaultRaySceneQuery(long jarg1);
  public final static native void DefaultRaySceneQuery_execute(long jarg1, DefaultRaySceneQuery jarg1_, long jarg2, RaySceneQueryListener jarg2_);
  public final static native long new_DefaultSphereSceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_DefaultSphereSceneQuery(long jarg1);
  public final static native void DefaultSphereSceneQuery_execute(long jarg1, DefaultSphereSceneQuery jarg1_, long jarg2, SceneQueryListener jarg2_);
  public final static native long new_DefaultPlaneBoundedVolumeListSceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_DefaultPlaneBoundedVolumeListSceneQuery(long jarg1);
  public final static native void DefaultPlaneBoundedVolumeListSceneQuery_execute(long jarg1, DefaultPlaneBoundedVolumeListSceneQuery jarg1_, long jarg2, SceneQueryListener jarg2_);
  public final static native long new_DefaultAxisAlignedBoxSceneQuery(long jarg1, SceneManager jarg1_);
  public final static native void delete_DefaultAxisAlignedBoxSceneQuery(long jarg1);
  public final static native void DefaultAxisAlignedBoxSceneQuery_execute(long jarg1, DefaultAxisAlignedBoxSceneQuery jarg1_, long jarg2, SceneQueryListener jarg2_);
  public final static native int ST_GENERIC_get();
  public final static native int ST_EXTERIOR_CLOSE_get();
  public final static native int ST_EXTERIOR_FAR_get();
  public final static native int ST_EXTERIOR_REAL_FAR_get();
  public final static native int ST_INTERIOR_get();
  public final static native void SceneManagerMetaData_typeName_set(long jarg1, SceneManagerMetaData jarg1_, String jarg2);
  public final static native String SceneManagerMetaData_typeName_get(long jarg1, SceneManagerMetaData jarg1_);
  public final static native void SceneManagerMetaData_description_set(long jarg1, SceneManagerMetaData jarg1_, String jarg2);
  public final static native String SceneManagerMetaData_description_get(long jarg1, SceneManagerMetaData jarg1_);
  public final static native void SceneManagerMetaData_sceneTypeMask_set(long jarg1, SceneManagerMetaData jarg1_, int jarg2);
  public final static native int SceneManagerMetaData_sceneTypeMask_get(long jarg1, SceneManagerMetaData jarg1_);
  public final static native void SceneManagerMetaData_worldGeometrySupported_set(long jarg1, SceneManagerMetaData jarg1_, boolean jarg2);
  public final static native boolean SceneManagerMetaData_worldGeometrySupported_get(long jarg1, SceneManagerMetaData jarg1_);
  public final static native long new_SceneManagerMetaData();
  public final static native void delete_SceneManagerMetaData(long jarg1);
  public final static native void delete_SceneManagerFactory(long jarg1);
  public final static native long SceneManagerFactory_getMetaData(long jarg1, SceneManagerFactory jarg1_);
  public final static native long SceneManagerFactory_createInstance(long jarg1, SceneManagerFactory jarg1_, String jarg2);
  public final static native void SceneManagerFactory_destroyInstance(long jarg1, SceneManagerFactory jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long new_DefaultSceneManagerFactory();
  public final static native void delete_DefaultSceneManagerFactory(long jarg1);
  public final static native String DefaultSceneManagerFactory_FACTORY_TYPE_NAME_get();
  public final static native long DefaultSceneManagerFactory_createInstance(long jarg1, DefaultSceneManagerFactory jarg1_, String jarg2);
  public final static native void DefaultSceneManagerFactory_destroyInstance(long jarg1, DefaultSceneManagerFactory jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long new_DefaultSceneManager(String jarg1);
  public final static native void delete_DefaultSceneManager(long jarg1);
  public final static native String DefaultSceneManager_getTypeName(long jarg1, DefaultSceneManager jarg1_);
  public final static native long new_SceneManagerEnumerator();
  public final static native void delete_SceneManagerEnumerator(long jarg1);
  public final static native void SceneManagerEnumerator_addFactory(long jarg1, SceneManagerEnumerator jarg1_, long jarg2, SceneManagerFactory jarg2_);
  public final static native void SceneManagerEnumerator_removeFactory(long jarg1, SceneManagerEnumerator jarg1_, long jarg2, SceneManagerFactory jarg2_);
  public final static native long SceneManagerEnumerator_getMetaData__SWIG_0(long jarg1, SceneManagerEnumerator jarg1_, String jarg2);
  public final static native long SceneManagerEnumerator_getMetaData__SWIG_1(long jarg1, SceneManagerEnumerator jarg1_);
  public final static native long SceneManagerEnumerator_getMetaDataIterator(long jarg1, SceneManagerEnumerator jarg1_);
  public final static native long SceneManagerEnumerator_createSceneManager__SWIG_0(long jarg1, SceneManagerEnumerator jarg1_, String jarg2, String jarg3);
  public final static native long SceneManagerEnumerator_createSceneManager__SWIG_1(long jarg1, SceneManagerEnumerator jarg1_, String jarg2);
  public final static native long SceneManagerEnumerator_createSceneManager__SWIG_2(long jarg1, SceneManagerEnumerator jarg1_, int jarg2, String jarg3);
  public final static native long SceneManagerEnumerator_createSceneManager__SWIG_3(long jarg1, SceneManagerEnumerator jarg1_, int jarg2);
  public final static native void SceneManagerEnumerator_destroySceneManager(long jarg1, SceneManagerEnumerator jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long SceneManagerEnumerator_getSceneManager(long jarg1, SceneManagerEnumerator jarg1_, String jarg2);
  public final static native boolean SceneManagerEnumerator_hasSceneManager(long jarg1, SceneManagerEnumerator jarg1_, String jarg2);
  public final static native long SceneManagerEnumerator_getSceneManagerIterator(long jarg1, SceneManagerEnumerator jarg1_);
  public final static native long SceneManagerEnumerator_getSceneManagers(long jarg1, SceneManagerEnumerator jarg1_);
  public final static native void SceneManagerEnumerator_setRenderSystem(long jarg1, SceneManagerEnumerator jarg1_, long jarg2, RenderSystem jarg2_);
  public final static native void SceneManagerEnumerator_shutdownAll(long jarg1, SceneManagerEnumerator jarg1_);
  public final static native long SceneManagerEnumerator_getSingleton();
  public final static native long new_ConfigDialog();
  public final static native void delete_ConfigDialog(long jarg1);
  public final static native boolean ConfigDialog_display(long jarg1, ConfigDialog jarg1_);
  public final static native long new_RenderSystemList__SWIG_0();
  public final static native long new_RenderSystemList__SWIG_1(long jarg1, RenderSystemList jarg1_);
  public final static native long RenderSystemList_capacity(long jarg1, RenderSystemList jarg1_);
  public final static native void RenderSystemList_reserve(long jarg1, RenderSystemList jarg1_, long jarg2);
  public final static native boolean RenderSystemList_isEmpty(long jarg1, RenderSystemList jarg1_);
  public final static native void RenderSystemList_clear(long jarg1, RenderSystemList jarg1_);
  public final static native long new_RenderSystemList__SWIG_2(int jarg1);
  public final static native long new_RenderSystemList__SWIG_3(int jarg1, long jarg2, RenderSystem jarg2_);
  public final static native int RenderSystemList_doSize(long jarg1, RenderSystemList jarg1_);
  public final static native void RenderSystemList_doAdd__SWIG_0(long jarg1, RenderSystemList jarg1_, long jarg2, RenderSystem jarg2_);
  public final static native void RenderSystemList_doAdd__SWIG_1(long jarg1, RenderSystemList jarg1_, int jarg2, long jarg3, RenderSystem jarg3_);
  public final static native long RenderSystemList_doRemove(long jarg1, RenderSystemList jarg1_, int jarg2);
  public final static native long RenderSystemList_doGet(long jarg1, RenderSystemList jarg1_, int jarg2);
  public final static native long RenderSystemList_doSet(long jarg1, RenderSystemList jarg1_, int jarg2, long jarg3, RenderSystem jarg3_);
  public final static native void RenderSystemList_doRemoveRange(long jarg1, RenderSystemList jarg1_, int jarg2, int jarg3);
  public final static native void delete_RenderSystemList(long jarg1);
  public final static native long new_Root__SWIG_0(String jarg1, String jarg2, String jarg3);
  public final static native long new_Root__SWIG_1(String jarg1, String jarg2);
  public final static native long new_Root__SWIG_2(String jarg1);
  public final static native long new_Root__SWIG_3();
  public final static native void delete_Root(long jarg1);
  public final static native void Root_saveConfig(long jarg1, Root jarg1_);
  public final static native boolean Root_restoreConfig(long jarg1, Root jarg1_);
  public final static native boolean Root_showConfigDialog(long jarg1, Root jarg1_, long jarg2, ConfigDialog jarg2_);
  public final static native void Root_addRenderSystem(long jarg1, Root jarg1_, long jarg2, RenderSystem jarg2_);
  public final static native long Root_getAvailableRenderers(long jarg1, Root jarg1_);
  public final static native long Root_getRenderSystemByName(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_setRenderSystem(long jarg1, Root jarg1_, long jarg2, RenderSystem jarg2_);
  public final static native long Root_getRenderSystem(long jarg1, Root jarg1_);
  public final static native long Root_initialise__SWIG_0(long jarg1, Root jarg1_, boolean jarg2, String jarg3, String jarg4);
  public final static native long Root_initialise__SWIG_1(long jarg1, Root jarg1_, boolean jarg2, String jarg3);
  public final static native long Root_initialise__SWIG_2(long jarg1, Root jarg1_, boolean jarg2);
  public final static native boolean Root_isInitialised(long jarg1, Root jarg1_);
  public final static native void Root_useCustomRenderSystemCapabilities(long jarg1, Root jarg1_, long jarg2, RenderSystemCapabilities jarg2_);
  public final static native boolean Root_getRemoveRenderQueueStructuresOnClear(long jarg1, Root jarg1_);
  public final static native void Root_setRemoveRenderQueueStructuresOnClear(long jarg1, Root jarg1_, boolean jarg2);
  public final static native void Root_addSceneManagerFactory(long jarg1, Root jarg1_, long jarg2, SceneManagerFactory jarg2_);
  public final static native void Root_removeSceneManagerFactory(long jarg1, Root jarg1_, long jarg2, SceneManagerFactory jarg2_);
  public final static native long Root_getSceneManagerMetaData__SWIG_0(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root_getSceneManagerMetaData__SWIG_1(long jarg1, Root jarg1_);
  public final static native long Root_createSceneManager__SWIG_0(long jarg1, Root jarg1_);
  public final static native long Root_createSceneManager__SWIG_1(long jarg1, Root jarg1_, String jarg2, String jarg3);
  public final static native long Root_createSceneManager__SWIG_2(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_destroySceneManager(long jarg1, Root jarg1_, long jarg2, SceneManager jarg2_);
  public final static native long Root_getSceneManager(long jarg1, Root jarg1_, String jarg2);
  public final static native boolean Root_hasSceneManager(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root_getSceneManagers(long jarg1, Root jarg1_);
  public final static native long Root_getTextureManager(long jarg1, Root jarg1_);
  public final static native long Root_getMeshManager(long jarg1, Root jarg1_);
  public final static native void Root_addFrameListener(long jarg1, Root jarg1_, long jarg2, FrameListener jarg2_);
  public final static native void Root_removeFrameListener(long jarg1, Root jarg1_, long jarg2, FrameListener jarg2_);
  public final static native void Root_queueEndRendering__SWIG_0(long jarg1, Root jarg1_, boolean jarg2);
  public final static native void Root_queueEndRendering__SWIG_1(long jarg1, Root jarg1_);
  public final static native boolean Root_endRenderingQueued(long jarg1, Root jarg1_);
  public final static native void Root_startRendering(long jarg1, Root jarg1_);
  public final static native boolean Root_renderOneFrame__SWIG_0(long jarg1, Root jarg1_);
  public final static native boolean Root_renderOneFrame__SWIG_1(long jarg1, Root jarg1_, float jarg2);
  public final static native void Root_shutdown(long jarg1, Root jarg1_);
  public final static native long Root_createFileStream__SWIG_0(String jarg1, String jarg2, boolean jarg3, String jarg4);
  public final static native long Root_createFileStream__SWIG_1(String jarg1, String jarg2, boolean jarg3);
  public final static native long Root_createFileStream__SWIG_2(String jarg1, String jarg2);
  public final static native long Root_createFileStream__SWIG_3(String jarg1);
  public final static native long Root_openFileStream__SWIG_0(String jarg1, String jarg2, String jarg3);
  public final static native long Root_openFileStream__SWIG_1(String jarg1, String jarg2);
  public final static native long Root_openFileStream__SWIG_2(String jarg1);
  public final static native void Root_convertColourValue(long jarg1, Root jarg1_, long jarg2, ColourValue jarg2_, long jarg3);
  public final static native long Root_getAutoCreatedWindow(long jarg1, Root jarg1_);
  public final static native long Root_createRenderWindow__SWIG_0(long jarg1, Root jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5, long jarg6);
  public final static native long Root_createRenderWindow__SWIG_1(long jarg1, Root jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean Root_createRenderWindows(long jarg1, Root jarg1_, long jarg2, long jarg3);
  public final static native long Root_detachRenderTarget__SWIG_0(long jarg1, Root jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native long Root_detachRenderTarget__SWIG_1(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_destroyRenderTarget__SWIG_0(long jarg1, Root jarg1_, long jarg2, RenderTarget jarg2_);
  public final static native void Root_destroyRenderTarget__SWIG_1(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root_getRenderTarget(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_loadPlugin(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_unloadPlugin(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_installPlugin(long jarg1, Root jarg1_, long jarg2);
  public final static native void Root_uninstallPlugin(long jarg1, Root jarg1_, long jarg2);
  public final static native long Root_getInstalledPlugins(long jarg1, Root jarg1_);
  public final static native long Root_getTimer(long jarg1, Root jarg1_);
  public final static native boolean Root__fireFrameStarted__SWIG_0(long jarg1, Root jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean Root__fireFrameRenderingQueued__SWIG_0(long jarg1, Root jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean Root__fireFrameEnded__SWIG_0(long jarg1, Root jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native boolean Root__fireFrameStarted__SWIG_1(long jarg1, Root jarg1_);
  public final static native boolean Root__fireFrameRenderingQueued__SWIG_1(long jarg1, Root jarg1_);
  public final static native boolean Root__fireFrameEnded__SWIG_1(long jarg1, Root jarg1_);
  public final static native long Root_getNextFrameNumber(long jarg1, Root jarg1_);
  public final static native long Root__getCurrentSceneManager(long jarg1, Root jarg1_);
  public final static native void Root__pushCurrentSceneManager(long jarg1, Root jarg1_, long jarg2, SceneManager jarg2_);
  public final static native void Root__popCurrentSceneManager(long jarg1, Root jarg1_, long jarg2, SceneManager jarg2_);
  public final static native boolean Root__updateAllRenderTargets__SWIG_0(long jarg1, Root jarg1_);
  public final static native boolean Root__updateAllRenderTargets__SWIG_1(long jarg1, Root jarg1_, long jarg2, FrameEvent jarg2_);
  public final static native long Root_createRenderQueueInvocationSequence(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root_getRenderQueueInvocationSequence(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_destroyRenderQueueInvocationSequence(long jarg1, Root jarg1_, String jarg2);
  public final static native void Root_destroyAllRenderQueueInvocationSequences(long jarg1, Root jarg1_);
  public final static native long Root_getSingleton();
  public final static native void Root_clearEventTimes(long jarg1, Root jarg1_);
  public final static native void Root_setFrameSmoothingPeriod(long jarg1, Root jarg1_, float jarg2);
  public final static native float Root_getFrameSmoothingPeriod(long jarg1, Root jarg1_);
  public final static native void Root_addMovableObjectFactory__SWIG_0(long jarg1, Root jarg1_, long jarg2, MovableObjectFactory jarg2_, boolean jarg3);
  public final static native void Root_addMovableObjectFactory__SWIG_1(long jarg1, Root jarg1_, long jarg2, MovableObjectFactory jarg2_);
  public final static native void Root_removeMovableObjectFactory(long jarg1, Root jarg1_, long jarg2, MovableObjectFactory jarg2_);
  public final static native boolean Root_hasMovableObjectFactory(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root_getMovableObjectFactory(long jarg1, Root jarg1_, String jarg2);
  public final static native long Root__allocateNextMovableObjectTypeFlag(long jarg1, Root jarg1_);
  public final static native long Root_getMovableObjectFactoryIterator(long jarg1, Root jarg1_);
  public final static native long Root_getDisplayMonitorCount(long jarg1, Root jarg1_);
  public final static native long Root_getWorkQueue(long jarg1, Root jarg1_);
  public final static native void Root_setWorkQueue(long jarg1, Root jarg1_, long jarg2);
  public final static native void Root_setBlendIndicesGpuRedundant(long jarg1, Root jarg1_, boolean jarg2);
  public final static native boolean Root_isBlendIndicesGpuRedundant(long jarg1, Root jarg1_);
  public final static native void Root_setBlendWeightsGpuRedundant(long jarg1, Root jarg1_, boolean jarg2);
  public final static native boolean Root_isBlendWeightsGpuRedundant(long jarg1, Root jarg1_);
  public final static native void Root_setDefaultMinPixelSize(long jarg1, Root jarg1_, float jarg2);
  public final static native float Root_getDefaultMinPixelSize(long jarg1, Root jarg1_);
  public final static native long UnimplementedException_SWIGUpcast(long jarg1);
  public final static native long FileNotFoundException_SWIGUpcast(long jarg1);
  public final static native long IOException_SWIGUpcast(long jarg1);
  public final static native long InvalidStateException_SWIGUpcast(long jarg1);
  public final static native long InvalidParametersException_SWIGUpcast(long jarg1);
  public final static native long ItemIdentityException_SWIGUpcast(long jarg1);
  public final static native long InternalErrorException_SWIGUpcast(long jarg1);
  public final static native long RenderingAPIException_SWIGUpcast(long jarg1);
  public final static native long RuntimeAssertionException_SWIGUpcast(long jarg1);
  public final static native long InvalidCallException_SWIGUpcast(long jarg1);
  public final static native long SharedPtrInfoNone_SWIGUpcast(long jarg1);
  public final static native long AnyNumeric_SWIGUpcast(long jarg1);
  public final static native long MemoryDataStream_SWIGUpcast(long jarg1);
  public final static native long FileStreamDataStream_SWIGUpcast(long jarg1);
  public final static native long FileHandleDataStream_SWIGUpcast(long jarg1);
  public final static native long ZipArchive_SWIGUpcast(long jarg1);
  public final static native long PixelBox_SWIGUpcast(long jarg1);
  public final static native long RegionSceneQuery_SWIGUpcast(long jarg1);
  public final static native long AxisAlignedBoxSceneQuery_SWIGUpcast(long jarg1);
  public final static native long SphereSceneQuery_SWIGUpcast(long jarg1);
  public final static native long PlaneBoundedVolumeListSceneQuery_SWIGUpcast(long jarg1);
  public final static native long RaySceneQuery_SWIGUpcast(long jarg1);
  public final static native long IntersectionSceneQuery_SWIGUpcast(long jarg1);
  public final static native long GpuNamedConstantsSerializer_SWIGUpcast(long jarg1);
  public final static native long ParticleAffector_SWIGUpcast(long jarg1);
  public final static native long ParticleEmitter_SWIGUpcast(long jarg1);
  public final static native long Resource_SWIGUpcast(long jarg1);
  public final static native long Texture_SWIGUpcast(long jarg1);
  public final static native long GpuProgram_SWIGUpcast(long jarg1);
  public final static native long HighLevelGpuProgram_SWIGUpcast(long jarg1);
  public final static native long AtomAbstractNode_SWIGUpcast(long jarg1);
  public final static native long ObjectAbstractNode_SWIGUpcast(long jarg1);
  public final static native long PropertyAbstractNode_SWIGUpcast(long jarg1);
  public final static native long ImportAbstractNode_SWIGUpcast(long jarg1);
  public final static native long VariableAccessAbstractNode_SWIGUpcast(long jarg1);
  public final static native long ScriptCompilerManager_SWIGUpcast(long jarg1);
  public final static native long PreApplyTextureAliasesScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long ProcessResourceNameScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long ProcessNameExclusionScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateMaterialScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateGpuProgramScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateHighLevelGpuProgramScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateGpuSharedParametersScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateParticleSystemScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long CreateCompositorScriptCompilerEvent_SWIGUpcast(long jarg1);
  public final static native long Compositor_SWIGUpcast(long jarg1);
  public final static native long HardwareVertexBuffer_SWIGUpcast(long jarg1);
  public final static native long HardwareIndexBuffer_SWIGUpcast(long jarg1);
  public final static native long HardwarePixelBuffer_SWIGUpcast(long jarg1);
  public final static native long HardwareCounterBuffer_SWIGUpcast(long jarg1);
  public final static native long HardwareUniformBuffer_SWIGUpcast(long jarg1);
  public final static native long TempBlendedBufferInfo_SWIGUpcast(long jarg1);
  public final static native long HardwareBufferManager_SWIGUpcast(long jarg1);
  public final static native long ResourceManager_SWIGUpcast(long jarg1);
  public final static native long TextureManager_SWIGUpcast(long jarg1);
  public final static native long GpuProgramManager_SWIGUpcast(long jarg1);
  public final static native long HighLevelGpuProgramManager_SWIGUpcast(long jarg1);
  public final static native long UnifiedHighLevelGpuProgram_SWIGUpcast(long jarg1);
  public final static native long UnifiedHighLevelGpuProgramFactory_SWIGUpcast(long jarg1);
  public final static native long NumericKeyFrame_SWIGUpcast(long jarg1);
  public final static native long TransformKeyFrame_SWIGUpcast(long jarg1);
  public final static native long VertexMorphKeyFrame_SWIGUpcast(long jarg1);
  public final static native long VertexPoseKeyFrame_SWIGUpcast(long jarg1);
  public final static native long NumericAnimationTrack_SWIGUpcast(long jarg1);
  public final static native long NodeAnimationTrack_SWIGUpcast(long jarg1);
  public final static native long VertexAnimationTrack_SWIGUpcast(long jarg1);
  public final static native long Skeleton_SWIGUpcast(long jarg1);
  public final static native long SkeletonInstance_SWIGUpcast(long jarg1);
  public final static native long SkeletonManager_SWIGUpcast(long jarg1);
  public final static native long Material_SWIGUpcast(long jarg1);
  public final static native long CompositorManager_SWIGUpcast(long jarg1);
  public final static native long MaterialManager_SWIGUpcast(long jarg1);
  public final static native long BillboardChain_SWIGUpcast(long jarg1);
  public final static native long RibbonTrail_SWIGUpcast(long jarg1);
  public final static native long BillboardSet_SWIGUpcast(long jarg1);
  public final static native long ShadowRenderable_SWIGUpcast(long jarg1);
  public final static native long MovableObject_SWIGUpcast(long jarg1);
  public final static native long MovablePlane_SWIGUpcast(long jarg1);
  public final static native long Light_SWIGUpcast(long jarg1);
  public final static native long LightFactory_SWIGUpcast(long jarg1);
  public final static native long Node_DebugRenderable_SWIGUpcast(long jarg1);
  public final static native long Bone_SWIGUpcast(long jarg1);
  public final static native long SceneNode_SWIGUpcast(long jarg1);
  public final static native long DefaultShadowCameraSetup_SWIGUpcast(long jarg1);
  public final static native long FocusedShadowCameraSetup_SWIGUpcast(long jarg1);
  public final static native long LiSPSMShadowCameraSetup_SWIGUpcast(long jarg1);
  public final static native long PlaneOptimalShadowCameraSetup_SWIGUpcast(long jarg1);
  public final static native long PSSMShadowCameraSetup_SWIGUpcast(long jarg1);
  public final static native long Frustum_SWIGUpcast(long jarg1);
  public final static native long Camera_SWIGUpcast(long jarg1);
  public final static native long ManualObject_ManualObjectSection_SWIGUpcast(long jarg1);
  public final static native long ManualObject_ManualObjectSectionShadowRenderable_SWIGUpcast(long jarg1);
  public final static native long ManualObject_SWIGUpcast(long jarg1);
  public final static native long ManualObjectFactory_SWIGUpcast(long jarg1);
  public final static native long Entity_SWIGUpcast(long jarg1);
  public final static native long EntityFactory_SWIGUpcast(long jarg1);
  public final static native long SubEntity_SWIGUpcast(long jarg1);
  public final static native long ParticleSystem_SWIGUpcast(long jarg1);
  public final static native long InstancedEntity_SWIGUpcast(long jarg1);
  public final static native long InstanceBatch_SWIGUpcast(long jarg1);
  public final static native long SimpleRenderable_SWIGUpcast(long jarg1);
  public final static native long Rectangle2D_SWIGUpcast(long jarg1);
  public final static native long WireBoundingBox_SWIGUpcast(long jarg1);
  public final static native long ParticleSystemManager_SWIGUpcast(long jarg1);
  public final static native long ParticleSystemFactory_SWIGUpcast(long jarg1);
  public final static native long Mesh_SWIGUpcast(long jarg1);
  public final static native long StaticGeometry_GeometryBucket_SWIGUpcast(long jarg1);
  public final static native long StaticGeometry_Region_SWIGUpcast(long jarg1);
  public final static native long PatchMesh_SWIGUpcast(long jarg1);
  public final static native long MeshManager_SWIGUpcast(long jarg1);
  public final static native long RenderWindow_SWIGUpcast(long jarg1);
  public final static native long RenderTexture_SWIGUpcast(long jarg1);
  public final static native long MultiRenderTarget_SWIGUpcast(long jarg1);
  public final static native long CompositorChain_SWIGUpcast(long jarg1);
  public final static native long SceneManager_SceneMgrQueuedRenderableVisitor_SWIGUpcast(long jarg1);
  public final static native long DefaultIntersectionSceneQuery_SWIGUpcast(long jarg1);
  public final static native long DefaultRaySceneQuery_SWIGUpcast(long jarg1);
  public final static native long DefaultSphereSceneQuery_SWIGUpcast(long jarg1);
  public final static native long DefaultPlaneBoundedVolumeListSceneQuery_SWIGUpcast(long jarg1);
  public final static native long DefaultAxisAlignedBoxSceneQuery_SWIGUpcast(long jarg1);
  public final static native long DefaultSceneManagerFactory_SWIGUpcast(long jarg1);
  public final static native long DefaultSceneManager_SWIGUpcast(long jarg1);

  public static void SwigDirector_Resource_Listener_backgroundLoadingComplete(Resource.Listener jself, long arg0) {
    jself.backgroundLoadingComplete((arg0 == 0) ? null : new Resource(arg0, false));
  }
  public static void SwigDirector_Resource_Listener_backgroundPreparingComplete(Resource.Listener jself, long arg0) {
    jself.backgroundPreparingComplete((arg0 == 0) ? null : new Resource(arg0, false));
  }
  public static void SwigDirector_Resource_Listener_loadingComplete(Resource.Listener jself, long arg0) {
    jself.loadingComplete((arg0 == 0) ? null : new Resource(arg0, false));
  }
  public static void SwigDirector_Resource_Listener_preparingComplete(Resource.Listener jself, long arg0) {
    jself.preparingComplete((arg0 == 0) ? null : new Resource(arg0, false));
  }
  public static void SwigDirector_Resource_Listener_unloadingComplete(Resource.Listener jself, long arg0) {
    jself.unloadingComplete((arg0 == 0) ? null : new Resource(arg0, false));
  }
  public static void SwigDirector_ResourceBackgroundQueue_Listener_operationCompleted(ResourceBackgroundQueue.Listener jself, long ticket, long result) {
    jself.operationCompleted(new SWIGTYPE_p_Ogre__WorkQueue__RequestID(ticket, true), new BackgroundProcessResult(result, false));
  }
  public static boolean SwigDirector_AnimationTrack_Listener_getInterpolatedKeyFrame(AnimationTrack.Listener jself, long t, long timeIndex, long kf) {
    return jself.getInterpolatedKeyFrame((t == 0) ? null : new AnimationTrack(t, false), new TimeIndex(timeIndex, false), (kf == 0) ? null : new KeyFrame(kf, false));
  }
  public static void SwigDirector_RenderSystem_Listener_eventOccurred__SWIG_0(RenderSystem.Listener jself, String eventName, long parameters) {
    jself.eventOccurred(eventName, (parameters == 0) ? null : new SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t(parameters, false));
  }
  public static void SwigDirector_RenderSystem_Listener_eventOccurred__SWIG_1(RenderSystem.Listener jself, String eventName) {
    jself.eventOccurred(eventName);
  }
  public static void SwigDirector_CompositorInstance_Listener_notifyMaterialSetup(CompositorInstance.Listener jself, long pass_id, long mat) {
    jself.notifyMaterialSetup(pass_id, new MaterialPtr(mat, false));
  }
  public static void SwigDirector_CompositorInstance_Listener_notifyMaterialRender(CompositorInstance.Listener jself, long pass_id, long mat) {
    jself.notifyMaterialRender(pass_id, new MaterialPtr(mat, false));
  }
  public static void SwigDirector_CompositorInstance_Listener_notifyResourcesCreated(CompositorInstance.Listener jself, boolean forResizeOnly) {
    jself.notifyResourcesCreated(forResizeOnly);
  }
  public static void SwigDirector_CompositorInstance_Listener_notifyResourcesReleased(CompositorInstance.Listener jself, boolean forResizeOnly) {
    jself.notifyResourcesReleased(forResizeOnly);
  }
  public static void SwigDirector_MaterialSerializer_Listener_materialEventRaised(MaterialSerializer.Listener jself, long ser, int event, long skip, long mat) {
    jself.materialEventRaised((ser == 0) ? null : new MaterialSerializer(ser, false), MaterialSerializer.SerializeEvent.swigToEnum(event), new SWIGTYPE_p_bool(skip, false), (mat == 0) ? null : new Material(mat, false));
  }
  public static void SwigDirector_MaterialSerializer_Listener_techniqueEventRaised(MaterialSerializer.Listener jself, long ser, int event, long skip, long tech) {
    jself.techniqueEventRaised((ser == 0) ? null : new MaterialSerializer(ser, false), MaterialSerializer.SerializeEvent.swigToEnum(event), new SWIGTYPE_p_bool(skip, false), (tech == 0) ? null : new Technique(tech, false));
  }
  public static void SwigDirector_MaterialSerializer_Listener_passEventRaised(MaterialSerializer.Listener jself, long ser, int event, long skip, long pass) {
    jself.passEventRaised((ser == 0) ? null : new MaterialSerializer(ser, false), MaterialSerializer.SerializeEvent.swigToEnum(event), new SWIGTYPE_p_bool(skip, false), (pass == 0) ? null : new Pass(pass, false));
  }
  public static void SwigDirector_MaterialSerializer_Listener_textureUnitStateEventRaised(MaterialSerializer.Listener jself, long ser, int event, long skip, long textureUnit) {
    jself.textureUnitStateEventRaised((ser == 0) ? null : new MaterialSerializer(ser, false), MaterialSerializer.SerializeEvent.swigToEnum(event), new SWIGTYPE_p_bool(skip, false), (textureUnit == 0) ? null : new TextureUnitState(textureUnit, false));
  }
  public static long SwigDirector_MaterialManager_Listener_handleSchemeNotFound(MaterialManager_Listener jself, int schemeIndex, String schemeName, long originalMaterial, int lodIndex, long rend) {
    return Technique.getCPtr(jself.handleSchemeNotFound(schemeIndex, schemeName, (originalMaterial == 0) ? null : new Material(originalMaterial, false), lodIndex, (rend == 0) ? null : new Renderable(rend, false)));
  }
  public static boolean SwigDirector_MaterialManager_Listener_afterIlluminationPassesCreated(MaterialManager_Listener jself, long technique) {
    return jself.afterIlluminationPassesCreated((technique == 0) ? null : new Technique(technique, false));
  }
  public static boolean SwigDirector_MaterialManager_Listener_beforeIlluminationPassesCleared(MaterialManager_Listener jself, long technique) {
    return jself.beforeIlluminationPassesCleared((technique == 0) ? null : new Technique(technique, false));
  }
  public static void SwigDirector_MovableObject_Listener_objectDestroyed(MovableObject.Listener jself, long arg0) {
    jself.objectDestroyed((arg0 == 0) ? null : new MovableObject(arg0, false));
  }
  public static void SwigDirector_MovableObject_Listener_objectAttached(MovableObject.Listener jself, long arg0) {
    jself.objectAttached((arg0 == 0) ? null : new MovableObject(arg0, false));
  }
  public static void SwigDirector_MovableObject_Listener_objectDetached(MovableObject.Listener jself, long arg0) {
    jself.objectDetached((arg0 == 0) ? null : new MovableObject(arg0, false));
  }
  public static void SwigDirector_MovableObject_Listener_objectMoved(MovableObject.Listener jself, long arg0) {
    jself.objectMoved((arg0 == 0) ? null : new MovableObject(arg0, false));
  }
  public static boolean SwigDirector_MovableObject_Listener_objectRendering(MovableObject.Listener jself, long arg0, long arg1) {
    return jself.objectRendering((arg0 == 0) ? null : new MovableObject(arg0, false), (arg1 == 0) ? null : new Camera(arg1, false));
  }
  public static long SwigDirector_MovableObject_Listener_objectQueryLights(MovableObject.Listener jself, long arg0) {
    return SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t.getCPtr(jself.objectQueryLights((arg0 == 0) ? null : new MovableObject(arg0, false)));
  }
  public static void SwigDirector_Node_Listener_nodeUpdated(Node.Listener jself, long arg0) {
    jself.nodeUpdated((arg0 == 0) ? null : new Node(arg0, false));
  }
  public static void SwigDirector_Node_Listener_nodeDestroyed(Node.Listener jself, long arg0) {
    jself.nodeDestroyed((arg0 == 0) ? null : new Node(arg0, false));
  }
  public static void SwigDirector_Node_Listener_nodeAttached(Node.Listener jself, long arg0) {
    jself.nodeAttached((arg0 == 0) ? null : new Node(arg0, false));
  }
  public static void SwigDirector_Node_Listener_nodeDetached(Node.Listener jself, long arg0) {
    jself.nodeDetached((arg0 == 0) ? null : new Node(arg0, false));
  }
  public static void SwigDirector_Camera_Listener_cameraPreRenderScene(Camera.Listener jself, long cam) {
    jself.cameraPreRenderScene((cam == 0) ? null : new Camera(cam, false));
  }
  public static void SwigDirector_Camera_Listener_cameraPostRenderScene(Camera.Listener jself, long cam) {
    jself.cameraPostRenderScene((cam == 0) ? null : new Camera(cam, false));
  }
  public static void SwigDirector_Camera_Listener_cameraDestroyed(Camera.Listener jself, long cam) {
    jself.cameraDestroyed((cam == 0) ? null : new Camera(cam, false));
  }
  public static void SwigDirector_Viewport_Listener_viewportCameraChanged(Viewport.Listener jself, long viewport) {
    jself.viewportCameraChanged((viewport == 0) ? null : new Viewport(viewport, false));
  }
  public static void SwigDirector_Viewport_Listener_viewportDimensionsChanged(Viewport.Listener jself, long viewport) {
    jself.viewportDimensionsChanged((viewport == 0) ? null : new Viewport(viewport, false));
  }
  public static void SwigDirector_Viewport_Listener_viewportDestroyed(Viewport.Listener jself, long viewport) {
    jself.viewportDestroyed((viewport == 0) ? null : new Viewport(viewport, false));
  }
  public static void SwigDirector_SceneManager_Listener_preUpdateSceneGraph(SceneManager.Listener jself, long source, long camera) {
    jself.preUpdateSceneGraph((source == 0) ? null : new SceneManager(source, false), (camera == 0) ? null : new Camera(camera, false));
  }
  public static void SwigDirector_SceneManager_Listener_postUpdateSceneGraph(SceneManager.Listener jself, long source, long camera) {
    jself.postUpdateSceneGraph((source == 0) ? null : new SceneManager(source, false), (camera == 0) ? null : new Camera(camera, false));
  }
  public static void SwigDirector_SceneManager_Listener_preFindVisibleObjects(SceneManager.Listener jself, long source, int irs, long v) {
    jself.preFindVisibleObjects((source == 0) ? null : new SceneManager(source, false), SceneManager.IlluminationRenderStage.swigToEnum(irs), (v == 0) ? null : new Viewport(v, false));
  }
  public static void SwigDirector_SceneManager_Listener_postFindVisibleObjects(SceneManager.Listener jself, long source, int irs, long v) {
    jself.postFindVisibleObjects((source == 0) ? null : new SceneManager(source, false), SceneManager.IlluminationRenderStage.swigToEnum(irs), (v == 0) ? null : new Viewport(v, false));
  }
  public static void SwigDirector_SceneManager_Listener_shadowTexturesUpdated(SceneManager.Listener jself, long numberOfShadowTextures) {
    jself.shadowTexturesUpdated(numberOfShadowTextures);
  }
  public static void SwigDirector_SceneManager_Listener_shadowTextureCasterPreViewProj(SceneManager.Listener jself, long light, long camera, long iteration) {
    jself.shadowTextureCasterPreViewProj((light == 0) ? null : new Light(light, false), (camera == 0) ? null : new Camera(camera, false), iteration);
  }
  public static void SwigDirector_SceneManager_Listener_shadowTextureReceiverPreViewProj(SceneManager.Listener jself, long light, long frustum) {
    jself.shadowTextureReceiverPreViewProj((light == 0) ? null : new Light(light, false), (frustum == 0) ? null : new Frustum(frustum, false));
  }
  public static boolean SwigDirector_SceneManager_Listener_sortLightsAffectingFrustum(SceneManager.Listener jself, long lightList) {
    return jself.sortLightsAffectingFrustum(new SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t(lightList, false));
  }
  public static void SwigDirector_SceneManager_Listener_sceneManagerDestroyed(SceneManager.Listener jself, long source) {
    jself.sceneManagerDestroyed((source == 0) ? null : new SceneManager(source, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
