/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class MultiRenderTarget extends RenderTarget {
  private transient long swigCPtr;

  protected MultiRenderTarget(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.MultiRenderTarget_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MultiRenderTarget obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_MultiRenderTarget(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void bindSurface(long attachment, RenderTexture target) {
    OgreJNI.MultiRenderTarget_bindSurface(swigCPtr, this, attachment, RenderTexture.getCPtr(target), target);
  }

  public void unbindSurface(long attachment) {
    OgreJNI.MultiRenderTarget_unbindSurface(swigCPtr, this, attachment);
  }

  public void copyContentsToMemory(Box src, PixelBox dst, RenderTarget.FrameBuffer buffer) {
    OgreJNI.MultiRenderTarget_copyContentsToMemory__SWIG_0_0(swigCPtr, this, Box.getCPtr(src), src, PixelBox.getCPtr(dst), dst, buffer.swigValue());
  }

  public void copyContentsToMemory(Box src, PixelBox dst) {
    OgreJNI.MultiRenderTarget_copyContentsToMemory__SWIG_0_1(swigCPtr, this, Box.getCPtr(src), src, PixelBox.getCPtr(dst), dst);
  }

  public PixelFormat suggestPixelFormat() {
    return PixelFormat.swigToEnum(OgreJNI.MultiRenderTarget_suggestPixelFormat(swigCPtr, this));
  }

  public SWIGTYPE_p_Ogre__vectorT_Ogre__RenderTexture_p_t__type getBoundSurfaceList() {
    return new SWIGTYPE_p_Ogre__vectorT_Ogre__RenderTexture_p_t__type(OgreJNI.MultiRenderTarget_getBoundSurfaceList(swigCPtr, this), false);
  }

  public RenderTexture getBoundSurface(long index) {
    long cPtr = OgreJNI.MultiRenderTarget_getBoundSurface(swigCPtr, this, index);
    return (cPtr == 0) ? null : new RenderTexture(cPtr, false);
  }

}
