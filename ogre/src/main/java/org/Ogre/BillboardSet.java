/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class BillboardSet extends Renderable {
  private transient long swigCPtr;

  protected BillboardSet(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.BillboardSet_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BillboardSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_BillboardSet(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BillboardSet(String name, long poolSize, boolean externalDataSource) {
    this(OgreJNI.new_BillboardSet__SWIG_1(name, poolSize, externalDataSource), true);
  }

  public BillboardSet(String name, long poolSize) {
    this(OgreJNI.new_BillboardSet__SWIG_2(name, poolSize), true);
  }

  public BillboardSet(String name) {
    this(OgreJNI.new_BillboardSet__SWIG_3(name), true);
  }

  public Billboard createBillboard(Vector3 position, ColourValue colour) {
    long cPtr = OgreJNI.BillboardSet_createBillboard__SWIG_0(swigCPtr, this, Vector3.getCPtr(position), position, ColourValue.getCPtr(colour), colour);
    return (cPtr == 0) ? null : new Billboard(cPtr, false);
  }

  public Billboard createBillboard(Vector3 position) {
    long cPtr = OgreJNI.BillboardSet_createBillboard__SWIG_1(swigCPtr, this, Vector3.getCPtr(position), position);
    return (cPtr == 0) ? null : new Billboard(cPtr, false);
  }

  public Billboard createBillboard(float x, float y, float z, ColourValue colour) {
    long cPtr = OgreJNI.BillboardSet_createBillboard__SWIG_2(swigCPtr, this, x, y, z, ColourValue.getCPtr(colour), colour);
    return (cPtr == 0) ? null : new Billboard(cPtr, false);
  }

  public Billboard createBillboard(float x, float y, float z) {
    long cPtr = OgreJNI.BillboardSet_createBillboard__SWIG_3(swigCPtr, this, x, y, z);
    return (cPtr == 0) ? null : new Billboard(cPtr, false);
  }

  public int getNumBillboards() {
    return OgreJNI.BillboardSet_getNumBillboards(swigCPtr, this);
  }

  public void setAutoextend(boolean autoextend) {
    OgreJNI.BillboardSet_setAutoextend(swigCPtr, this, autoextend);
  }

  public boolean getAutoextend() {
    return OgreJNI.BillboardSet_getAutoextend(swigCPtr, this);
  }

  public void setSortingEnabled(boolean sortenable) {
    OgreJNI.BillboardSet_setSortingEnabled(swigCPtr, this, sortenable);
  }

  public boolean getSortingEnabled() {
    return OgreJNI.BillboardSet_getSortingEnabled(swigCPtr, this);
  }

  public void setPoolSize(long size) {
    OgreJNI.BillboardSet_setPoolSize(swigCPtr, this, size);
  }

  public long getPoolSize() {
    return OgreJNI.BillboardSet_getPoolSize(swigCPtr, this);
  }

  public void clear() {
    OgreJNI.BillboardSet_clear(swigCPtr, this);
  }

  public Billboard getBillboard(long index) {
    long cPtr = OgreJNI.BillboardSet_getBillboard(swigCPtr, this, index);
    return (cPtr == 0) ? null : new Billboard(cPtr, false);
  }

  public void removeBillboard(long index) {
    OgreJNI.BillboardSet_removeBillboard__SWIG_0(swigCPtr, this, index);
  }

  public void removeBillboard(Billboard pBill) {
    OgreJNI.BillboardSet_removeBillboard__SWIG_1(swigCPtr, this, Billboard.getCPtr(pBill), pBill);
  }

  public void setBillboardOrigin(BillboardOrigin origin) {
    OgreJNI.BillboardSet_setBillboardOrigin(swigCPtr, this, origin.swigValue());
  }

  public BillboardOrigin getBillboardOrigin() {
    return BillboardOrigin.swigToEnum(OgreJNI.BillboardSet_getBillboardOrigin(swigCPtr, this));
  }

  public void setBillboardRotationType(BillboardRotationType rotationType) {
    OgreJNI.BillboardSet_setBillboardRotationType(swigCPtr, this, rotationType.swigValue());
  }

  public BillboardRotationType getBillboardRotationType() {
    return BillboardRotationType.swigToEnum(OgreJNI.BillboardSet_getBillboardRotationType(swigCPtr, this));
  }

  public void setDefaultDimensions(float width, float height) {
    OgreJNI.BillboardSet_setDefaultDimensions(swigCPtr, this, width, height);
  }

  public void setDefaultWidth(float width) {
    OgreJNI.BillboardSet_setDefaultWidth(swigCPtr, this, width);
  }

  public float getDefaultWidth() {
    return OgreJNI.BillboardSet_getDefaultWidth(swigCPtr, this);
  }

  public void setDefaultHeight(float height) {
    OgreJNI.BillboardSet_setDefaultHeight(swigCPtr, this, height);
  }

  public float getDefaultHeight() {
    return OgreJNI.BillboardSet_getDefaultHeight(swigCPtr, this);
  }

  public void setMaterialName(String name, String groupName) {
    OgreJNI.BillboardSet_setMaterialName__SWIG_0(swigCPtr, this, name, groupName);
  }

  public void setMaterialName(String name) {
    OgreJNI.BillboardSet_setMaterialName__SWIG_1(swigCPtr, this, name);
  }

  public String getMaterialName() {
    return OgreJNI.BillboardSet_getMaterialName(swigCPtr, this);
  }

  public void _notifyCurrentCamera(Camera cam) {
    OgreJNI.BillboardSet__notifyCurrentCamera(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public void beginBillboards(long numBillboards) {
    OgreJNI.BillboardSet_beginBillboards__SWIG_0(swigCPtr, this, numBillboards);
  }

  public void beginBillboards() {
    OgreJNI.BillboardSet_beginBillboards__SWIG_1(swigCPtr, this);
  }

  public void injectBillboard(Billboard bb) {
    OgreJNI.BillboardSet_injectBillboard(swigCPtr, this, Billboard.getCPtr(bb), bb);
  }

  public void endBillboards() {
    OgreJNI.BillboardSet_endBillboards(swigCPtr, this);
  }

  public void setBounds(AxisAlignedBox box, float radius) {
    OgreJNI.BillboardSet_setBounds(swigCPtr, this, AxisAlignedBox.getCPtr(box), box, radius);
  }

  public AxisAlignedBox getBoundingBox() {
    return new AxisAlignedBox(OgreJNI.BillboardSet_getBoundingBox(swigCPtr, this), false);
  }

  public float getBoundingRadius() {
    return OgreJNI.BillboardSet_getBoundingRadius(swigCPtr, this);
  }

  public void _updateRenderQueue(RenderQueue queue) {
    OgreJNI.BillboardSet__updateRenderQueue(swigCPtr, this, RenderQueue.getCPtr(queue), queue);
  }

  public MaterialPtr getMaterial() {
    return new MaterialPtr(OgreJNI.BillboardSet_getMaterial(swigCPtr, this), false);
  }

  public void setMaterial(MaterialPtr material) {
    OgreJNI.BillboardSet_setMaterial(swigCPtr, this, MaterialPtr.getCPtr(material), material);
  }

  public void getRenderOperation(RenderOperation op) {
    OgreJNI.BillboardSet_getRenderOperation(swigCPtr, this, RenderOperation.getCPtr(op), op);
  }

  public void getWorldTransforms(Matrix4 xform) {
    OgreJNI.BillboardSet_getWorldTransforms(swigCPtr, this, Matrix4.getCPtr(xform), xform);
  }

  public void _notifyBillboardResized() {
    OgreJNI.BillboardSet__notifyBillboardResized(swigCPtr, this);
  }

  public void _notifyBillboardRotated() {
    OgreJNI.BillboardSet__notifyBillboardRotated(swigCPtr, this);
  }

  public boolean getCullIndividually() {
    return OgreJNI.BillboardSet_getCullIndividually(swigCPtr, this);
  }

  public void setCullIndividually(boolean cullIndividual) {
    OgreJNI.BillboardSet_setCullIndividually(swigCPtr, this, cullIndividual);
  }

  public void setBillboardType(BillboardType bbt) {
    OgreJNI.BillboardSet_setBillboardType(swigCPtr, this, bbt.swigValue());
  }

  public BillboardType getBillboardType() {
    return BillboardType.swigToEnum(OgreJNI.BillboardSet_getBillboardType(swigCPtr, this));
  }

  public void setCommonDirection(Vector3 vec) {
    OgreJNI.BillboardSet_setCommonDirection(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getCommonDirection() {
    return new Vector3(OgreJNI.BillboardSet_getCommonDirection(swigCPtr, this), false);
  }

  public void setCommonUpVector(Vector3 vec) {
    OgreJNI.BillboardSet_setCommonUpVector(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getCommonUpVector() {
    return new Vector3(OgreJNI.BillboardSet_getCommonUpVector(swigCPtr, this), false);
  }

  public void setUseAccurateFacing(boolean acc) {
    OgreJNI.BillboardSet_setUseAccurateFacing(swigCPtr, this, acc);
  }

  public boolean getUseAccurateFacing() {
    return OgreJNI.BillboardSet_getUseAccurateFacing(swigCPtr, this);
  }

  public String getMovableType() {
    return OgreJNI.BillboardSet_getMovableType(swigCPtr, this);
  }

  public float getSquaredViewDepth(Camera cam) {
    return OgreJNI.BillboardSet_getSquaredViewDepth(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public void _updateBounds() {
    OgreJNI.BillboardSet__updateBounds(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t getLights() {
    return new SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t(OgreJNI.BillboardSet_getLights(swigCPtr, this), false);
  }

  public void visitRenderables(Renderable.Visitor visitor, boolean debugRenderables) {
    OgreJNI.BillboardSet_visitRenderables__SWIG_0(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor, debugRenderables);
  }

  public void visitRenderables(Renderable.Visitor visitor) {
    OgreJNI.BillboardSet_visitRenderables__SWIG_1(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor);
  }

  public void _sortBillboards(Camera cam) {
    OgreJNI.BillboardSet__sortBillboards(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public SortMode _getSortMode() {
    return SortMode.swigToEnum(OgreJNI.BillboardSet__getSortMode(swigCPtr, this));
  }

  public void setBillboardsInWorldSpace(boolean ws) {
    OgreJNI.BillboardSet_setBillboardsInWorldSpace(swigCPtr, this, ws);
  }

  public boolean getBillboardsInWorldSpace() {
    return OgreJNI.BillboardSet_getBillboardsInWorldSpace(swigCPtr, this);
  }

  public void setTextureCoords(SWIGTYPE_p_Ogre__TRectT_float_t coords, int numCoords) {
    OgreJNI.BillboardSet_setTextureCoords(swigCPtr, this, SWIGTYPE_p_Ogre__TRectT_float_t.getCPtr(coords), numCoords);
  }

  public void setTextureStacksAndSlices(short stacks, short slices) {
    OgreJNI.BillboardSet_setTextureStacksAndSlices(swigCPtr, this, stacks, slices);
  }

  public SWIGTYPE_p_Ogre__TRectT_float_t getTextureCoords(SWIGTYPE_p_unsigned_short oNumCoords) {
    long cPtr = OgreJNI.BillboardSet_getTextureCoords(swigCPtr, this, SWIGTYPE_p_unsigned_short.getCPtr(oNumCoords));
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TRectT_float_t(cPtr, false);
  }

  public void setPointRenderingEnabled(boolean enabled) {
    OgreJNI.BillboardSet_setPointRenderingEnabled(swigCPtr, this, enabled);
  }

  public boolean isPointRenderingEnabled() {
    return OgreJNI.BillboardSet_isPointRenderingEnabled(swigCPtr, this);
  }

  public long getTypeFlags() {
    return OgreJNI.BillboardSet_getTypeFlags(swigCPtr, this);
  }

  public void setAutoUpdate(boolean autoUpdate) {
    OgreJNI.BillboardSet_setAutoUpdate(swigCPtr, this, autoUpdate);
  }

  public boolean getAutoUpdate() {
    return OgreJNI.BillboardSet_getAutoUpdate(swigCPtr, this);
  }

  public void notifyBillboardDataChanged() {
    OgreJNI.BillboardSet_notifyBillboardDataChanged(swigCPtr, this);
  }

  public void _releaseManualHardwareResources() {
    OgreJNI.BillboardSet__releaseManualHardwareResources(swigCPtr, this);
  }

}
