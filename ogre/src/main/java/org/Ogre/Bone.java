/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Bone extends Node {
  private transient long swigCPtr;

  protected Bone(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.Bone_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Bone obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Bone(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Bone(int handle, Skeleton creator) {
    this(OgreJNI.new_Bone__SWIG_0(handle, Skeleton.getCPtr(creator), creator), true);
  }

  public Bone(String name, int handle, Skeleton creator) {
    this(OgreJNI.new_Bone__SWIG_1(name, handle, Skeleton.getCPtr(creator), creator), true);
  }

  public Bone createChild(int handle, Vector3 translate, Quaternion rotate) {
    long cPtr = OgreJNI.Bone_createChild__SWIG_0(swigCPtr, this, handle, Vector3.getCPtr(translate), translate, Quaternion.getCPtr(rotate), rotate);
    return (cPtr == 0) ? null : new Bone(cPtr, false);
  }

  public Bone createChild(int handle, Vector3 translate) {
    long cPtr = OgreJNI.Bone_createChild__SWIG_1(swigCPtr, this, handle, Vector3.getCPtr(translate), translate);
    return (cPtr == 0) ? null : new Bone(cPtr, false);
  }

  public Bone createChild(int handle) {
    long cPtr = OgreJNI.Bone_createChild__SWIG_2(swigCPtr, this, handle);
    return (cPtr == 0) ? null : new Bone(cPtr, false);
  }

  public int getHandle() {
    return OgreJNI.Bone_getHandle(swigCPtr, this);
  }

  public void setBindingPose() {
    OgreJNI.Bone_setBindingPose(swigCPtr, this);
  }

  public void reset() {
    OgreJNI.Bone_reset(swigCPtr, this);
  }

  public void setManuallyControlled(boolean manuallyControlled) {
    OgreJNI.Bone_setManuallyControlled(swigCPtr, this, manuallyControlled);
  }

  public boolean isManuallyControlled() {
    return OgreJNI.Bone_isManuallyControlled(swigCPtr, this);
  }

  public void _getOffsetTransform(Matrix4 m) {
    OgreJNI.Bone__getOffsetTransform(swigCPtr, this, Matrix4.getCPtr(m), m);
  }

  public Vector3 _getBindingPoseInverseScale() {
    return new Vector3(OgreJNI.Bone__getBindingPoseInverseScale(swigCPtr, this), false);
  }

  public Vector3 _getBindingPoseInversePosition() {
    return new Vector3(OgreJNI.Bone__getBindingPoseInversePosition(swigCPtr, this), false);
  }

  public Quaternion _getBindingPoseInverseOrientation() {
    return new Quaternion(OgreJNI.Bone__getBindingPoseInverseOrientation(swigCPtr, this), false);
  }

  public void needUpdate(boolean forceParentUpdate) {
    OgreJNI.Bone_needUpdate__SWIG_0(swigCPtr, this, forceParentUpdate);
  }

  public void needUpdate() {
    OgreJNI.Bone_needUpdate__SWIG_1(swigCPtr, this);
  }

}
