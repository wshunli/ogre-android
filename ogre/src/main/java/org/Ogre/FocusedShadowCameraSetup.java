/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class FocusedShadowCameraSetup extends ShadowCameraSetup {
  private transient long swigCPtr;

  protected FocusedShadowCameraSetup(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.FocusedShadowCameraSetup_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FocusedShadowCameraSetup obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_FocusedShadowCameraSetup(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FocusedShadowCameraSetup() {
    this(OgreJNI.new_FocusedShadowCameraSetup(), true);
  }

  public void getShadowCamera(SceneManager sm, Camera cam, Viewport vp, Light light, Camera texCam, long iteration) {
    OgreJNI.FocusedShadowCameraSetup_getShadowCamera(swigCPtr, this, SceneManager.getCPtr(sm), sm, Camera.getCPtr(cam), cam, Viewport.getCPtr(vp), vp, Light.getCPtr(light), light, Camera.getCPtr(texCam), texCam, iteration);
  }

  public void setUseAggressiveFocusRegion(boolean aggressive) {
    OgreJNI.FocusedShadowCameraSetup_setUseAggressiveFocusRegion(swigCPtr, this, aggressive);
  }

  public boolean getUseAggressiveFocusRegion() {
    return OgreJNI.FocusedShadowCameraSetup_getUseAggressiveFocusRegion(swigCPtr, this);
  }

}
