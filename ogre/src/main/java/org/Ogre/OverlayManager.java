/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class OverlayManager extends ScriptLoader {
  private transient long swigCPtr;

  protected OverlayManager(long cPtr, boolean cMemoryOwn) {
    super(OgreOverlayJNI.OverlayManager_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OverlayManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreOverlayJNI.delete_OverlayManager(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OverlayManager() {
    this(OgreOverlayJNI.new_OverlayManager(), true);
  }

  public void _releaseManualHardwareResources() {
    OgreOverlayJNI.OverlayManager__releaseManualHardwareResources(swigCPtr, this);
  }

  public void _restoreManualHardwareResources() {
    OgreOverlayJNI.OverlayManager__restoreManualHardwareResources(swigCPtr, this);
  }

  public StringVector getScriptPatterns() {
    return new StringVector(OgreOverlayJNI.OverlayManager_getScriptPatterns(swigCPtr, this), false);
  }

  public void parseScript(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, String groupName) {
    OgreOverlayJNI.OverlayManager_parseScript(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), groupName);
  }

  public float getLoadingOrder() {
    return OgreOverlayJNI.OverlayManager_getLoadingOrder(swigCPtr, this);
  }

  public Overlay create(String name) {
    long cPtr = OgreOverlayJNI.OverlayManager_create(swigCPtr, this, name);
    return (cPtr == 0) ? null : new Overlay(cPtr, false);
  }

  public Overlay getByName(String name) {
    long cPtr = OgreOverlayJNI.OverlayManager_getByName(swigCPtr, this, name);
    return (cPtr == 0) ? null : new Overlay(cPtr, false);
  }

  public void destroy(String name) {
    OgreOverlayJNI.OverlayManager_destroy__SWIG_0(swigCPtr, this, name);
  }

  public void destroy(Overlay overlay) {
    OgreOverlayJNI.OverlayManager_destroy__SWIG_1(swigCPtr, this, Overlay.getCPtr(overlay), overlay);
  }

  public void destroyAll() {
    OgreOverlayJNI.OverlayManager_destroyAll(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__Overlay_p_std__lessT_std__string_t_t__type_t getOverlayIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__Overlay_p_std__lessT_std__string_t_t__type_t(OgreOverlayJNI.OverlayManager_getOverlayIterator(swigCPtr, this), true);
  }

  public void _queueOverlaysForRendering(Camera cam, RenderQueue pQueue, Viewport vp) {
    OgreOverlayJNI.OverlayManager__queueOverlaysForRendering(swigCPtr, this, Camera.getCPtr(cam), cam, RenderQueue.getCPtr(pQueue), pQueue, Viewport.getCPtr(vp), vp);
  }

  public int getViewportHeight() {
    return OgreOverlayJNI.OverlayManager_getViewportHeight(swigCPtr, this);
  }

  public int getViewportWidth() {
    return OgreOverlayJNI.OverlayManager_getViewportWidth(swigCPtr, this);
  }

  public float getViewportAspectRatio() {
    return OgreOverlayJNI.OverlayManager_getViewportAspectRatio(swigCPtr, this);
  }

  public OrientationMode getViewportOrientationMode() {
    return OrientationMode.swigToEnum(OgreOverlayJNI.OverlayManager_getViewportOrientationMode(swigCPtr, this));
  }

  public OverlayElement createOverlayElement(String typeName, String instanceName, boolean isTemplate) {
    long cPtr = OgreOverlayJNI.OverlayManager_createOverlayElement__SWIG_0(swigCPtr, this, typeName, instanceName, isTemplate);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement createOverlayElement(String typeName, String instanceName) {
    long cPtr = OgreOverlayJNI.OverlayManager_createOverlayElement__SWIG_1(swigCPtr, this, typeName, instanceName);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement getOverlayElement(String name, boolean isTemplate) {
    long cPtr = OgreOverlayJNI.OverlayManager_getOverlayElement__SWIG_0(swigCPtr, this, name, isTemplate);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement getOverlayElement(String name) {
    long cPtr = OgreOverlayJNI.OverlayManager_getOverlayElement__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public boolean hasOverlayElement(String name, boolean isTemplate) {
    return OgreOverlayJNI.OverlayManager_hasOverlayElement__SWIG_0(swigCPtr, this, name, isTemplate);
  }

  public boolean hasOverlayElement(String name) {
    return OgreOverlayJNI.OverlayManager_hasOverlayElement__SWIG_1(swigCPtr, this, name);
  }

  public void destroyOverlayElement(String instanceName, boolean isTemplate) {
    OgreOverlayJNI.OverlayManager_destroyOverlayElement__SWIG_0(swigCPtr, this, instanceName, isTemplate);
  }

  public void destroyOverlayElement(String instanceName) {
    OgreOverlayJNI.OverlayManager_destroyOverlayElement__SWIG_1(swigCPtr, this, instanceName);
  }

  public void destroyOverlayElement(OverlayElement pInstance, boolean isTemplate) {
    OgreOverlayJNI.OverlayManager_destroyOverlayElement__SWIG_2(swigCPtr, this, OverlayElement.getCPtr(pInstance), pInstance, isTemplate);
  }

  public void destroyOverlayElement(OverlayElement pInstance) {
    OgreOverlayJNI.OverlayManager_destroyOverlayElement__SWIG_3(swigCPtr, this, OverlayElement.getCPtr(pInstance), pInstance);
  }

  public void destroyAllOverlayElements(boolean isTemplate) {
    OgreOverlayJNI.OverlayManager_destroyAllOverlayElements__SWIG_0(swigCPtr, this, isTemplate);
  }

  public void destroyAllOverlayElements() {
    OgreOverlayJNI.OverlayManager_destroyAllOverlayElements__SWIG_1(swigCPtr, this);
  }

  public void addOverlayElementFactory(OverlayElementFactory elemFactory) {
    OgreOverlayJNI.OverlayManager_addOverlayElementFactory(swigCPtr, this, OverlayElementFactory.getCPtr(elemFactory), elemFactory);
  }

  public SWIGTYPE_p_Ogre__mapT_std__string_Ogre__OverlayElementFactory_p_std__lessT_std__string_t_t__type getOverlayElementFactoryMap() {
    return new SWIGTYPE_p_Ogre__mapT_std__string_Ogre__OverlayElementFactory_p_std__lessT_std__string_t_t__type(OgreOverlayJNI.OverlayManager_getOverlayElementFactoryMap(swigCPtr, this), false);
  }

  public OverlayElement createOverlayElementFromTemplate(String templateName, String typeName, String instanceName, boolean isTemplate) {
    long cPtr = OgreOverlayJNI.OverlayManager_createOverlayElementFromTemplate__SWIG_0(swigCPtr, this, templateName, typeName, instanceName, isTemplate);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement createOverlayElementFromTemplate(String templateName, String typeName, String instanceName) {
    long cPtr = OgreOverlayJNI.OverlayManager_createOverlayElementFromTemplate__SWIG_1(swigCPtr, this, templateName, typeName, instanceName);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement cloneOverlayElementFromTemplate(String templateName, String instanceName) {
    long cPtr = OgreOverlayJNI.OverlayManager_cloneOverlayElementFromTemplate(swigCPtr, this, templateName, instanceName);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement createOverlayElementFromFactory(String typeName, String instanceName) {
    long cPtr = OgreOverlayJNI.OverlayManager_createOverlayElementFromFactory(swigCPtr, this, typeName, instanceName);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__OverlayElement_p_std__lessT_std__string_t_t__type_t getTemplateIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__OverlayElement_p_std__lessT_std__string_t_t__type_t(OgreOverlayJNI.OverlayManager_getTemplateIterator(swigCPtr, this), true);
  }

  public boolean isTemplate(String strName) {
    return OgreOverlayJNI.OverlayManager_isTemplate(swigCPtr, this, strName);
  }

  public static OverlayManager getSingleton() {
    return new OverlayManager(OgreOverlayJNI.OverlayManager_getSingleton(), false);
  }

}
