/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class DataStream {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DataStream(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DataStream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_DataStream(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public String getName() {
    return OgreJNI.DataStream_getName(swigCPtr, this);
  }

  public int getAccessMode() {
    return OgreJNI.DataStream_getAccessMode(swigCPtr, this);
  }

  public boolean isReadable() {
    return OgreJNI.DataStream_isReadable(swigCPtr, this);
  }

  public boolean isWriteable() {
    return OgreJNI.DataStream_isWriteable(swigCPtr, this);
  }

  public long read(SWIGTYPE_p_void buf, long count) {
    return OgreJNI.DataStream_read(swigCPtr, this, SWIGTYPE_p_void.getCPtr(buf), count);
  }

  public long write(SWIGTYPE_p_void buf, long count) {
    return OgreJNI.DataStream_write(swigCPtr, this, SWIGTYPE_p_void.getCPtr(buf), count);
  }

  public long readLine(String buf, long maxCount, String delim) {
    return OgreJNI.DataStream_readLine__SWIG_0(swigCPtr, this, buf, maxCount, delim);
  }

  public long readLine(String buf, long maxCount) {
    return OgreJNI.DataStream_readLine__SWIG_1(swigCPtr, this, buf, maxCount);
  }

  public String getLine(boolean trimAfter) {
    return OgreJNI.DataStream_getLine__SWIG_0(swigCPtr, this, trimAfter);
  }

  public String getLine() {
    return OgreJNI.DataStream_getLine__SWIG_1(swigCPtr, this);
  }

  public String getAsString() {
    return OgreJNI.DataStream_getAsString(swigCPtr, this);
  }

  public long skipLine(String delim) {
    return OgreJNI.DataStream_skipLine__SWIG_0(swigCPtr, this, delim);
  }

  public long skipLine() {
    return OgreJNI.DataStream_skipLine__SWIG_1(swigCPtr, this);
  }

  public void skip(int count) {
    OgreJNI.DataStream_skip(swigCPtr, this, count);
  }

  public void seek(long pos) {
    OgreJNI.DataStream_seek(swigCPtr, this, pos);
  }

  public long tell() {
    return OgreJNI.DataStream_tell(swigCPtr, this);
  }

  public boolean eof() {
    return OgreJNI.DataStream_eof(swigCPtr, this);
  }

  public long size() {
    return OgreJNI.DataStream_size(swigCPtr, this);
  }

  public void close() {
    OgreJNI.DataStream_close(swigCPtr, this);
  }

  public final static class AccessMode {
    public final static DataStream.AccessMode READ = new DataStream.AccessMode("READ", OgreJNI.DataStream_READ_get());
    public final static DataStream.AccessMode WRITE = new DataStream.AccessMode("WRITE", OgreJNI.DataStream_WRITE_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AccessMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AccessMode.class + " with value " + swigValue);
    }

    private AccessMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AccessMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AccessMode(String swigName, AccessMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AccessMode[] swigValues = { READ, WRITE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
