/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class OverlayElement extends StringInterface {
  private transient long swigCPtr;

  protected OverlayElement(long cPtr, boolean cMemoryOwn) {
    super(OgreOverlayJNI.OverlayElement_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OverlayElement obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreOverlayJNI.delete_OverlayElement(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void initialise() {
    OgreOverlayJNI.OverlayElement_initialise(swigCPtr, this);
  }

  public void _releaseManualHardwareResources() {
    OgreOverlayJNI.OverlayElement__releaseManualHardwareResources(swigCPtr, this);
  }

  public void _restoreManualHardwareResources() {
    OgreOverlayJNI.OverlayElement__restoreManualHardwareResources(swigCPtr, this);
  }

  public String getName() {
    return OgreOverlayJNI.OverlayElement_getName(swigCPtr, this);
  }

  public void show() {
    OgreOverlayJNI.OverlayElement_show(swigCPtr, this);
  }

  public void hide() {
    OgreOverlayJNI.OverlayElement_hide(swigCPtr, this);
  }

  public boolean isVisible() {
    return OgreOverlayJNI.OverlayElement_isVisible(swigCPtr, this);
  }

  public boolean isEnabled() {
    return OgreOverlayJNI.OverlayElement_isEnabled(swigCPtr, this);
  }

  public void setEnabled(boolean b) {
    OgreOverlayJNI.OverlayElement_setEnabled(swigCPtr, this, b);
  }

  public void setDimensions(float width, float height) {
    OgreOverlayJNI.OverlayElement_setDimensions(swigCPtr, this, width, height);
  }

  public void setPosition(float left, float top) {
    OgreOverlayJNI.OverlayElement_setPosition(swigCPtr, this, left, top);
  }

  public void setWidth(float width) {
    OgreOverlayJNI.OverlayElement_setWidth(swigCPtr, this, width);
  }

  public float getWidth() {
    return OgreOverlayJNI.OverlayElement_getWidth(swigCPtr, this);
  }

  public void setHeight(float height) {
    OgreOverlayJNI.OverlayElement_setHeight(swigCPtr, this, height);
  }

  public float getHeight() {
    return OgreOverlayJNI.OverlayElement_getHeight(swigCPtr, this);
  }

  public void setLeft(float left) {
    OgreOverlayJNI.OverlayElement_setLeft(swigCPtr, this, left);
  }

  public float getLeft() {
    return OgreOverlayJNI.OverlayElement_getLeft(swigCPtr, this);
  }

  public void setTop(float Top) {
    OgreOverlayJNI.OverlayElement_setTop(swigCPtr, this, Top);
  }

  public float getTop() {
    return OgreOverlayJNI.OverlayElement_getTop(swigCPtr, this);
  }

  public float _getLeft() {
    return OgreOverlayJNI.OverlayElement__getLeft(swigCPtr, this);
  }

  public float _getTop() {
    return OgreOverlayJNI.OverlayElement__getTop(swigCPtr, this);
  }

  public float _getWidth() {
    return OgreOverlayJNI.OverlayElement__getWidth(swigCPtr, this);
  }

  public float _getHeight() {
    return OgreOverlayJNI.OverlayElement__getHeight(swigCPtr, this);
  }

  public void _setLeft(float left) {
    OgreOverlayJNI.OverlayElement__setLeft(swigCPtr, this, left);
  }

  public void _setTop(float top) {
    OgreOverlayJNI.OverlayElement__setTop(swigCPtr, this, top);
  }

  public void _setWidth(float width) {
    OgreOverlayJNI.OverlayElement__setWidth(swigCPtr, this, width);
  }

  public void _setHeight(float height) {
    OgreOverlayJNI.OverlayElement__setHeight(swigCPtr, this, height);
  }

  public void _setPosition(float left, float top) {
    OgreOverlayJNI.OverlayElement__setPosition(swigCPtr, this, left, top);
  }

  public void _setDimensions(float width, float height) {
    OgreOverlayJNI.OverlayElement__setDimensions(swigCPtr, this, width, height);
  }

  public String getMaterialName() {
    return OgreOverlayJNI.OverlayElement_getMaterialName(swigCPtr, this);
  }

  public void setMaterial(MaterialPtr mat) {
    OgreOverlayJNI.OverlayElement_setMaterial(swigCPtr, this, MaterialPtr.getCPtr(mat), mat);
  }

  public void setMaterialName(String matName) {
    OgreOverlayJNI.OverlayElement_setMaterialName(swigCPtr, this, matName);
  }

  public MaterialPtr getMaterial() {
    return new MaterialPtr(OgreOverlayJNI.OverlayElement_getMaterial(swigCPtr, this), false);
  }

  public void getWorldTransforms(Matrix4 xform) {
    OgreOverlayJNI.OverlayElement_getWorldTransforms(swigCPtr, this, Matrix4.getCPtr(xform), xform);
  }

  public void _positionsOutOfDate() {
    OgreOverlayJNI.OverlayElement__positionsOutOfDate(swigCPtr, this);
  }

  public void _update() {
    OgreOverlayJNI.OverlayElement__update(swigCPtr, this);
  }

  public void _updateFromParent() {
    OgreOverlayJNI.OverlayElement__updateFromParent(swigCPtr, this);
  }

  public void _notifyParent(OverlayContainer parent, Overlay overlay) {
    OgreOverlayJNI.OverlayElement__notifyParent(swigCPtr, this, OverlayContainer.getCPtr(parent), parent, Overlay.getCPtr(overlay), overlay);
  }

  public float _getDerivedLeft() {
    return OgreOverlayJNI.OverlayElement__getDerivedLeft(swigCPtr, this);
  }

  public float _getDerivedTop() {
    return OgreOverlayJNI.OverlayElement__getDerivedTop(swigCPtr, this);
  }

  public float _getRelativeWidth() {
    return OgreOverlayJNI.OverlayElement__getRelativeWidth(swigCPtr, this);
  }

  public float _getRelativeHeight() {
    return OgreOverlayJNI.OverlayElement__getRelativeHeight(swigCPtr, this);
  }

  public void _getClippingRegion(SWIGTYPE_p_Ogre__TRectT_float_t clippingRegion) {
    OgreOverlayJNI.OverlayElement__getClippingRegion(swigCPtr, this, SWIGTYPE_p_Ogre__TRectT_float_t.getCPtr(clippingRegion));
  }

  public int _notifyZOrder(int newZOrder) {
    return OgreOverlayJNI.OverlayElement__notifyZOrder(swigCPtr, this, newZOrder);
  }

  public void _notifyWorldTransforms(Matrix4 xform) {
    OgreOverlayJNI.OverlayElement__notifyWorldTransforms(swigCPtr, this, Matrix4.getCPtr(xform), xform);
  }

  public void _notifyViewport() {
    OgreOverlayJNI.OverlayElement__notifyViewport(swigCPtr, this);
  }

  public void _updateRenderQueue(RenderQueue queue) {
    OgreOverlayJNI.OverlayElement__updateRenderQueue(swigCPtr, this, RenderQueue.getCPtr(queue), queue);
  }

  public void visitRenderables(Renderable.Visitor visitor, boolean debugRenderables) {
    OgreOverlayJNI.OverlayElement_visitRenderables__SWIG_0(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor, debugRenderables);
  }

  public void visitRenderables(Renderable.Visitor visitor) {
    OgreOverlayJNI.OverlayElement_visitRenderables__SWIG_1(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor);
  }

  public String getTypeName() {
    return OgreOverlayJNI.OverlayElement_getTypeName(swigCPtr, this);
  }

  public void setCaption(SWIGTYPE_p_UTFString text) {
    OgreOverlayJNI.OverlayElement_setCaption(swigCPtr, this, SWIGTYPE_p_UTFString.getCPtr(text));
  }

  public SWIGTYPE_p_UTFString getCaption() {
    return new SWIGTYPE_p_UTFString(OgreOverlayJNI.OverlayElement_getCaption(swigCPtr, this), false);
  }

  public void setColour(ColourValue col) {
    OgreOverlayJNI.OverlayElement_setColour(swigCPtr, this, ColourValue.getCPtr(col), col);
  }

  public ColourValue getColour() {
    return new ColourValue(OgreOverlayJNI.OverlayElement_getColour(swigCPtr, this), false);
  }

  public void setMetricsMode(GuiMetricsMode gmm) {
    OgreOverlayJNI.OverlayElement_setMetricsMode(swigCPtr, this, gmm.swigValue());
  }

  public GuiMetricsMode getMetricsMode() {
    return GuiMetricsMode.swigToEnum(OgreOverlayJNI.OverlayElement_getMetricsMode(swigCPtr, this));
  }

  public void setHorizontalAlignment(GuiHorizontalAlignment gha) {
    OgreOverlayJNI.OverlayElement_setHorizontalAlignment(swigCPtr, this, gha.swigValue());
  }

  public GuiHorizontalAlignment getHorizontalAlignment() {
    return GuiHorizontalAlignment.swigToEnum(OgreOverlayJNI.OverlayElement_getHorizontalAlignment(swigCPtr, this));
  }

  public void setVerticalAlignment(GuiVerticalAlignment gva) {
    OgreOverlayJNI.OverlayElement_setVerticalAlignment(swigCPtr, this, gva.swigValue());
  }

  public GuiVerticalAlignment getVerticalAlignment() {
    return GuiVerticalAlignment.swigToEnum(OgreOverlayJNI.OverlayElement_getVerticalAlignment(swigCPtr, this));
  }

  public boolean contains(float x, float y) {
    return OgreOverlayJNI.OverlayElement_contains(swigCPtr, this, x, y);
  }

  public OverlayElement findElementAt(float x, float y) {
    long cPtr = OgreOverlayJNI.OverlayElement_findElementAt(swigCPtr, this, x, y);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public boolean isContainer() {
    return OgreOverlayJNI.OverlayElement_isContainer(swigCPtr, this);
  }

  public boolean isKeyEnabled() {
    return OgreOverlayJNI.OverlayElement_isKeyEnabled(swigCPtr, this);
  }

  public boolean isCloneable() {
    return OgreOverlayJNI.OverlayElement_isCloneable(swigCPtr, this);
  }

  public void setCloneable(boolean c) {
    OgreOverlayJNI.OverlayElement_setCloneable(swigCPtr, this, c);
  }

  public OverlayContainer getParent() {
    long cPtr = OgreOverlayJNI.OverlayElement_getParent(swigCPtr, this);
    return (cPtr == 0) ? null : new OverlayContainer(cPtr, false);
  }

  public void _setParent(OverlayContainer parent) {
    OgreOverlayJNI.OverlayElement__setParent(swigCPtr, this, OverlayContainer.getCPtr(parent), parent);
  }

  public int getZOrder() {
    return OgreOverlayJNI.OverlayElement_getZOrder(swigCPtr, this);
  }

  public float getSquaredViewDepth(Camera cam) {
    return OgreOverlayJNI.OverlayElement_getSquaredViewDepth(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t getLights() {
    return new SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t(OgreOverlayJNI.OverlayElement_getLights(swigCPtr, this), false);
  }

  public void copyFromTemplate(OverlayElement templateOverlay) {
    OgreOverlayJNI.OverlayElement_copyFromTemplate(swigCPtr, this, OverlayElement.getCPtr(templateOverlay), templateOverlay);
  }

  public OverlayElement clone(String instanceName) {
    long cPtr = OgreOverlayJNI.OverlayElement_clone(swigCPtr, this, instanceName);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

  public OverlayElement getSourceTemplate() {
    long cPtr = OgreOverlayJNI.OverlayElement_getSourceTemplate(swigCPtr, this);
    return (cPtr == 0) ? null : new OverlayElement(cPtr, false);
  }

}
