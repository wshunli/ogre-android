/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public final class TextureUsage {
  public final static TextureUsage TU_STATIC = new TextureUsage("TU_STATIC", OgreJNI.TU_STATIC_get());
  public final static TextureUsage TU_DYNAMIC = new TextureUsage("TU_DYNAMIC", OgreJNI.TU_DYNAMIC_get());
  public final static TextureUsage TU_WRITE_ONLY = new TextureUsage("TU_WRITE_ONLY", OgreJNI.TU_WRITE_ONLY_get());
  public final static TextureUsage TU_STATIC_WRITE_ONLY = new TextureUsage("TU_STATIC_WRITE_ONLY", OgreJNI.TU_STATIC_WRITE_ONLY_get());
  public final static TextureUsage TU_DYNAMIC_WRITE_ONLY = new TextureUsage("TU_DYNAMIC_WRITE_ONLY", OgreJNI.TU_DYNAMIC_WRITE_ONLY_get());
  public final static TextureUsage TU_DYNAMIC_WRITE_ONLY_DISCARDABLE = new TextureUsage("TU_DYNAMIC_WRITE_ONLY_DISCARDABLE", OgreJNI.TU_DYNAMIC_WRITE_ONLY_DISCARDABLE_get());
  public final static TextureUsage TU_AUTOMIPMAP = new TextureUsage("TU_AUTOMIPMAP", OgreJNI.TU_AUTOMIPMAP_get());
  public final static TextureUsage TU_RENDERTARGET = new TextureUsage("TU_RENDERTARGET", OgreJNI.TU_RENDERTARGET_get());
  public final static TextureUsage TU_NOTSHADERRESOURCE = new TextureUsage("TU_NOTSHADERRESOURCE", OgreJNI.TU_NOTSHADERRESOURCE_get());
  public final static TextureUsage TU_DEFAULT = new TextureUsage("TU_DEFAULT", OgreJNI.TU_DEFAULT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static TextureUsage swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + TextureUsage.class + " with value " + swigValue);
  }

  private TextureUsage(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private TextureUsage(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private TextureUsage(String swigName, TextureUsage swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static TextureUsage[] swigValues = { TU_STATIC, TU_DYNAMIC, TU_WRITE_ONLY, TU_STATIC_WRITE_ONLY, TU_DYNAMIC_WRITE_ONLY, TU_DYNAMIC_WRITE_ONLY_DISCARDABLE, TU_AUTOMIPMAP, TU_RENDERTARGET, TU_NOTSHADERRESOURCE, TU_DEFAULT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

