/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Entity extends MovableObject {
  private transient long swigCPtr;

  protected Entity(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.Entity_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Entity obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Entity(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public MeshPtr getMesh() {
    return new MeshPtr(OgreJNI.Entity_getMesh(swigCPtr, this), false);
  }

  public SubEntity getSubEntity(long index) {
    long cPtr = OgreJNI.Entity_getSubEntity__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new SubEntity(cPtr, false);
  }

  public SubEntity getSubEntity(String name) {
    long cPtr = OgreJNI.Entity_getSubEntity__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new SubEntity(cPtr, false);
  }

  public long getNumSubEntities() {
    return OgreJNI.Entity_getNumSubEntities(swigCPtr, this);
  }

  public SubEntityList getSubEntities() {
    return new SubEntityList(OgreJNI.Entity_getSubEntities(swigCPtr, this), false);
  }

  public Entity clone(String newName) {
    long cPtr = OgreJNI.Entity_clone(swigCPtr, this, newName);
    return (cPtr == 0) ? null : new Entity(cPtr, false);
  }

  public void setMaterialName(String name, String groupName) {
    OgreJNI.Entity_setMaterialName__SWIG_0(swigCPtr, this, name, groupName);
  }

  public void setMaterialName(String name) {
    OgreJNI.Entity_setMaterialName__SWIG_1(swigCPtr, this, name);
  }

  public void setMaterial(MaterialPtr material) {
    OgreJNI.Entity_setMaterial(swigCPtr, this, MaterialPtr.getCPtr(material), material);
  }

  public void _releaseManualHardwareResources() {
    OgreJNI.Entity__releaseManualHardwareResources(swigCPtr, this);
  }

  public void _restoreManualHardwareResources() {
    OgreJNI.Entity__restoreManualHardwareResources(swigCPtr, this);
  }

  public void _notifyCurrentCamera(Camera cam) {
    OgreJNI.Entity__notifyCurrentCamera(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public void setRenderQueueGroup(short queueID) {
    OgreJNI.Entity_setRenderQueueGroup(swigCPtr, this, queueID);
  }

  public void setRenderQueueGroupAndPriority(short queueID, int priority) {
    OgreJNI.Entity_setRenderQueueGroupAndPriority(swigCPtr, this, queueID, priority);
  }

  public AxisAlignedBox getBoundingBox() {
    return new AxisAlignedBox(OgreJNI.Entity_getBoundingBox(swigCPtr, this), false);
  }

  public AxisAlignedBox getChildObjectsBoundingBox() {
    return new AxisAlignedBox(OgreJNI.Entity_getChildObjectsBoundingBox(swigCPtr, this), true);
  }

  public void _updateRenderQueue(RenderQueue queue) {
    OgreJNI.Entity__updateRenderQueue(swigCPtr, this, RenderQueue.getCPtr(queue), queue);
  }

  public String getMovableType() {
    return OgreJNI.Entity_getMovableType(swigCPtr, this);
  }

  public AnimationState getAnimationState(String name) {
    long cPtr = OgreJNI.Entity_getAnimationState(swigCPtr, this, name);
    return (cPtr == 0) ? null : new AnimationState(cPtr, false);
  }

  public boolean hasAnimationState(String name) {
    return OgreJNI.Entity_hasAnimationState(swigCPtr, this, name);
  }

  public AnimationStateSet getAllAnimationStates() {
    long cPtr = OgreJNI.Entity_getAllAnimationStates(swigCPtr, this);
    return (cPtr == 0) ? null : new AnimationStateSet(cPtr, false);
  }

  public void setDisplaySkeleton(boolean display) {
    OgreJNI.Entity_setDisplaySkeleton(swigCPtr, this, display);
  }

  public boolean getDisplaySkeleton() {
    return OgreJNI.Entity_getDisplaySkeleton(swigCPtr, this);
  }

  public long getNumManualLodLevels() {
    return OgreJNI.Entity_getNumManualLodLevels(swigCPtr, this);
  }

  public int getCurrentLodIndex() {
    return OgreJNI.Entity_getCurrentLodIndex(swigCPtr, this);
  }

  public Entity getManualLodLevel(long index) {
    long cPtr = OgreJNI.Entity_getManualLodLevel(swigCPtr, this, index);
    return (cPtr == 0) ? null : new Entity(cPtr, false);
  }

  public void setMeshLodBias(float factor, int maxDetailIndex, int minDetailIndex) {
    OgreJNI.Entity_setMeshLodBias__SWIG_0(swigCPtr, this, factor, maxDetailIndex, minDetailIndex);
  }

  public void setMeshLodBias(float factor, int maxDetailIndex) {
    OgreJNI.Entity_setMeshLodBias__SWIG_1(swigCPtr, this, factor, maxDetailIndex);
  }

  public void setMeshLodBias(float factor) {
    OgreJNI.Entity_setMeshLodBias__SWIG_2(swigCPtr, this, factor);
  }

  public void setMaterialLodBias(float factor, int maxDetailIndex, int minDetailIndex) {
    OgreJNI.Entity_setMaterialLodBias__SWIG_0(swigCPtr, this, factor, maxDetailIndex, minDetailIndex);
  }

  public void setMaterialLodBias(float factor, int maxDetailIndex) {
    OgreJNI.Entity_setMaterialLodBias__SWIG_1(swigCPtr, this, factor, maxDetailIndex);
  }

  public void setMaterialLodBias(float factor) {
    OgreJNI.Entity_setMaterialLodBias__SWIG_2(swigCPtr, this, factor);
  }

  public void setPolygonModeOverrideable(boolean PolygonModeOverrideable) {
    OgreJNI.Entity_setPolygonModeOverrideable(swigCPtr, this, PolygonModeOverrideable);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable, Quaternion offsetOrientation, Vector3 offsetPosition) {
    long cPtr = OgreJNI.Entity_attachObjectToBone__SWIG_0(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable, Quaternion.getCPtr(offsetOrientation), offsetOrientation, Vector3.getCPtr(offsetPosition), offsetPosition);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable, Quaternion offsetOrientation) {
    long cPtr = OgreJNI.Entity_attachObjectToBone__SWIG_1(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable, Quaternion.getCPtr(offsetOrientation), offsetOrientation);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable) {
    long cPtr = OgreJNI.Entity_attachObjectToBone__SWIG_2(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public MovableObject detachObjectFromBone(String movableName) {
    long cPtr = OgreJNI.Entity_detachObjectFromBone__SWIG_0(swigCPtr, this, movableName);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public void detachObjectFromBone(MovableObject obj) {
    OgreJNI.Entity_detachObjectFromBone__SWIG_1(swigCPtr, this, MovableObject.getCPtr(obj), obj);
  }

  public void detachAllObjectsFromBone() {
    OgreJNI.Entity_detachAllObjectsFromBone(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__MovableObject_p_std__lessT_std__string_t_t__type_t getAttachedObjectIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_Ogre__mapT_std__string_Ogre__MovableObject_p_std__lessT_std__string_t_t__type_t(OgreJNI.Entity_getAttachedObjectIterator(swigCPtr, this), true);
  }

  public float getBoundingRadius() {
    return OgreJNI.Entity_getBoundingRadius(swigCPtr, this);
  }

  public AxisAlignedBox getWorldBoundingBox(boolean derive) {
    return new AxisAlignedBox(OgreJNI.Entity_getWorldBoundingBox__SWIG_0(swigCPtr, this, derive), false);
  }

  public AxisAlignedBox getWorldBoundingBox() {
    return new AxisAlignedBox(OgreJNI.Entity_getWorldBoundingBox__SWIG_1(swigCPtr, this), false);
  }

  public Sphere getWorldBoundingSphere(boolean derive) {
    return new Sphere(OgreJNI.Entity_getWorldBoundingSphere__SWIG_0(swigCPtr, this, derive), false);
  }

  public Sphere getWorldBoundingSphere() {
    return new Sphere(OgreJNI.Entity_getWorldBoundingSphere__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__EdgeData getEdgeList() {
    long cPtr = OgreJNI.Entity_getEdgeList(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__EdgeData(cPtr, false);
  }

  public boolean hasEdgeList() {
    return OgreJNI.Entity_hasEdgeList(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__VectorIteratorT_Ogre__vectorT_Ogre__ShadowRenderable_p_t__type_t getShadowVolumeRenderableIterator(ShadowTechnique shadowTechnique, Light light, HardwareIndexBufferPtr indexBuffer, SWIGTYPE_p_size_t indexBufferUsedSize, boolean extrudeVertices, float extrusionDistance, long flags) {
    return new SWIGTYPE_p_Ogre__VectorIteratorT_Ogre__vectorT_Ogre__ShadowRenderable_p_t__type_t(OgreJNI.Entity_getShadowVolumeRenderableIterator__SWIG_0(swigCPtr, this, shadowTechnique.swigValue(), Light.getCPtr(light), light, HardwareIndexBufferPtr.getCPtr(indexBuffer), indexBuffer, SWIGTYPE_p_size_t.getCPtr(indexBufferUsedSize), extrudeVertices, extrusionDistance, flags), true);
  }

  public SWIGTYPE_p_Ogre__VectorIteratorT_Ogre__vectorT_Ogre__ShadowRenderable_p_t__type_t getShadowVolumeRenderableIterator(ShadowTechnique shadowTechnique, Light light, HardwareIndexBufferPtr indexBuffer, SWIGTYPE_p_size_t indexBufferUsedSize, boolean extrudeVertices, float extrusionDistance) {
    return new SWIGTYPE_p_Ogre__VectorIteratorT_Ogre__vectorT_Ogre__ShadowRenderable_p_t__type_t(OgreJNI.Entity_getShadowVolumeRenderableIterator__SWIG_1(swigCPtr, this, shadowTechnique.swigValue(), Light.getCPtr(light), light, HardwareIndexBufferPtr.getCPtr(indexBuffer), indexBuffer, SWIGTYPE_p_size_t.getCPtr(indexBufferUsedSize), extrudeVertices, extrusionDistance), true);
  }

  public Matrix4 _getBoneMatrices() {
    long cPtr = OgreJNI.Entity__getBoneMatrices(swigCPtr, this);
    return (cPtr == 0) ? null : new Matrix4(cPtr, false);
  }

  public int _getNumBoneMatrices() {
    return OgreJNI.Entity__getNumBoneMatrices(swigCPtr, this);
  }

  public boolean hasSkeleton() {
    return OgreJNI.Entity_hasSkeleton(swigCPtr, this);
  }

  public SkeletonInstance getSkeleton() {
    long cPtr = OgreJNI.Entity_getSkeleton(swigCPtr, this);
    return (cPtr == 0) ? null : new SkeletonInstance(cPtr, false);
  }

  public boolean isHardwareAnimationEnabled() {
    return OgreJNI.Entity_isHardwareAnimationEnabled(swigCPtr, this);
  }

  public void _notifyAttached(Node parent, boolean isTagPoint) {
    OgreJNI.Entity__notifyAttached__SWIG_0(swigCPtr, this, Node.getCPtr(parent), parent, isTagPoint);
  }

  public void _notifyAttached(Node parent) {
    OgreJNI.Entity__notifyAttached__SWIG_1(swigCPtr, this, Node.getCPtr(parent), parent);
  }

  public int getSoftwareAnimationRequests() {
    return OgreJNI.Entity_getSoftwareAnimationRequests(swigCPtr, this);
  }

  public int getSoftwareAnimationNormalsRequests() {
    return OgreJNI.Entity_getSoftwareAnimationNormalsRequests(swigCPtr, this);
  }

  public void addSoftwareAnimationRequest(boolean normalsAlso) {
    OgreJNI.Entity_addSoftwareAnimationRequest(swigCPtr, this, normalsAlso);
  }

  public void removeSoftwareAnimationRequest(boolean normalsAlso) {
    OgreJNI.Entity_removeSoftwareAnimationRequest(swigCPtr, this, normalsAlso);
  }

  public void shareSkeletonInstanceWith(Entity entity) {
    OgreJNI.Entity_shareSkeletonInstanceWith(swigCPtr, this, Entity.getCPtr(entity), entity);
  }

  public boolean hasVertexAnimation() {
    return OgreJNI.Entity_hasVertexAnimation(swigCPtr, this);
  }

  public void stopSharingSkeletonInstance() {
    OgreJNI.Entity_stopSharingSkeletonInstance(swigCPtr, this);
  }

  public boolean sharesSkeletonInstance() {
    return OgreJNI.Entity_sharesSkeletonInstance(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__setT_Ogre__Entity_p_std__lessT_Ogre__Entity_p_t_t__type getSkeletonInstanceSharingSet() {
    long cPtr = OgreJNI.Entity_getSkeletonInstanceSharingSet(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__setT_Ogre__Entity_p_std__lessT_Ogre__Entity_p_t_t__type(cPtr, false);
  }

  public void refreshAvailableAnimationState() {
    OgreJNI.Entity_refreshAvailableAnimationState(swigCPtr, this);
  }

  public void _updateAnimation() {
    OgreJNI.Entity__updateAnimation(swigCPtr, this);
  }

  public boolean _isAnimated() {
    return OgreJNI.Entity__isAnimated(swigCPtr, this);
  }

  public boolean _isSkeletonAnimated() {
    return OgreJNI.Entity__isSkeletonAnimated(swigCPtr, this);
  }

  public VertexData _getSkelAnimVertexData() {
    long cPtr = OgreJNI.Entity__getSkelAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new VertexData(cPtr, false);
  }

  public VertexData _getSoftwareVertexAnimVertexData() {
    long cPtr = OgreJNI.Entity__getSoftwareVertexAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new VertexData(cPtr, false);
  }

  public VertexData _getHardwareVertexAnimVertexData() {
    long cPtr = OgreJNI.Entity__getHardwareVertexAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new VertexData(cPtr, false);
  }

  public TempBlendedBufferInfo _getSkelAnimTempBufferInfo() {
    long cPtr = OgreJNI.Entity__getSkelAnimTempBufferInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new TempBlendedBufferInfo(cPtr, false);
  }

  public TempBlendedBufferInfo _getVertexAnimTempBufferInfo() {
    long cPtr = OgreJNI.Entity__getVertexAnimTempBufferInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new TempBlendedBufferInfo(cPtr, false);
  }

  public long getTypeFlags() {
    return OgreJNI.Entity_getTypeFlags(swigCPtr, this);
  }

  public VertexData getVertexDataForBinding() {
    long cPtr = OgreJNI.Entity_getVertexDataForBinding(swigCPtr, this);
    return (cPtr == 0) ? null : new VertexData(cPtr, false);
  }

  public Entity.VertexDataBindChoice chooseVertexDataForBinding(boolean hasVertexAnim) {
    return Entity.VertexDataBindChoice.swigToEnum(OgreJNI.Entity_chooseVertexDataForBinding(swigCPtr, this, hasVertexAnim));
  }

  public boolean _getBuffersMarkedForAnimation() {
    return OgreJNI.Entity__getBuffersMarkedForAnimation(swigCPtr, this);
  }

  public void _markBuffersUsedForAnimation() {
    OgreJNI.Entity__markBuffersUsedForAnimation(swigCPtr, this);
  }

  public boolean isInitialised() {
    return OgreJNI.Entity_isInitialised(swigCPtr, this);
  }

  public void _initialise(boolean forceReinitialise) {
    OgreJNI.Entity__initialise__SWIG_0(swigCPtr, this, forceReinitialise);
  }

  public void _initialise() {
    OgreJNI.Entity__initialise__SWIG_1(swigCPtr, this);
  }

  public void _deinitialise() {
    OgreJNI.Entity__deinitialise(swigCPtr, this);
  }

  public void backgroundLoadingComplete(Resource res) {
    OgreJNI.Entity_backgroundLoadingComplete(swigCPtr, this, Resource.getCPtr(res), res);
  }

  public void visitRenderables(Renderable.Visitor visitor, boolean debugRenderables) {
    OgreJNI.Entity_visitRenderables__SWIG_0(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor, debugRenderables);
  }

  public void visitRenderables(Renderable.Visitor visitor) {
    OgreJNI.Entity_visitRenderables__SWIG_1(swigCPtr, this, Renderable.Visitor.getCPtr(visitor), visitor);
  }

  public float _getMeshLodFactorTransformed() {
    return OgreJNI.Entity__getMeshLodFactorTransformed(swigCPtr, this);
  }

  public void setSkipAnimationStateUpdate(boolean skip) {
    OgreJNI.Entity_setSkipAnimationStateUpdate(swigCPtr, this, skip);
  }

  public boolean getSkipAnimationStateUpdate() {
    return OgreJNI.Entity_getSkipAnimationStateUpdate(swigCPtr, this);
  }

  public void setAlwaysUpdateMainSkeleton(boolean update) {
    OgreJNI.Entity_setAlwaysUpdateMainSkeleton(swigCPtr, this, update);
  }

  public boolean getAlwaysUpdateMainSkeleton() {
    return OgreJNI.Entity_getAlwaysUpdateMainSkeleton(swigCPtr, this);
  }

  public void setUpdateBoundingBoxFromSkeleton(boolean update) {
    OgreJNI.Entity_setUpdateBoundingBoxFromSkeleton(swigCPtr, this, update);
  }

  public boolean getUpdateBoundingBoxFromSkeleton() {
    return OgreJNI.Entity_getUpdateBoundingBoxFromSkeleton(swigCPtr, this);
  }

  public final static class VertexDataBindChoice {
    public final static Entity.VertexDataBindChoice BIND_ORIGINAL = new Entity.VertexDataBindChoice("BIND_ORIGINAL");
    public final static Entity.VertexDataBindChoice BIND_SOFTWARE_SKELETAL = new Entity.VertexDataBindChoice("BIND_SOFTWARE_SKELETAL");
    public final static Entity.VertexDataBindChoice BIND_SOFTWARE_MORPH = new Entity.VertexDataBindChoice("BIND_SOFTWARE_MORPH");
    public final static Entity.VertexDataBindChoice BIND_HARDWARE_MORPH = new Entity.VertexDataBindChoice("BIND_HARDWARE_MORPH");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static VertexDataBindChoice swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + VertexDataBindChoice.class + " with value " + swigValue);
    }

    private VertexDataBindChoice(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private VertexDataBindChoice(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private VertexDataBindChoice(String swigName, VertexDataBindChoice swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static VertexDataBindChoice[] swigValues = { BIND_ORIGINAL, BIND_SOFTWARE_SKELETAL, BIND_SOFTWARE_MORPH, BIND_HARDWARE_MORPH };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
