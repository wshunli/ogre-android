/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public final class Capabilities {
  public final static Capabilities RSC_AUTOMIPMAP = new Capabilities("RSC_AUTOMIPMAP", OgreJNI.RSC_AUTOMIPMAP_get());
  public final static Capabilities RSC_BLENDING = new Capabilities("RSC_BLENDING", OgreJNI.RSC_BLENDING_get());
  public final static Capabilities RSC_ANISOTROPY = new Capabilities("RSC_ANISOTROPY", OgreJNI.RSC_ANISOTROPY_get());
  public final static Capabilities RSC_DOT3 = new Capabilities("RSC_DOT3", OgreJNI.RSC_DOT3_get());
  public final static Capabilities RSC_CUBEMAPPING = new Capabilities("RSC_CUBEMAPPING", OgreJNI.RSC_CUBEMAPPING_get());
  public final static Capabilities RSC_HWSTENCIL = new Capabilities("RSC_HWSTENCIL", OgreJNI.RSC_HWSTENCIL_get());
  public final static Capabilities RSC_VBO = new Capabilities("RSC_VBO", OgreJNI.RSC_VBO_get());
  public final static Capabilities RSC_32BIT_INDEX = new Capabilities("RSC_32BIT_INDEX", OgreJNI.RSC_32BIT_INDEX_get());
  public final static Capabilities RSC_VERTEX_PROGRAM = new Capabilities("RSC_VERTEX_PROGRAM", OgreJNI.RSC_VERTEX_PROGRAM_get());
  public final static Capabilities RSC_FRAGMENT_PROGRAM = new Capabilities("RSC_FRAGMENT_PROGRAM", OgreJNI.RSC_FRAGMENT_PROGRAM_get());
  public final static Capabilities RSC_SCISSOR_TEST = new Capabilities("RSC_SCISSOR_TEST", OgreJNI.RSC_SCISSOR_TEST_get());
  public final static Capabilities RSC_TWO_SIDED_STENCIL = new Capabilities("RSC_TWO_SIDED_STENCIL", OgreJNI.RSC_TWO_SIDED_STENCIL_get());
  public final static Capabilities RSC_STENCIL_WRAP = new Capabilities("RSC_STENCIL_WRAP", OgreJNI.RSC_STENCIL_WRAP_get());
  public final static Capabilities RSC_HWOCCLUSION = new Capabilities("RSC_HWOCCLUSION", OgreJNI.RSC_HWOCCLUSION_get());
  public final static Capabilities RSC_USER_CLIP_PLANES = new Capabilities("RSC_USER_CLIP_PLANES", OgreJNI.RSC_USER_CLIP_PLANES_get());
  public final static Capabilities RSC_VERTEX_FORMAT_UBYTE4 = new Capabilities("RSC_VERTEX_FORMAT_UBYTE4", OgreJNI.RSC_VERTEX_FORMAT_UBYTE4_get());
  public final static Capabilities RSC_INFINITE_FAR_PLANE = new Capabilities("RSC_INFINITE_FAR_PLANE", OgreJNI.RSC_INFINITE_FAR_PLANE_get());
  public final static Capabilities RSC_HWRENDER_TO_TEXTURE = new Capabilities("RSC_HWRENDER_TO_TEXTURE", OgreJNI.RSC_HWRENDER_TO_TEXTURE_get());
  public final static Capabilities RSC_TEXTURE_FLOAT = new Capabilities("RSC_TEXTURE_FLOAT", OgreJNI.RSC_TEXTURE_FLOAT_get());
  public final static Capabilities RSC_NON_POWER_OF_2_TEXTURES = new Capabilities("RSC_NON_POWER_OF_2_TEXTURES", OgreJNI.RSC_NON_POWER_OF_2_TEXTURES_get());
  public final static Capabilities RSC_TEXTURE_3D = new Capabilities("RSC_TEXTURE_3D", OgreJNI.RSC_TEXTURE_3D_get());
  public final static Capabilities RSC_POINT_SPRITES = new Capabilities("RSC_POINT_SPRITES", OgreJNI.RSC_POINT_SPRITES_get());
  public final static Capabilities RSC_POINT_EXTENDED_PARAMETERS = new Capabilities("RSC_POINT_EXTENDED_PARAMETERS", OgreJNI.RSC_POINT_EXTENDED_PARAMETERS_get());
  public final static Capabilities RSC_VERTEX_TEXTURE_FETCH = new Capabilities("RSC_VERTEX_TEXTURE_FETCH", OgreJNI.RSC_VERTEX_TEXTURE_FETCH_get());
  public final static Capabilities RSC_MIPMAP_LOD_BIAS = new Capabilities("RSC_MIPMAP_LOD_BIAS", OgreJNI.RSC_MIPMAP_LOD_BIAS_get());
  public final static Capabilities RSC_GEOMETRY_PROGRAM = new Capabilities("RSC_GEOMETRY_PROGRAM", OgreJNI.RSC_GEOMETRY_PROGRAM_get());
  public final static Capabilities RSC_HWRENDER_TO_VERTEX_BUFFER = new Capabilities("RSC_HWRENDER_TO_VERTEX_BUFFER", OgreJNI.RSC_HWRENDER_TO_VERTEX_BUFFER_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION = new Capabilities("RSC_TEXTURE_COMPRESSION", OgreJNI.RSC_TEXTURE_COMPRESSION_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_DXT = new Capabilities("RSC_TEXTURE_COMPRESSION_DXT", OgreJNI.RSC_TEXTURE_COMPRESSION_DXT_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_VTC = new Capabilities("RSC_TEXTURE_COMPRESSION_VTC", OgreJNI.RSC_TEXTURE_COMPRESSION_VTC_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_PVRTC = new Capabilities("RSC_TEXTURE_COMPRESSION_PVRTC", OgreJNI.RSC_TEXTURE_COMPRESSION_PVRTC_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_ATC = new Capabilities("RSC_TEXTURE_COMPRESSION_ATC", OgreJNI.RSC_TEXTURE_COMPRESSION_ATC_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_ETC1 = new Capabilities("RSC_TEXTURE_COMPRESSION_ETC1", OgreJNI.RSC_TEXTURE_COMPRESSION_ETC1_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_ETC2 = new Capabilities("RSC_TEXTURE_COMPRESSION_ETC2", OgreJNI.RSC_TEXTURE_COMPRESSION_ETC2_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_BC4_BC5 = new Capabilities("RSC_TEXTURE_COMPRESSION_BC4_BC5", OgreJNI.RSC_TEXTURE_COMPRESSION_BC4_BC5_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_BC6H_BC7 = new Capabilities("RSC_TEXTURE_COMPRESSION_BC6H_BC7", OgreJNI.RSC_TEXTURE_COMPRESSION_BC6H_BC7_get());
  public final static Capabilities RSC_FIXED_FUNCTION = new Capabilities("RSC_FIXED_FUNCTION", OgreJNI.RSC_FIXED_FUNCTION_get());
  public final static Capabilities RSC_MRT_DIFFERENT_BIT_DEPTHS = new Capabilities("RSC_MRT_DIFFERENT_BIT_DEPTHS", OgreJNI.RSC_MRT_DIFFERENT_BIT_DEPTHS_get());
  public final static Capabilities RSC_ALPHA_TO_COVERAGE = new Capabilities("RSC_ALPHA_TO_COVERAGE", OgreJNI.RSC_ALPHA_TO_COVERAGE_get());
  public final static Capabilities RSC_ADVANCED_BLEND_OPERATIONS = new Capabilities("RSC_ADVANCED_BLEND_OPERATIONS", OgreJNI.RSC_ADVANCED_BLEND_OPERATIONS_get());
  public final static Capabilities RSC_RTT_SEPARATE_DEPTHBUFFER = new Capabilities("RSC_RTT_SEPARATE_DEPTHBUFFER", OgreJNI.RSC_RTT_SEPARATE_DEPTHBUFFER_get());
  public final static Capabilities RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE = new Capabilities("RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE", OgreJNI.RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE_get());
  public final static Capabilities RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL = new Capabilities("RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL", OgreJNI.RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL_get());
  public final static Capabilities RSC_VERTEX_BUFFER_INSTANCE_DATA = new Capabilities("RSC_VERTEX_BUFFER_INSTANCE_DATA", OgreJNI.RSC_VERTEX_BUFFER_INSTANCE_DATA_get());
  public final static Capabilities RSC_CAN_GET_COMPILED_SHADER_BUFFER = new Capabilities("RSC_CAN_GET_COMPILED_SHADER_BUFFER", OgreJNI.RSC_CAN_GET_COMPILED_SHADER_BUFFER_get());
  public final static Capabilities RSC_SHADER_SUBROUTINE = new Capabilities("RSC_SHADER_SUBROUTINE", OgreJNI.RSC_SHADER_SUBROUTINE_get());
  public final static Capabilities RSC_HWRENDER_TO_TEXTURE_3D = new Capabilities("RSC_HWRENDER_TO_TEXTURE_3D", OgreJNI.RSC_HWRENDER_TO_TEXTURE_3D_get());
  public final static Capabilities RSC_TEXTURE_1D = new Capabilities("RSC_TEXTURE_1D", OgreJNI.RSC_TEXTURE_1D_get());
  public final static Capabilities RSC_TESSELLATION_HULL_PROGRAM = new Capabilities("RSC_TESSELLATION_HULL_PROGRAM", OgreJNI.RSC_TESSELLATION_HULL_PROGRAM_get());
  public final static Capabilities RSC_TESSELLATION_DOMAIN_PROGRAM = new Capabilities("RSC_TESSELLATION_DOMAIN_PROGRAM", OgreJNI.RSC_TESSELLATION_DOMAIN_PROGRAM_get());
  public final static Capabilities RSC_COMPUTE_PROGRAM = new Capabilities("RSC_COMPUTE_PROGRAM", OgreJNI.RSC_COMPUTE_PROGRAM_get());
  public final static Capabilities RSC_HWOCCLUSION_ASYNCHRONOUS = new Capabilities("RSC_HWOCCLUSION_ASYNCHRONOUS", OgreJNI.RSC_HWOCCLUSION_ASYNCHRONOUS_get());
  public final static Capabilities RSC_ATOMIC_COUNTERS = new Capabilities("RSC_ATOMIC_COUNTERS", OgreJNI.RSC_ATOMIC_COUNTERS_get());
  public final static Capabilities RSC_READ_BACK_AS_TEXTURE = new Capabilities("RSC_READ_BACK_AS_TEXTURE", OgreJNI.RSC_READ_BACK_AS_TEXTURE_get());
  public final static Capabilities RSC_HW_GAMMA = new Capabilities("RSC_HW_GAMMA", OgreJNI.RSC_HW_GAMMA_get());
  public final static Capabilities RSC_AUTOMIPMAP_COMPRESSED = new Capabilities("RSC_AUTOMIPMAP_COMPRESSED", OgreJNI.RSC_AUTOMIPMAP_COMPRESSED_get());
  public final static Capabilities RSC_COMPLETE_TEXTURE_BINDING = new Capabilities("RSC_COMPLETE_TEXTURE_BINDING", OgreJNI.RSC_COMPLETE_TEXTURE_BINDING_get());
  public final static Capabilities RSC_TEXTURE_COMPRESSION_ASTC = new Capabilities("RSC_TEXTURE_COMPRESSION_ASTC", OgreJNI.RSC_TEXTURE_COMPRESSION_ASTC_get());
  public final static Capabilities RSC_PERSTAGECONSTANT = new Capabilities("RSC_PERSTAGECONSTANT", OgreJNI.RSC_PERSTAGECONSTANT_get());
  public final static Capabilities RSC_GL1_5_NOVBO = new Capabilities("RSC_GL1_5_NOVBO", OgreJNI.RSC_GL1_5_NOVBO_get());
  public final static Capabilities RSC_FBO = new Capabilities("RSC_FBO", OgreJNI.RSC_FBO_get());
  public final static Capabilities RSC_FBO_ARB = new Capabilities("RSC_FBO_ARB", OgreJNI.RSC_FBO_ARB_get());
  public final static Capabilities RSC_FBO_ATI = new Capabilities("RSC_FBO_ATI", OgreJNI.RSC_FBO_ATI_get());
  public final static Capabilities RSC_PBUFFER = new Capabilities("RSC_PBUFFER", OgreJNI.RSC_PBUFFER_get());
  public final static Capabilities RSC_GL1_5_NOHWOCCLUSION = new Capabilities("RSC_GL1_5_NOHWOCCLUSION", OgreJNI.RSC_GL1_5_NOHWOCCLUSION_get());
  public final static Capabilities RSC_POINT_EXTENDED_PARAMETERS_ARB = new Capabilities("RSC_POINT_EXTENDED_PARAMETERS_ARB", OgreJNI.RSC_POINT_EXTENDED_PARAMETERS_ARB_get());
  public final static Capabilities RSC_POINT_EXTENDED_PARAMETERS_EXT = new Capabilities("RSC_POINT_EXTENDED_PARAMETERS_EXT", OgreJNI.RSC_POINT_EXTENDED_PARAMETERS_EXT_get());
  public final static Capabilities RSC_SEPARATE_SHADER_OBJECTS = new Capabilities("RSC_SEPARATE_SHADER_OBJECTS", OgreJNI.RSC_SEPARATE_SHADER_OBJECTS_get());
  public final static Capabilities RSC_VAO = new Capabilities("RSC_VAO", OgreJNI.RSC_VAO_get());
  public final static Capabilities RSC_GLSL_SSO_REDECLARE = new Capabilities("RSC_GLSL_SSO_REDECLARE", OgreJNI.RSC_GLSL_SSO_REDECLARE_get());
  public final static Capabilities RSC_DEBUG = new Capabilities("RSC_DEBUG", OgreJNI.RSC_DEBUG_get());
  public final static Capabilities RSC_MAPBUFFER = new Capabilities("RSC_MAPBUFFER", OgreJNI.RSC_MAPBUFFER_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static Capabilities swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + Capabilities.class + " with value " + swigValue);
  }

  private Capabilities(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private Capabilities(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private Capabilities(String swigName, Capabilities swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static Capabilities[] swigValues = { RSC_AUTOMIPMAP, RSC_BLENDING, RSC_ANISOTROPY, RSC_DOT3, RSC_CUBEMAPPING, RSC_HWSTENCIL, RSC_VBO, RSC_32BIT_INDEX, RSC_VERTEX_PROGRAM, RSC_FRAGMENT_PROGRAM, RSC_SCISSOR_TEST, RSC_TWO_SIDED_STENCIL, RSC_STENCIL_WRAP, RSC_HWOCCLUSION, RSC_USER_CLIP_PLANES, RSC_VERTEX_FORMAT_UBYTE4, RSC_INFINITE_FAR_PLANE, RSC_HWRENDER_TO_TEXTURE, RSC_TEXTURE_FLOAT, RSC_NON_POWER_OF_2_TEXTURES, RSC_TEXTURE_3D, RSC_POINT_SPRITES, RSC_POINT_EXTENDED_PARAMETERS, RSC_VERTEX_TEXTURE_FETCH, RSC_MIPMAP_LOD_BIAS, RSC_GEOMETRY_PROGRAM, RSC_HWRENDER_TO_VERTEX_BUFFER, RSC_TEXTURE_COMPRESSION, RSC_TEXTURE_COMPRESSION_DXT, RSC_TEXTURE_COMPRESSION_VTC, RSC_TEXTURE_COMPRESSION_PVRTC, RSC_TEXTURE_COMPRESSION_ATC, RSC_TEXTURE_COMPRESSION_ETC1, RSC_TEXTURE_COMPRESSION_ETC2, RSC_TEXTURE_COMPRESSION_BC4_BC5, RSC_TEXTURE_COMPRESSION_BC6H_BC7, RSC_FIXED_FUNCTION, RSC_MRT_DIFFERENT_BIT_DEPTHS, RSC_ALPHA_TO_COVERAGE, RSC_ADVANCED_BLEND_OPERATIONS, RSC_RTT_SEPARATE_DEPTHBUFFER, RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE, RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL, RSC_VERTEX_BUFFER_INSTANCE_DATA, RSC_CAN_GET_COMPILED_SHADER_BUFFER, RSC_SHADER_SUBROUTINE, RSC_HWRENDER_TO_TEXTURE_3D, RSC_TEXTURE_1D, RSC_TESSELLATION_HULL_PROGRAM, RSC_TESSELLATION_DOMAIN_PROGRAM, RSC_COMPUTE_PROGRAM, RSC_HWOCCLUSION_ASYNCHRONOUS, RSC_ATOMIC_COUNTERS, RSC_READ_BACK_AS_TEXTURE, RSC_HW_GAMMA, RSC_AUTOMIPMAP_COMPRESSED, RSC_COMPLETE_TEXTURE_BINDING, RSC_TEXTURE_COMPRESSION_ASTC, RSC_PERSTAGECONSTANT, RSC_GL1_5_NOVBO, RSC_FBO, RSC_FBO_ARB, RSC_FBO_ATI, RSC_PBUFFER, RSC_GL1_5_NOHWOCCLUSION, RSC_POINT_EXTENDED_PARAMETERS_ARB, RSC_POINT_EXTENDED_PARAMETERS_EXT, RSC_SEPARATE_SHADER_OBJECTS, RSC_VAO, RSC_GLSL_SSO_REDECLARE, RSC_DEBUG, RSC_MAPBUFFER };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

