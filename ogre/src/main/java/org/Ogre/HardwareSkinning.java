/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class HardwareSkinning extends SubRenderState {
  private transient long swigCPtr;

  protected HardwareSkinning(long cPtr, boolean cMemoryOwn) {
    super(OgreRTShaderJNI.HardwareSkinning_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HardwareSkinning obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreRTShaderJNI.delete_HardwareSkinning(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class SkinningData {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected SkinningData(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(SkinningData obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreRTShaderJNI.delete_HardwareSkinning_SkinningData(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public SkinningData() {
      this(OgreRTShaderJNI.new_HardwareSkinning_SkinningData(), true);
    }
  
    public void setIsValid(boolean value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_isValid_set(swigCPtr, this, value);
    }
  
    public boolean getIsValid() {
      return OgreRTShaderJNI.HardwareSkinning_SkinningData_isValid_get(swigCPtr, this);
    }
  
    public void setMaxBoneCount(int value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_maxBoneCount_set(swigCPtr, this, value);
    }
  
    public int getMaxBoneCount() {
      return OgreRTShaderJNI.HardwareSkinning_SkinningData_maxBoneCount_get(swigCPtr, this);
    }
  
    public void setMaxWeightCount(int value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_maxWeightCount_set(swigCPtr, this, value);
    }
  
    public int getMaxWeightCount() {
      return OgreRTShaderJNI.HardwareSkinning_SkinningData_maxWeightCount_get(swigCPtr, this);
    }
  
    public void setSkinningType(SkinningType value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_skinningType_set(swigCPtr, this, value.swigValue());
    }
  
    public SkinningType getSkinningType() {
      return SkinningType.swigToEnum(OgreRTShaderJNI.HardwareSkinning_SkinningData_skinningType_get(swigCPtr, this));
    }
  
    public void setCorrectAntipodalityHandling(boolean value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_correctAntipodalityHandling_set(swigCPtr, this, value);
    }
  
    public boolean getCorrectAntipodalityHandling() {
      return OgreRTShaderJNI.HardwareSkinning_SkinningData_correctAntipodalityHandling_get(swigCPtr, this);
    }
  
    public void setScalingShearingSupport(boolean value) {
      OgreRTShaderJNI.HardwareSkinning_SkinningData_scalingShearingSupport_set(swigCPtr, this, value);
    }
  
    public boolean getScalingShearingSupport() {
      return OgreRTShaderJNI.HardwareSkinning_SkinningData_scalingShearingSupport_get(swigCPtr, this);
    }
  
  }

  public HardwareSkinning() {
    this(OgreRTShaderJNI.new_HardwareSkinning(), true);
  }

  public int getExecutionOrder() {
    return OgreRTShaderJNI.HardwareSkinning_getExecutionOrder(swigCPtr, this);
  }

  public void copyFrom(SubRenderState rhs) {
    OgreRTShaderJNI.HardwareSkinning_copyFrom(swigCPtr, this, SubRenderState.getCPtr(rhs), rhs);
  }

  public void setHardwareSkinningParam(int boneCount, int weightCount, SkinningType skinningType, boolean correctAntipodalityHandling, boolean scalingShearingSupport) {
    OgreRTShaderJNI.HardwareSkinning_setHardwareSkinningParam__SWIG_0(swigCPtr, this, boneCount, weightCount, skinningType.swigValue(), correctAntipodalityHandling, scalingShearingSupport);
  }

  public void setHardwareSkinningParam(int boneCount, int weightCount, SkinningType skinningType, boolean correctAntipodalityHandling) {
    OgreRTShaderJNI.HardwareSkinning_setHardwareSkinningParam__SWIG_1(swigCPtr, this, boneCount, weightCount, skinningType.swigValue(), correctAntipodalityHandling);
  }

  public void setHardwareSkinningParam(int boneCount, int weightCount, SkinningType skinningType) {
    OgreRTShaderJNI.HardwareSkinning_setHardwareSkinningParam__SWIG_2(swigCPtr, this, boneCount, weightCount, skinningType.swigValue());
  }

  public void setHardwareSkinningParam(int boneCount, int weightCount) {
    OgreRTShaderJNI.HardwareSkinning_setHardwareSkinningParam__SWIG_3(swigCPtr, this, boneCount, weightCount);
  }

  public int getBoneCount() {
    return OgreRTShaderJNI.HardwareSkinning_getBoneCount(swigCPtr, this);
  }

  public int getWeightCount() {
    return OgreRTShaderJNI.HardwareSkinning_getWeightCount(swigCPtr, this);
  }

  public SkinningType getSkinningType() {
    return SkinningType.swigToEnum(OgreRTShaderJNI.HardwareSkinning_getSkinningType(swigCPtr, this));
  }

  public boolean hasCorrectAntipodalityHandling() {
    return OgreRTShaderJNI.HardwareSkinning_hasCorrectAntipodalityHandling(swigCPtr, this);
  }

  public boolean hasScalingShearingSupport() {
    return OgreRTShaderJNI.HardwareSkinning_hasScalingShearingSupport(swigCPtr, this);
  }

  public boolean preAddToRenderState(RenderState renderState, Pass srcPass, Pass dstPass) {
    return OgreRTShaderJNI.HardwareSkinning_preAddToRenderState(swigCPtr, this, RenderState.getCPtr(renderState), renderState, Pass.getCPtr(srcPass), srcPass, Pass.getCPtr(dstPass), dstPass);
  }

  public void _setCreator(HardwareSkinningFactory pCreator) {
    OgreRTShaderJNI.HardwareSkinning__setCreator(swigCPtr, this, HardwareSkinningFactory.getCPtr(pCreator), pCreator);
  }

  public static void setType(String value) {
    OgreRTShaderJNI.HardwareSkinning_Type_set(value);
  }

  public static String getType() {
    return OgreRTShaderJNI.HardwareSkinning_Type_get();
  }

}
