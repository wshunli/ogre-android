/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class CompositionTechnique {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CompositionTechnique(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CompositionTechnique obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_CompositionTechnique(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CompositionTechnique(Compositor parent) {
    this(OgreJNI.new_CompositionTechnique(Compositor.getCPtr(parent), parent), true);
  }

  static public class TextureDefinition {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected TextureDefinition(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(TextureDefinition obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgreJNI.delete_CompositionTechnique_TextureDefinition(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setName(String value) {
      OgreJNI.CompositionTechnique_TextureDefinition_name_set(swigCPtr, this, value);
    }
  
    public String getName() {
      return OgreJNI.CompositionTechnique_TextureDefinition_name_get(swigCPtr, this);
    }
  
    public void setRefCompName(String value) {
      OgreJNI.CompositionTechnique_TextureDefinition_refCompName_set(swigCPtr, this, value);
    }
  
    public String getRefCompName() {
      return OgreJNI.CompositionTechnique_TextureDefinition_refCompName_get(swigCPtr, this);
    }
  
    public void setRefTexName(String value) {
      OgreJNI.CompositionTechnique_TextureDefinition_refTexName_set(swigCPtr, this, value);
    }
  
    public String getRefTexName() {
      return OgreJNI.CompositionTechnique_TextureDefinition_refTexName_get(swigCPtr, this);
    }
  
    public void setWidth(long value) {
      OgreJNI.CompositionTechnique_TextureDefinition_width_set(swigCPtr, this, value);
    }
  
    public long getWidth() {
      return OgreJNI.CompositionTechnique_TextureDefinition_width_get(swigCPtr, this);
    }
  
    public void setHeight(long value) {
      OgreJNI.CompositionTechnique_TextureDefinition_height_set(swigCPtr, this, value);
    }
  
    public long getHeight() {
      return OgreJNI.CompositionTechnique_TextureDefinition_height_get(swigCPtr, this);
    }
  
    public void setWidthFactor(float value) {
      OgreJNI.CompositionTechnique_TextureDefinition_widthFactor_set(swigCPtr, this, value);
    }
  
    public float getWidthFactor() {
      return OgreJNI.CompositionTechnique_TextureDefinition_widthFactor_get(swigCPtr, this);
    }
  
    public void setHeightFactor(float value) {
      OgreJNI.CompositionTechnique_TextureDefinition_heightFactor_set(swigCPtr, this, value);
    }
  
    public float getHeightFactor() {
      return OgreJNI.CompositionTechnique_TextureDefinition_heightFactor_get(swigCPtr, this);
    }
  
    public void setFormatList(SWIGTYPE_p_Ogre__vectorT_Ogre__PixelFormat_t__type value) {
      OgreJNI.CompositionTechnique_TextureDefinition_formatList_set(swigCPtr, this, SWIGTYPE_p_Ogre__vectorT_Ogre__PixelFormat_t__type.getCPtr(value));
    }
  
    public SWIGTYPE_p_Ogre__vectorT_Ogre__PixelFormat_t__type getFormatList() {
      long cPtr = OgreJNI.CompositionTechnique_TextureDefinition_formatList_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__vectorT_Ogre__PixelFormat_t__type(cPtr, false);
    }
  
    public void setFsaa(boolean value) {
      OgreJNI.CompositionTechnique_TextureDefinition_fsaa_set(swigCPtr, this, value);
    }
  
    public boolean getFsaa() {
      return OgreJNI.CompositionTechnique_TextureDefinition_fsaa_get(swigCPtr, this);
    }
  
    public void setHwGammaWrite(boolean value) {
      OgreJNI.CompositionTechnique_TextureDefinition_hwGammaWrite_set(swigCPtr, this, value);
    }
  
    public boolean getHwGammaWrite() {
      return OgreJNI.CompositionTechnique_TextureDefinition_hwGammaWrite_get(swigCPtr, this);
    }
  
    public void setDepthBufferId(int value) {
      OgreJNI.CompositionTechnique_TextureDefinition_depthBufferId_set(swigCPtr, this, value);
    }
  
    public int getDepthBufferId() {
      return OgreJNI.CompositionTechnique_TextureDefinition_depthBufferId_get(swigCPtr, this);
    }
  
    public void setPooled(boolean value) {
      OgreJNI.CompositionTechnique_TextureDefinition_pooled_set(swigCPtr, this, value);
    }
  
    public boolean getPooled() {
      return OgreJNI.CompositionTechnique_TextureDefinition_pooled_get(swigCPtr, this);
    }
  
    public void setScope(CompositionTechnique.TextureScope value) {
      OgreJNI.CompositionTechnique_TextureDefinition_scope_set(swigCPtr, this, value.swigValue());
    }
  
    public CompositionTechnique.TextureScope getScope() {
      return CompositionTechnique.TextureScope.swigToEnum(OgreJNI.CompositionTechnique_TextureDefinition_scope_get(swigCPtr, this));
    }
  
    public TextureDefinition() {
      this(OgreJNI.new_CompositionTechnique_TextureDefinition(), true);
    }
  
  }

  public CompositionTechnique.TextureDefinition createTextureDefinition(String name) {
    long cPtr = OgreJNI.CompositionTechnique_createTextureDefinition(swigCPtr, this, name);
    return (cPtr == 0) ? null : new CompositionTechnique.TextureDefinition(cPtr, false);
  }

  public void removeTextureDefinition(long idx) {
    OgreJNI.CompositionTechnique_removeTextureDefinition(swigCPtr, this, idx);
  }

  public CompositionTechnique.TextureDefinition getTextureDefinition(long idx) {
    long cPtr = OgreJNI.CompositionTechnique_getTextureDefinition__SWIG_0(swigCPtr, this, idx);
    return (cPtr == 0) ? null : new CompositionTechnique.TextureDefinition(cPtr, false);
  }

  public CompositionTechnique.TextureDefinition getTextureDefinition(String name) {
    long cPtr = OgreJNI.CompositionTechnique_getTextureDefinition__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new CompositionTechnique.TextureDefinition(cPtr, false);
  }

  public void removeAllTextureDefinitions() {
    OgreJNI.CompositionTechnique_removeAllTextureDefinitions(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__vectorT_Ogre__CompositionTechnique__TextureDefinition_p_t__type getTextureDefinitions() {
    return new SWIGTYPE_p_Ogre__vectorT_Ogre__CompositionTechnique__TextureDefinition_p_t__type(OgreJNI.CompositionTechnique_getTextureDefinitions(swigCPtr, this), false);
  }

  public CompositionTargetPass createTargetPass() {
    long cPtr = OgreJNI.CompositionTechnique_createTargetPass(swigCPtr, this);
    return (cPtr == 0) ? null : new CompositionTargetPass(cPtr, false);
  }

  public void removeTargetPass(long idx) {
    OgreJNI.CompositionTechnique_removeTargetPass(swigCPtr, this, idx);
  }

  public void removeAllTargetPasses() {
    OgreJNI.CompositionTechnique_removeAllTargetPasses(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__vectorT_Ogre__CompositionTargetPass_p_t__type getTargetPasses() {
    return new SWIGTYPE_p_Ogre__vectorT_Ogre__CompositionTargetPass_p_t__type(OgreJNI.CompositionTechnique_getTargetPasses(swigCPtr, this), false);
  }

  public CompositionTargetPass getOutputTargetPass() {
    long cPtr = OgreJNI.CompositionTechnique_getOutputTargetPass(swigCPtr, this);
    return (cPtr == 0) ? null : new CompositionTargetPass(cPtr, false);
  }

  public boolean isSupported(boolean allowTextureDegradation) {
    return OgreJNI.CompositionTechnique_isSupported(swigCPtr, this, allowTextureDegradation);
  }

  public void setSchemeName(String schemeName) {
    OgreJNI.CompositionTechnique_setSchemeName(swigCPtr, this, schemeName);
  }

  public String getSchemeName() {
    return OgreJNI.CompositionTechnique_getSchemeName(swigCPtr, this);
  }

  public void setCompositorLogicName(String compositorLogicName) {
    OgreJNI.CompositionTechnique_setCompositorLogicName(swigCPtr, this, compositorLogicName);
  }

  public String getCompositorLogicName() {
    return OgreJNI.CompositionTechnique_getCompositorLogicName(swigCPtr, this);
  }

  public Compositor getParent() {
    long cPtr = OgreJNI.CompositionTechnique_getParent(swigCPtr, this);
    return (cPtr == 0) ? null : new Compositor(cPtr, false);
  }

  public final static class TextureScope {
    public final static CompositionTechnique.TextureScope TS_LOCAL = new CompositionTechnique.TextureScope("TS_LOCAL");
    public final static CompositionTechnique.TextureScope TS_CHAIN = new CompositionTechnique.TextureScope("TS_CHAIN");
    public final static CompositionTechnique.TextureScope TS_GLOBAL = new CompositionTechnique.TextureScope("TS_GLOBAL");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static TextureScope swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + TextureScope.class + " with value " + swigValue);
    }

    private TextureScope(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private TextureScope(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private TextureScope(String swigName, TextureScope swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static TextureScope[] swigValues = { TS_LOCAL, TS_CHAIN, TS_GLOBAL };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
