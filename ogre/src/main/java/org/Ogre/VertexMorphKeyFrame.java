/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class VertexMorphKeyFrame extends KeyFrame {
  private transient long swigCPtr;

  protected VertexMorphKeyFrame(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.VertexMorphKeyFrame_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VertexMorphKeyFrame obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_VertexMorphKeyFrame(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public VertexMorphKeyFrame(AnimationTrack parent, float time) {
    this(OgreJNI.new_VertexMorphKeyFrame(AnimationTrack.getCPtr(parent), parent, time), true);
  }

  public void setVertexBuffer(HardwareVertexBufferPtr buf) {
    OgreJNI.VertexMorphKeyFrame_setVertexBuffer(swigCPtr, this, HardwareVertexBufferPtr.getCPtr(buf), buf);
  }

  public HardwareVertexBufferPtr getVertexBuffer() {
    return new HardwareVertexBufferPtr(OgreJNI.VertexMorphKeyFrame_getVertexBuffer(swigCPtr, this), false);
  }

  public KeyFrame _clone(AnimationTrack newParent) {
    long cPtr = OgreJNI.VertexMorphKeyFrame__clone(swigCPtr, this, AnimationTrack.getCPtr(newParent), newParent);
    return (cPtr == 0) ? null : new KeyFrame(cPtr, false);
  }

}
