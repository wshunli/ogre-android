/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class RenderWindow extends RenderTarget {
  private transient long swigCPtr;

  protected RenderWindow(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.RenderWindow_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RenderWindow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_RenderWindow(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public float getViewPointToPixelScale() {
    return OgreJNI.RenderWindow_getViewPointToPixelScale(swigCPtr, this);
  }

  public void create(String name, long widthPt, long heightPt, boolean fullScreen, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t miscParams) {
    OgreJNI.RenderWindow_create(swigCPtr, this, name, widthPt, heightPt, fullScreen, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(miscParams));
  }

  public void setFullscreen(boolean fullScreen, long widthPt, long heightPt) {
    OgreJNI.RenderWindow_setFullscreen(swigCPtr, this, fullScreen, widthPt, heightPt);
  }

  public void destroy() {
    OgreJNI.RenderWindow_destroy(swigCPtr, this);
  }

  public void resize(long widthPt, long heightPt) {
    OgreJNI.RenderWindow_resize(swigCPtr, this, widthPt, heightPt);
  }

  public void windowMovedOrResized() {
    OgreJNI.RenderWindow_windowMovedOrResized(swigCPtr, this);
  }

  public void reposition(int leftPt, int topPt) {
    OgreJNI.RenderWindow_reposition(swigCPtr, this, leftPt, topPt);
  }

  public boolean isVisible() {
    return OgreJNI.RenderWindow_isVisible(swigCPtr, this);
  }

  public void setVisible(boolean visible) {
    OgreJNI.RenderWindow_setVisible(swigCPtr, this, visible);
  }

  public boolean isHidden() {
    return OgreJNI.RenderWindow_isHidden(swigCPtr, this);
  }

  public void setHidden(boolean hidden) {
    OgreJNI.RenderWindow_setHidden(swigCPtr, this, hidden);
  }

  public void setVSyncEnabled(boolean vsync) {
    OgreJNI.RenderWindow_setVSyncEnabled(swigCPtr, this, vsync);
  }

  public boolean isVSyncEnabled() {
    return OgreJNI.RenderWindow_isVSyncEnabled(swigCPtr, this);
  }

  public void setVSyncInterval(long interval) {
    OgreJNI.RenderWindow_setVSyncInterval(swigCPtr, this, interval);
  }

  public long getVSyncInterval() {
    return OgreJNI.RenderWindow_getVSyncInterval(swigCPtr, this);
  }

  public boolean isActive() {
    return OgreJNI.RenderWindow_isActive(swigCPtr, this);
  }

  public boolean isClosed() {
    return OgreJNI.RenderWindow_isClosed(swigCPtr, this);
  }

  public boolean isPrimary() {
    return OgreJNI.RenderWindow_isPrimary(swigCPtr, this);
  }

  public boolean isFullScreen() {
    return OgreJNI.RenderWindow_isFullScreen(swigCPtr, this);
  }

  public void getMetrics(SWIGTYPE_p_unsigned_int width, SWIGTYPE_p_unsigned_int height, SWIGTYPE_p_unsigned_int colourDepth, SWIGTYPE_p_int left, SWIGTYPE_p_int top) {
    OgreJNI.RenderWindow_getMetrics__SWIG_0(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(width), SWIGTYPE_p_unsigned_int.getCPtr(height), SWIGTYPE_p_unsigned_int.getCPtr(colourDepth), SWIGTYPE_p_int.getCPtr(left), SWIGTYPE_p_int.getCPtr(top));
  }

  public void getMetrics(SWIGTYPE_p_unsigned_int width, SWIGTYPE_p_unsigned_int height, SWIGTYPE_p_unsigned_int colourDepth) {
    OgreJNI.RenderWindow_getMetrics__SWIG_1_0(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(width), SWIGTYPE_p_unsigned_int.getCPtr(height), SWIGTYPE_p_unsigned_int.getCPtr(colourDepth));
  }

  public PixelFormat suggestPixelFormat() {
    return PixelFormat.swigToEnum(OgreJNI.RenderWindow_suggestPixelFormat(swigCPtr, this));
  }

  public boolean isDeactivatedOnFocusChange() {
    return OgreJNI.RenderWindow_isDeactivatedOnFocusChange(swigCPtr, this);
  }

  public void setDeactivateOnFocusChange(boolean deactivate) {
    OgreJNI.RenderWindow_setDeactivateOnFocusChange(swigCPtr, this, deactivate);
  }

  public void _notifySurfaceDestroyed() {
    OgreJNI.RenderWindow__notifySurfaceDestroyed(swigCPtr, this);
  }

  public void _notifySurfaceCreated(Object surface) {
    OgreJNI.RenderWindow__notifySurfaceCreated(swigCPtr, this, surface);
  }

}
