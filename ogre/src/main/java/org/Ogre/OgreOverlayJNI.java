/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class OgreOverlayJNI {
  public final static native int DEFINE_NO_DEPRECATED_get();
  public final static native int FT_TRUETYPE_get();
  public final static native int FT_IMAGE_get();
  public final static native void Font_GlyphInfo_codePoint_set(long jarg1, Font.GlyphInfo jarg1_, long jarg2);
  public final static native long Font_GlyphInfo_codePoint_get(long jarg1, Font.GlyphInfo jarg1_);
  public final static native void Font_GlyphInfo_uvRect_set(long jarg1, Font.GlyphInfo jarg1_, long jarg2);
  public final static native long Font_GlyphInfo_uvRect_get(long jarg1, Font.GlyphInfo jarg1_);
  public final static native void Font_GlyphInfo_aspectRatio_set(long jarg1, Font.GlyphInfo jarg1_, float jarg2);
  public final static native float Font_GlyphInfo_aspectRatio_get(long jarg1, Font.GlyphInfo jarg1_);
  public final static native long new_Font_GlyphInfo(long jarg1, long jarg2, float jarg3);
  public final static native void delete_Font_GlyphInfo(long jarg1);
  public final static native long new_Font__SWIG_0(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5, long jarg6, ManualResourceLoader jarg6_);
  public final static native long new_Font__SWIG_1(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4, boolean jarg5);
  public final static native long new_Font__SWIG_2(long jarg1, ResourceManager jarg1_, String jarg2, java.math.BigInteger jarg3, String jarg4);
  public final static native void delete_Font(long jarg1);
  public final static native void Font_setType(long jarg1, Font jarg1_, int jarg2);
  public final static native void Font_setSource(long jarg1, Font jarg1_, String jarg2);
  public final static native String Font_getSource(long jarg1, Font jarg1_);
  public final static native void Font_setCharacterSpacer(long jarg1, Font jarg1_, long jarg2);
  public final static native long Font_getCharacterSpacer(long jarg1, Font jarg1_);
  public final static native void Font_setTrueTypeSize(long jarg1, Font jarg1_, float jarg2);
  public final static native void Font_setTrueTypeResolution(long jarg1, Font jarg1_, long jarg2);
  public final static native float Font_getTrueTypeSize(long jarg1, Font jarg1_);
  public final static native long Font_getTrueTypeResolution(long jarg1, Font jarg1_);
  public final static native int Font_getTrueTypeMaxBearingY(long jarg1, Font jarg1_);
  public final static native long Font_getGlyphTexCoords(long jarg1, Font jarg1_, long jarg2);
  public final static native void Font_setGlyphTexCoords(long jarg1, Font jarg1_, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native float Font_getGlyphAspectRatio(long jarg1, Font jarg1_, long jarg2);
  public final static native void Font_setGlyphAspectRatio(long jarg1, Font jarg1_, long jarg2, float jarg3);
  public final static native long Font_getGlyphInfo(long jarg1, Font jarg1_, long jarg2);
  public final static native void Font_addCodePointRange(long jarg1, Font jarg1_, long jarg2);
  public final static native void Font_clearCodePointRanges(long jarg1, Font jarg1_);
  public final static native long Font_getCodePointRangeList(long jarg1, Font jarg1_);
  public final static native long Font_getMaterial__SWIG_0(long jarg1, Font jarg1_);
  public final static native void Font_setAntialiasColour(long jarg1, Font jarg1_, boolean jarg2);
  public final static native boolean Font_getAntialiasColour(long jarg1, Font jarg1_);
  public final static native void Font_loadResource(long jarg1, Font jarg1_, long jarg2, Resource jarg2_);
  public final static native long new_FontManager();
  public final static native void delete_FontManager(long jarg1);
  public final static native long FontManager_create__SWIG_0(long jarg1, FontManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_, long jarg6);
  public final static native long FontManager_create__SWIG_1(long jarg1, FontManager jarg1_, String jarg2, String jarg3, boolean jarg4, long jarg5, ManualResourceLoader jarg5_);
  public final static native long FontManager_create__SWIG_2(long jarg1, FontManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long FontManager_create__SWIG_3(long jarg1, FontManager jarg1_, String jarg2, String jarg3);
  public final static native long FontManager_getByName(long jarg1, FontManager jarg1_, String jarg2, String jarg3);
  public final static native void FontManager_parseScript(long jarg1, FontManager jarg1_, long jarg2, String jarg3);
  public final static native long FontManager_getSingleton();
  public final static native long new_Overlay(String jarg1);
  public final static native void delete_Overlay(long jarg1);
  public final static native long Overlay_getChild(long jarg1, Overlay jarg1_, String jarg2);
  public final static native String Overlay_getName(long jarg1, Overlay jarg1_);
  public final static native void Overlay_setZOrder(long jarg1, Overlay jarg1_, int jarg2);
  public final static native int Overlay_getZOrder(long jarg1, Overlay jarg1_);
  public final static native boolean Overlay_isVisible(long jarg1, Overlay jarg1_);
  public final static native boolean Overlay_isInitialised(long jarg1, Overlay jarg1_);
  public final static native void Overlay_show(long jarg1, Overlay jarg1_);
  public final static native void Overlay_hide(long jarg1, Overlay jarg1_);
  public final static native void Overlay_add2D(long jarg1, Overlay jarg1_, long jarg2, OverlayContainer jarg2_);
  public final static native void Overlay_remove2D(long jarg1, Overlay jarg1_, long jarg2, OverlayContainer jarg2_);
  public final static native void Overlay_add3D(long jarg1, Overlay jarg1_, long jarg2, SceneNode jarg2_);
  public final static native void Overlay_remove3D(long jarg1, Overlay jarg1_, long jarg2, SceneNode jarg2_);
  public final static native void Overlay_clear(long jarg1, Overlay jarg1_);
  public final static native void Overlay_setScroll(long jarg1, Overlay jarg1_, float jarg2, float jarg3);
  public final static native float Overlay_getScrollX(long jarg1, Overlay jarg1_);
  public final static native float Overlay_getScrollY(long jarg1, Overlay jarg1_);
  public final static native void Overlay_scroll(long jarg1, Overlay jarg1_, float jarg2, float jarg3);
  public final static native void Overlay_setRotate(long jarg1, Overlay jarg1_, long jarg2, Radian jarg2_);
  public final static native long Overlay_getRotate(long jarg1, Overlay jarg1_);
  public final static native void Overlay_rotate(long jarg1, Overlay jarg1_, long jarg2, Radian jarg2_);
  public final static native void Overlay_setScale(long jarg1, Overlay jarg1_, float jarg2, float jarg3);
  public final static native float Overlay_getScaleX(long jarg1, Overlay jarg1_);
  public final static native float Overlay_getScaleY(long jarg1, Overlay jarg1_);
  public final static native void Overlay__getWorldTransforms(long jarg1, Overlay jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void Overlay__findVisibleObjects(long jarg1, Overlay jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, Viewport jarg4_);
  public final static native long Overlay_findElementAt(long jarg1, Overlay jarg1_, float jarg2, float jarg3);
  public final static native long Overlay_get2DElements(long jarg1, Overlay jarg1_);
  public final static native String Overlay_getOrigin(long jarg1, Overlay jarg1_);
  public final static native void Overlay__notifyOrigin(long jarg1, Overlay jarg1_, String jarg2);
  public final static native void delete_OverlayElement(long jarg1);
  public final static native void OverlayElement_initialise(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__releaseManualHardwareResources(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__restoreManualHardwareResources(long jarg1, OverlayElement jarg1_);
  public final static native String OverlayElement_getName(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_show(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_hide(long jarg1, OverlayElement jarg1_);
  public final static native boolean OverlayElement_isVisible(long jarg1, OverlayElement jarg1_);
  public final static native boolean OverlayElement_isEnabled(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setEnabled(long jarg1, OverlayElement jarg1_, boolean jarg2);
  public final static native void OverlayElement_setDimensions(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native void OverlayElement_setPosition(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native void OverlayElement_setWidth(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native float OverlayElement_getWidth(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setHeight(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native float OverlayElement_getHeight(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setLeft(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native float OverlayElement_getLeft(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setTop(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native float OverlayElement_getTop(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getLeft(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getTop(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getWidth(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getHeight(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__setLeft(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native void OverlayElement__setTop(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native void OverlayElement__setWidth(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native void OverlayElement__setHeight(long jarg1, OverlayElement jarg1_, float jarg2);
  public final static native void OverlayElement__setPosition(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native void OverlayElement__setDimensions(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native String OverlayElement_getMaterialName(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setMaterial(long jarg1, OverlayElement jarg1_, long jarg2, MaterialPtr jarg2_);
  public final static native void OverlayElement_setMaterialName(long jarg1, OverlayElement jarg1_, String jarg2);
  public final static native long OverlayElement_getMaterial(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_getWorldTransforms(long jarg1, OverlayElement jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void OverlayElement__positionsOutOfDate(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__update(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__updateFromParent(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__notifyParent(long jarg1, OverlayElement jarg1_, long jarg2, OverlayContainer jarg2_, long jarg3, Overlay jarg3_);
  public final static native float OverlayElement__getDerivedLeft(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getDerivedTop(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getRelativeWidth(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement__getRelativeHeight(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__getClippingRegion(long jarg1, OverlayElement jarg1_, long jarg2);
  public final static native int OverlayElement__notifyZOrder(long jarg1, OverlayElement jarg1_, int jarg2);
  public final static native void OverlayElement__notifyWorldTransforms(long jarg1, OverlayElement jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void OverlayElement__notifyViewport(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__updateRenderQueue(long jarg1, OverlayElement jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native void OverlayElement_visitRenderables__SWIG_0(long jarg1, OverlayElement jarg1_, long jarg2, Renderable.Visitor jarg2_, boolean jarg3);
  public final static native void OverlayElement_visitRenderables__SWIG_1(long jarg1, OverlayElement jarg1_, long jarg2, Renderable.Visitor jarg2_);
  public final static native String OverlayElement_getTypeName(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setCaption(long jarg1, OverlayElement jarg1_, long jarg2);
  public final static native long OverlayElement_getCaption(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setColour(long jarg1, OverlayElement jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long OverlayElement_getColour(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setMetricsMode(long jarg1, OverlayElement jarg1_, int jarg2);
  public final static native int OverlayElement_getMetricsMode(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setHorizontalAlignment(long jarg1, OverlayElement jarg1_, int jarg2);
  public final static native int OverlayElement_getHorizontalAlignment(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setVerticalAlignment(long jarg1, OverlayElement jarg1_, int jarg2);
  public final static native int OverlayElement_getVerticalAlignment(long jarg1, OverlayElement jarg1_);
  public final static native boolean OverlayElement_contains(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native long OverlayElement_findElementAt(long jarg1, OverlayElement jarg1_, float jarg2, float jarg3);
  public final static native boolean OverlayElement_isContainer(long jarg1, OverlayElement jarg1_);
  public final static native boolean OverlayElement_isKeyEnabled(long jarg1, OverlayElement jarg1_);
  public final static native boolean OverlayElement_isCloneable(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_setCloneable(long jarg1, OverlayElement jarg1_, boolean jarg2);
  public final static native long OverlayElement_getParent(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement__setParent(long jarg1, OverlayElement jarg1_, long jarg2, OverlayContainer jarg2_);
  public final static native int OverlayElement_getZOrder(long jarg1, OverlayElement jarg1_);
  public final static native float OverlayElement_getSquaredViewDepth(long jarg1, OverlayElement jarg1_, long jarg2, Camera jarg2_);
  public final static native long OverlayElement_getLights(long jarg1, OverlayElement jarg1_);
  public final static native void OverlayElement_copyFromTemplate(long jarg1, OverlayElement jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native long OverlayElement_clone(long jarg1, OverlayElement jarg1_, String jarg2);
  public final static native long OverlayElement_getSourceTemplate(long jarg1, OverlayElement jarg1_);
  public final static native void delete_OverlayElementFactory(long jarg1);
  public final static native long OverlayElementFactory_createOverlayElement(long jarg1, OverlayElementFactory jarg1_, String jarg2);
  public final static native void OverlayElementFactory_destroyOverlayElement(long jarg1, OverlayElementFactory jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native String OverlayElementFactory_getTypeName(long jarg1, OverlayElementFactory jarg1_);
  public final static native long PanelOverlayElementFactory_createOverlayElement(long jarg1, PanelOverlayElementFactory jarg1_, String jarg2);
  public final static native String PanelOverlayElementFactory_getTypeName(long jarg1, PanelOverlayElementFactory jarg1_);
  public final static native long new_PanelOverlayElementFactory();
  public final static native void delete_PanelOverlayElementFactory(long jarg1);
  public final static native long BorderPanelOverlayElementFactory_createOverlayElement(long jarg1, BorderPanelOverlayElementFactory jarg1_, String jarg2);
  public final static native String BorderPanelOverlayElementFactory_getTypeName(long jarg1, BorderPanelOverlayElementFactory jarg1_);
  public final static native long new_BorderPanelOverlayElementFactory();
  public final static native void delete_BorderPanelOverlayElementFactory(long jarg1);
  public final static native long TextAreaOverlayElementFactory_createOverlayElement(long jarg1, TextAreaOverlayElementFactory jarg1_, String jarg2);
  public final static native String TextAreaOverlayElementFactory_getTypeName(long jarg1, TextAreaOverlayElementFactory jarg1_);
  public final static native long new_TextAreaOverlayElementFactory();
  public final static native void delete_TextAreaOverlayElementFactory(long jarg1);
  public final static native void delete_OverlayContainer(long jarg1);
  public final static native void OverlayContainer_addChild(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native void OverlayContainer_addChildImpl__SWIG_0(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native void OverlayContainer_addChildImpl__SWIG_1(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayContainer jarg2_);
  public final static native void OverlayContainer_removeChild(long jarg1, OverlayContainer jarg1_, String jarg2);
  public final static native long OverlayContainer_getChild(long jarg1, OverlayContainer jarg1_, String jarg2);
  public final static native void OverlayContainer_initialise(long jarg1, OverlayContainer jarg1_);
  public final static native void OverlayContainer__addChild(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native void OverlayContainer__removeChild__SWIG_0(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native void OverlayContainer__removeChild__SWIG_1(long jarg1, OverlayContainer jarg1_, String jarg2);
  public final static native long OverlayContainer_getChildIterator(long jarg1, OverlayContainer jarg1_);
  public final static native long OverlayContainer_getChildContainerIterator(long jarg1, OverlayContainer jarg1_);
  public final static native void OverlayContainer__positionsOutOfDate(long jarg1, OverlayContainer jarg1_);
  public final static native void OverlayContainer__update(long jarg1, OverlayContainer jarg1_);
  public final static native int OverlayContainer__notifyZOrder(long jarg1, OverlayContainer jarg1_, int jarg2);
  public final static native void OverlayContainer__notifyViewport(long jarg1, OverlayContainer jarg1_);
  public final static native void OverlayContainer__notifyWorldTransforms(long jarg1, OverlayContainer jarg1_, long jarg2, Matrix4 jarg2_);
  public final static native void OverlayContainer__notifyParent(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayContainer jarg2_, long jarg3, Overlay jarg3_);
  public final static native void OverlayContainer__updateRenderQueue(long jarg1, OverlayContainer jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native boolean OverlayContainer_isContainer(long jarg1, OverlayContainer jarg1_);
  public final static native boolean OverlayContainer_isChildrenProcessEvents(long jarg1, OverlayContainer jarg1_);
  public final static native void OverlayContainer_setChildrenProcessEvents(long jarg1, OverlayContainer jarg1_, boolean jarg2);
  public final static native long OverlayContainer_findElementAt(long jarg1, OverlayContainer jarg1_, float jarg2, float jarg3);
  public final static native void OverlayContainer_copyFromTemplate(long jarg1, OverlayContainer jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native long OverlayContainer_clone(long jarg1, OverlayContainer jarg1_, String jarg2);
  public final static native long new_OverlayManager();
  public final static native void delete_OverlayManager(long jarg1);
  public final static native void OverlayManager__releaseManualHardwareResources(long jarg1, OverlayManager jarg1_);
  public final static native void OverlayManager__restoreManualHardwareResources(long jarg1, OverlayManager jarg1_);
  public final static native long OverlayManager_getScriptPatterns(long jarg1, OverlayManager jarg1_);
  public final static native void OverlayManager_parseScript(long jarg1, OverlayManager jarg1_, long jarg2, String jarg3);
  public final static native float OverlayManager_getLoadingOrder(long jarg1, OverlayManager jarg1_);
  public final static native long OverlayManager_create(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native long OverlayManager_getByName(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native void OverlayManager_destroy__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native void OverlayManager_destroy__SWIG_1(long jarg1, OverlayManager jarg1_, long jarg2, Overlay jarg2_);
  public final static native void OverlayManager_destroyAll(long jarg1, OverlayManager jarg1_);
  public final static native long OverlayManager_getOverlayIterator(long jarg1, OverlayManager jarg1_);
  public final static native void OverlayManager__queueOverlaysForRendering(long jarg1, OverlayManager jarg1_, long jarg2, Camera jarg2_, long jarg3, RenderQueue jarg3_, long jarg4, Viewport jarg4_);
  public final static native int OverlayManager_getViewportHeight(long jarg1, OverlayManager jarg1_);
  public final static native int OverlayManager_getViewportWidth(long jarg1, OverlayManager jarg1_);
  public final static native float OverlayManager_getViewportAspectRatio(long jarg1, OverlayManager jarg1_);
  public final static native int OverlayManager_getViewportOrientationMode(long jarg1, OverlayManager jarg1_);
  public final static native long OverlayManager_createOverlayElement__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long OverlayManager_createOverlayElement__SWIG_1(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3);
  public final static native long OverlayManager_getOverlayElement__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2, boolean jarg3);
  public final static native long OverlayManager_getOverlayElement__SWIG_1(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native boolean OverlayManager_hasOverlayElement__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2, boolean jarg3);
  public final static native boolean OverlayManager_hasOverlayElement__SWIG_1(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native void OverlayManager_destroyOverlayElement__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2, boolean jarg3);
  public final static native void OverlayManager_destroyOverlayElement__SWIG_1(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native void OverlayManager_destroyOverlayElement__SWIG_2(long jarg1, OverlayManager jarg1_, long jarg2, OverlayElement jarg2_, boolean jarg3);
  public final static native void OverlayManager_destroyOverlayElement__SWIG_3(long jarg1, OverlayManager jarg1_, long jarg2, OverlayElement jarg2_);
  public final static native void OverlayManager_destroyAllOverlayElements__SWIG_0(long jarg1, OverlayManager jarg1_, boolean jarg2);
  public final static native void OverlayManager_destroyAllOverlayElements__SWIG_1(long jarg1, OverlayManager jarg1_);
  public final static native void OverlayManager_addOverlayElementFactory(long jarg1, OverlayManager jarg1_, long jarg2, OverlayElementFactory jarg2_);
  public final static native long OverlayManager_getOverlayElementFactoryMap(long jarg1, OverlayManager jarg1_);
  public final static native long OverlayManager_createOverlayElementFromTemplate__SWIG_0(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native long OverlayManager_createOverlayElementFromTemplate__SWIG_1(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long OverlayManager_cloneOverlayElementFromTemplate(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3);
  public final static native long OverlayManager_createOverlayElementFromFactory(long jarg1, OverlayManager jarg1_, String jarg2, String jarg3);
  public final static native long OverlayManager_getTemplateIterator(long jarg1, OverlayManager jarg1_);
  public final static native boolean OverlayManager_isTemplate(long jarg1, OverlayManager jarg1_, String jarg2);
  public final static native long OverlayManager_getSingleton();
  public final static native void delete_OverlaySystem(long jarg1);
  public final static native void OverlaySystem_renderQueueStarted(long jarg1, OverlaySystem jarg1_, short jarg2, String jarg3, long jarg4);
  public final static native void OverlaySystem_eventOccurred(long jarg1, OverlaySystem jarg1_, String jarg2, long jarg3);
  public final static native long new_PanelOverlayElement(String jarg1);
  public final static native void delete_PanelOverlayElement(long jarg1);
  public final static native void PanelOverlayElement_initialise(long jarg1, PanelOverlayElement jarg1_);
  public final static native void PanelOverlayElement__releaseManualHardwareResources(long jarg1, PanelOverlayElement jarg1_);
  public final static native void PanelOverlayElement__restoreManualHardwareResources(long jarg1, PanelOverlayElement jarg1_);
  public final static native void PanelOverlayElement_setTiling__SWIG_0(long jarg1, PanelOverlayElement jarg1_, float jarg2, float jarg3, int jarg4);
  public final static native void PanelOverlayElement_setTiling__SWIG_1(long jarg1, PanelOverlayElement jarg1_, float jarg2, float jarg3);
  public final static native float PanelOverlayElement_getTileX__SWIG_0(long jarg1, PanelOverlayElement jarg1_, int jarg2);
  public final static native float PanelOverlayElement_getTileX__SWIG_1(long jarg1, PanelOverlayElement jarg1_);
  public final static native float PanelOverlayElement_getTileY__SWIG_0(long jarg1, PanelOverlayElement jarg1_, int jarg2);
  public final static native float PanelOverlayElement_getTileY__SWIG_1(long jarg1, PanelOverlayElement jarg1_);
  public final static native void PanelOverlayElement_setUV(long jarg1, PanelOverlayElement jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void PanelOverlayElement_getUV(long jarg1, PanelOverlayElement jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void PanelOverlayElement_setTransparent(long jarg1, PanelOverlayElement jarg1_, boolean jarg2);
  public final static native boolean PanelOverlayElement_isTransparent(long jarg1, PanelOverlayElement jarg1_);
  public final static native String PanelOverlayElement_getTypeName(long jarg1, PanelOverlayElement jarg1_);
  public final static native void PanelOverlayElement_getRenderOperation(long jarg1, PanelOverlayElement jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void PanelOverlayElement__updateRenderQueue(long jarg1, PanelOverlayElement jarg1_, long jarg2, RenderQueue jarg2_);
  public final static native long new_TextAreaOverlayElement(String jarg1);
  public final static native void delete_TextAreaOverlayElement(long jarg1);
  public final static native void TextAreaOverlayElement_initialise(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement__releaseManualHardwareResources(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement__restoreManualHardwareResources(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setCaption(long jarg1, TextAreaOverlayElement jarg1_, long jarg2);
  public final static native void TextAreaOverlayElement_setCharHeight(long jarg1, TextAreaOverlayElement jarg1_, float jarg2);
  public final static native float TextAreaOverlayElement_getCharHeight(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setSpaceWidth(long jarg1, TextAreaOverlayElement jarg1_, float jarg2);
  public final static native float TextAreaOverlayElement_getSpaceWidth(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setFontName(long jarg1, TextAreaOverlayElement jarg1_, String jarg2);
  public final static native long TextAreaOverlayElement_getFont(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native String TextAreaOverlayElement_getTypeName(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native long TextAreaOverlayElement_getMaterial(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_getRenderOperation(long jarg1, TextAreaOverlayElement jarg1_, long jarg2, RenderOperation jarg2_);
  public final static native void TextAreaOverlayElement_setColour(long jarg1, TextAreaOverlayElement jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long TextAreaOverlayElement_getColour(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setColourBottom(long jarg1, TextAreaOverlayElement jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long TextAreaOverlayElement_getColourBottom(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setColourTop(long jarg1, TextAreaOverlayElement jarg1_, long jarg2, ColourValue jarg2_);
  public final static native long TextAreaOverlayElement_getColourTop(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setAlignment(long jarg1, TextAreaOverlayElement jarg1_, int jarg2);
  public final static native int TextAreaOverlayElement_getAlignment(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native void TextAreaOverlayElement_setMetricsMode(long jarg1, TextAreaOverlayElement jarg1_, int jarg2);
  public final static native void TextAreaOverlayElement__update(long jarg1, TextAreaOverlayElement jarg1_);
  public final static native long Font_SWIGUpcast(long jarg1);
  public final static native long FontManager_SWIGUpcast(long jarg1);
  public final static native long OverlayElement_SWIGUpcast(long jarg1);
  public final static native long PanelOverlayElementFactory_SWIGUpcast(long jarg1);
  public final static native long BorderPanelOverlayElementFactory_SWIGUpcast(long jarg1);
  public final static native long TextAreaOverlayElementFactory_SWIGUpcast(long jarg1);
  public final static native long OverlayContainer_SWIGUpcast(long jarg1);
  public final static native long OverlayManager_SWIGUpcast(long jarg1);
  public final static native long OverlaySystem_SWIGUpcast(long jarg1);
  public final static native long PanelOverlayElement_SWIGUpcast(long jarg1);
  public final static native long TextAreaOverlayElement_SWIGUpcast(long jarg1);
}
