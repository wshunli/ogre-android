/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public class Texture extends Resource {
  private transient long swigCPtr;

  protected Texture(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.Texture_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Texture obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_Texture(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setTextureType(TextureType ttype) {
    OgreJNI.Texture_setTextureType(swigCPtr, this, ttype.swigValue());
  }

  public TextureType getTextureType() {
    return TextureType.swigToEnum(OgreJNI.Texture_getTextureType(swigCPtr, this));
  }

  public long getNumMipmaps() {
    return OgreJNI.Texture_getNumMipmaps(swigCPtr, this);
  }

  public void setNumMipmaps(long num) {
    OgreJNI.Texture_setNumMipmaps(swigCPtr, this, num);
  }

  public boolean getMipmapsHardwareGenerated() {
    return OgreJNI.Texture_getMipmapsHardwareGenerated(swigCPtr, this);
  }

  public float getGamma() {
    return OgreJNI.Texture_getGamma(swigCPtr, this);
  }

  public void setGamma(float g) {
    OgreJNI.Texture_setGamma(swigCPtr, this, g);
  }

  public void setHardwareGammaEnabled(boolean enabled) {
    OgreJNI.Texture_setHardwareGammaEnabled(swigCPtr, this, enabled);
  }

  public boolean isHardwareGammaEnabled() {
    return OgreJNI.Texture_isHardwareGammaEnabled(swigCPtr, this);
  }

  public void setFSAA(long fsaa, String fsaaHint) {
    OgreJNI.Texture_setFSAA(swigCPtr, this, fsaa, fsaaHint);
  }

  public long getFSAA() {
    return OgreJNI.Texture_getFSAA(swigCPtr, this);
  }

  public String getFSAAHint() {
    return OgreJNI.Texture_getFSAAHint(swigCPtr, this);
  }

  public long getHeight() {
    return OgreJNI.Texture_getHeight(swigCPtr, this);
  }

  public long getWidth() {
    return OgreJNI.Texture_getWidth(swigCPtr, this);
  }

  public long getDepth() {
    return OgreJNI.Texture_getDepth(swigCPtr, this);
  }

  public long getSrcHeight() {
    return OgreJNI.Texture_getSrcHeight(swigCPtr, this);
  }

  public long getSrcWidth() {
    return OgreJNI.Texture_getSrcWidth(swigCPtr, this);
  }

  public long getSrcDepth() {
    return OgreJNI.Texture_getSrcDepth(swigCPtr, this);
  }

  public void setHeight(long h) {
    OgreJNI.Texture_setHeight(swigCPtr, this, h);
  }

  public void setWidth(long w) {
    OgreJNI.Texture_setWidth(swigCPtr, this, w);
  }

  public void setDepth(long d) {
    OgreJNI.Texture_setDepth(swigCPtr, this, d);
  }

  public int getUsage() {
    return OgreJNI.Texture_getUsage(swigCPtr, this);
  }

  public void setUsage(int u) {
    OgreJNI.Texture_setUsage(swigCPtr, this, u);
  }

  public void createInternalResources() {
    OgreJNI.Texture_createInternalResources(swigCPtr, this);
  }

  public void freeInternalResources() {
    OgreJNI.Texture_freeInternalResources(swigCPtr, this);
  }

  public void copyToTexture(TexturePtr target) {
    OgreJNI.Texture_copyToTexture(swigCPtr, this, TexturePtr.getCPtr(target), target);
  }

  public void loadImage(Image img) {
    OgreJNI.Texture_loadImage(swigCPtr, this, Image.getCPtr(img), img);
  }

  public void loadRawData(SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t stream, int uWidth, int uHeight, PixelFormat eFormat) {
    OgreJNI.Texture_loadRawData(swigCPtr, this, SWIGTYPE_p_Ogre__SharedPtrT_Ogre__DataStream_t.getCPtr(stream), uWidth, uHeight, eFormat.swigValue());
  }

  public void _loadImages(SWIGTYPE_p_Ogre__vectorT_Ogre__Image_const_p_t__type images) {
    OgreJNI.Texture__loadImages(swigCPtr, this, SWIGTYPE_p_Ogre__vectorT_Ogre__Image_const_p_t__type.getCPtr(images));
  }

  public PixelFormat getFormat() {
    return PixelFormat.swigToEnum(OgreJNI.Texture_getFormat(swigCPtr, this));
  }

  public PixelFormat getDesiredFormat() {
    return PixelFormat.swigToEnum(OgreJNI.Texture_getDesiredFormat(swigCPtr, this));
  }

  public PixelFormat getSrcFormat() {
    return PixelFormat.swigToEnum(OgreJNI.Texture_getSrcFormat(swigCPtr, this));
  }

  public void setFormat(PixelFormat pf) {
    OgreJNI.Texture_setFormat(swigCPtr, this, pf.swigValue());
  }

  public boolean hasAlpha() {
    return OgreJNI.Texture_hasAlpha(swigCPtr, this);
  }

  public void setDesiredIntegerBitDepth(int bits) {
    OgreJNI.Texture_setDesiredIntegerBitDepth(swigCPtr, this, bits);
  }

  public int getDesiredIntegerBitDepth() {
    return OgreJNI.Texture_getDesiredIntegerBitDepth(swigCPtr, this);
  }

  public void setDesiredFloatBitDepth(int bits) {
    OgreJNI.Texture_setDesiredFloatBitDepth(swigCPtr, this, bits);
  }

  public int getDesiredFloatBitDepth() {
    return OgreJNI.Texture_getDesiredFloatBitDepth(swigCPtr, this);
  }

  public void setDesiredBitDepths(int integerBits, int floatBits) {
    OgreJNI.Texture_setDesiredBitDepths(swigCPtr, this, integerBits, floatBits);
  }

  public void setTreatLuminanceAsAlpha(boolean asAlpha) {
    OgreJNI.Texture_setTreatLuminanceAsAlpha(swigCPtr, this, asAlpha);
  }

  public boolean getTreatLuminanceAsAlpha() {
    return OgreJNI.Texture_getTreatLuminanceAsAlpha(swigCPtr, this);
  }

  public long getNumFaces() {
    return OgreJNI.Texture_getNumFaces(swigCPtr, this);
  }

  public HardwarePixelBufferPtr getBuffer(long face, long mipmap) {
    return new HardwarePixelBufferPtr(OgreJNI.Texture_getBuffer__SWIG_0(swigCPtr, this, face, mipmap), true);
  }

  public HardwarePixelBufferPtr getBuffer(long face) {
    return new HardwarePixelBufferPtr(OgreJNI.Texture_getBuffer__SWIG_1(swigCPtr, this, face), true);
  }

  public HardwarePixelBufferPtr getBuffer() {
    return new HardwarePixelBufferPtr(OgreJNI.Texture_getBuffer__SWIG_2(swigCPtr, this), true);
  }

  public void convertToImage(Image destImage, boolean includeMipMaps) {
    OgreJNI.Texture_convertToImage__SWIG_0(swigCPtr, this, Image.getCPtr(destImage), destImage, includeMipMaps);
  }

  public void convertToImage(Image destImage) {
    OgreJNI.Texture_convertToImage__SWIG_1(swigCPtr, this, Image.getCPtr(destImage), destImage);
  }

  public void getCustomAttribute(String name, SWIGTYPE_p_void pData) {
    OgreJNI.Texture_getCustomAttribute(swigCPtr, this, name, SWIGTYPE_p_void.getCPtr(pData));
  }

  public void createShaderAccessPoint(long bindPoint, TextureAccess access, int mipmapLevel, int textureArrayIndex, SWIGTYPE_p_Ogre__PixelFormat format) {
    OgreJNI.Texture_createShaderAccessPoint__SWIG_0(swigCPtr, this, bindPoint, access.swigValue(), mipmapLevel, textureArrayIndex, SWIGTYPE_p_Ogre__PixelFormat.getCPtr(format));
  }

  public void createShaderAccessPoint(long bindPoint, TextureAccess access, int mipmapLevel, int textureArrayIndex) {
    OgreJNI.Texture_createShaderAccessPoint__SWIG_1(swigCPtr, this, bindPoint, access.swigValue(), mipmapLevel, textureArrayIndex);
  }

  public void createShaderAccessPoint(long bindPoint, TextureAccess access, int mipmapLevel) {
    OgreJNI.Texture_createShaderAccessPoint__SWIG_2(swigCPtr, this, bindPoint, access.swigValue(), mipmapLevel);
  }

  public void createShaderAccessPoint(long bindPoint, TextureAccess access) {
    OgreJNI.Texture_createShaderAccessPoint__SWIG_3(swigCPtr, this, bindPoint, access.swigValue());
  }

  public void createShaderAccessPoint(long bindPoint) {
    OgreJNI.Texture_createShaderAccessPoint__SWIG_4(swigCPtr, this, bindPoint);
  }

}
