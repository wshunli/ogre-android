/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.Ogre;

public final class MemoryCategory {
  public final static MemoryCategory MEMCATEGORY_GENERAL = new MemoryCategory("MEMCATEGORY_GENERAL", OgreJNI.MEMCATEGORY_GENERAL_get());
  public final static MemoryCategory MEMCATEGORY_GEOMETRY = new MemoryCategory("MEMCATEGORY_GEOMETRY", OgreJNI.MEMCATEGORY_GEOMETRY_get());
  public final static MemoryCategory MEMCATEGORY_ANIMATION = new MemoryCategory("MEMCATEGORY_ANIMATION", OgreJNI.MEMCATEGORY_ANIMATION_get());
  public final static MemoryCategory MEMCATEGORY_SCENE_CONTROL = new MemoryCategory("MEMCATEGORY_SCENE_CONTROL", OgreJNI.MEMCATEGORY_SCENE_CONTROL_get());
  public final static MemoryCategory MEMCATEGORY_SCENE_OBJECTS = new MemoryCategory("MEMCATEGORY_SCENE_OBJECTS", OgreJNI.MEMCATEGORY_SCENE_OBJECTS_get());
  public final static MemoryCategory MEMCATEGORY_RESOURCE = new MemoryCategory("MEMCATEGORY_RESOURCE", OgreJNI.MEMCATEGORY_RESOURCE_get());
  public final static MemoryCategory MEMCATEGORY_SCRIPTING = new MemoryCategory("MEMCATEGORY_SCRIPTING", OgreJNI.MEMCATEGORY_SCRIPTING_get());
  public final static MemoryCategory MEMCATEGORY_RENDERSYS = new MemoryCategory("MEMCATEGORY_RENDERSYS", OgreJNI.MEMCATEGORY_RENDERSYS_get());
  public final static MemoryCategory MEMCATEGORY_COUNT = new MemoryCategory("MEMCATEGORY_COUNT", OgreJNI.MEMCATEGORY_COUNT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static MemoryCategory swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + MemoryCategory.class + " with value " + swigValue);
  }

  private MemoryCategory(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private MemoryCategory(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private MemoryCategory(String swigName, MemoryCategory swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static MemoryCategory[] swigValues = { MEMCATEGORY_GENERAL, MEMCATEGORY_GEOMETRY, MEMCATEGORY_ANIMATION, MEMCATEGORY_SCENE_CONTROL, MEMCATEGORY_SCENE_OBJECTS, MEMCATEGORY_RESOURCE, MEMCATEGORY_SCRIPTING, MEMCATEGORY_RENDERSYS, MEMCATEGORY_COUNT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

